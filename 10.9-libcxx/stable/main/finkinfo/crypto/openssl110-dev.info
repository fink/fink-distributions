# -*- coding: ascii; tab-width: 4 -*-
Package: openssl110-dev
Version: 1.1.1t
Revision: 1
Description: Secure Sockets Layer and Crypto Library
License: OSI-Approved
Homepage: https://www.openssl.org/
Maintainer: Daniel Johnson <daniel@daniel-johnson.org>

Conflicts: <<
	openssl100-dev,
	openssl110-dev,
	openssl300-dev,
	system-openssl-dev
<<
Replaces: <<
	openssl100-dev,
	openssl110-dev,
	openssl300-dev,
	system-openssl-dev
<<
BuildDependsOnly: True

Source: mirror:custom:source/openssl-%v.tar.gz
CustomMirror: <<
  Primary:   https://www.openssl.org/
  Secondary: ftp://ftp.openssl.org/
<<
Source-Checksum: SHA256(8dee9b24bdb1dcbf0c3d1e9b02fb8f6bf22165e807f45adeb7c9677536859d3b)

BuildDepends: text-template-pm
Depends: openssl110-shlibs (= %v-%r)
PatchScript: <<
	# https://github.com/openssl/openssl/pull/18719 (fixed post-1.1.1q)
	perl -pi -e 's|stdio.h\>|$&\n#include <string.h>|g' test/v3ext.c
<<
UseMaxBuildJobs: false
CompileScript: <<
#!/bin/sh -ev
        # disable Apple Crypto Random API for macOS 10.12 and lower
        # because it will be detected but is broken on 10.12
        # see: https://github.com/fink/fink-distributions/issues/888
        OSX_MAJOR_VERSION=`sw_vers -productVersion | cut -d. -f1-2`
        if dpkg --compare-versions "$OSX_MAJOR_VERSION" le "10.12"; then
           params="-DOPENSSL_NO_APPLE_CRYPTO_RANDOM"
        fi
	./config --prefix=%p --openssldir=%p/etc/ssl zlib-dynamic enable-ec_nistp_64_gcc_128 $params
	make
<<

InfoTest: <<
	TestScript: make test || exit 2
<<

InstallScript: <<
#!/bin/sh -ev
 make install DESTDIR=%d

 ## skipped-links contains symlink commands that fail because they
 ## would involve filenames that differ only by case (rebuild on a
 ## case-insensitive filesystem to make sure the list is complete).
 ## as of 1.0.0k-3, the list is:
 ##   ln -s "bn_internal.3" "bn_print.3" # created iff build on case-sens fs
 ##   ln -s "hmac.3" "HMAC.3"            # not created anywhere
 ##   ln -s "md5.3" "MD5.3"              # not created anywhere
 ##   ln -s "mdc2.3" "MDC2.3"            # not created anywhere
 ##   ln -s "pem.3" "PEM.3"              # not created anywhere
 ##   ln -s "rc4.3" "RC4.3"              # not created anywhere
 ##   ln -s "ssl.3" "SSL.3"              # not created anywhere
 ## i.e., those symlink names already exist as something else.
 
 ## Should patch build to avoid even trying to create these so get
 ## same .deb on all build FS even without hacks.
 ## There remain symlinks BN_print.3 -> BN_bn2bin.3 and bn_print.3 -> bn_internal.3, we rename the latter.
 rm -f %i/share/man/man3/BN_print.3 %i/share/man/man3/bn_print.3 || true
 ln -fs BN_bn2bin.3 %i/share/man/man3/BN_print.3
 ln -fs bn_internal.3 %i/share/man/man3/_bn_print.3

 ### for comptibility with libmd (don't know how to set up
 ## update-alternatives with original capitalisation).
 mv %i/share/man/man3/MD5.3 %i/share/man/man3/md5.3.openssl110
 for i in 2 4; do
	rm %i/share/man/man3/MD$i.3
	cp %i/share/man/man3/md5.3.openssl110 %i/share/man/man3/md$i.3.openssl110
 done
 
 # Remove static libs.
 rm %i/lib/*.a
<<

DocFiles: README LICENSE CHANGES FAQ NEWS

PostInstScript: <<
  update-alternatives --install %p/share/man/man3/md5.3 md5.3 %p/share/man/man3/md5.3.openssl110 90 \
    --slave %p/share/man/man3/md2.3 md2.3 %p/share/man/man3/md2.3.openssl110 \
    --slave	%p/share/man/man3/md4.3	md4.3 %p/share/man/man3/md4.3.openssl110
<<
PreRmScript: <<
  if [ $1 != "upgrade" ]; then
    update-alternatives --remove md5.3 %p/share/man/man3/md5.3.openssl110
  fi
<<

SplitOff: <<
  Package: openssl110-shlibs
  Files: lib/libcrypto.1.1.dylib lib/libssl.1.1.dylib lib/engines-1.1
  Shlibs: <<
    %p/lib/libcrypto.1.1.dylib 1.1.0 %n (>= 1.1.0-1)
    %p/lib/libssl.1.1.dylib 1.1.0 %n (>= 1.1.0-1)
  <<
  DocFiles: README LICENSE CHANGES FAQ NEWS
<<

SplitOff2: <<
  Package: openssl
  Depends: openssl110-shlibs (= %v-%r)
  Files: bin etc share/man/man1
  DocFiles: README LICENSE CHANGES FAQ NEWS
  ConfFiles: %p/etc/ssl/openssl.cnf
<<

DescDetail: <<
OpenSSL is a free implementation of the Secure Sockets Layer (SSL)
and Transport Layer Security (TLS) protocols. It includes command line
utilities to manage certificates and a separate library implementing common
cryptograhic algorithms.
<<
