Package: libzmq6-shlibs
# Note nonstandard fink package-naming for libversions:
#   libzmq2-shlibs: libzmq.1.dylib
#   libzmq4-shlibs: libzmq.3.dylib
#   libzmq6-shlibs: libzmq.5.dylib
#
# Remember to look for updated cppzmq when updating here
Version: 4.3.5
Revision: 1
Description: No config transport layer
# most but possibly not all is actually MPL-2.0
License: LGPL
Maintainer: None <fink-devel@lists.sourceforge.net>

Depends: libsodium26-shlibs
BuildDepends: <<
	asciidoc,
	fink-package-precedence,
	libsodium26,
	pkgconfig,
	xmlto
<<
GCC: 4.0

Source: https://github.com/zeromq/libzmq/releases/download/v%v/zeromq-%v.tar.gz
Source-Checksum: SHA256(6653ef5910f17954861fe72332e68b03ca6e4d9c7160eb3a8de5a5a913bfab43)

# Patches from upstream issues (not yet accepted upstream):
#   https://github.com/zeromq/libzmq/issues/4610
#   https://github.com/zeromq/libzmq/issues/4595
# Patches based on Debian:
#   https://sources.debian.org/patches/zeromq3/4.3.5-1/disable-test_security_curve.patch
PatchFile: %n.patch
PatchFile-MD5: 1dfb38d88562adc246451feefa223be7

# re-enable libsodium, per NEWS recommendation
ConfigureParams: <<
	--disable-silent-rules \
	--with-libsodium
<<
CompileScript: <<
	%{default_script}
	fink-package-precedence --prohibit-bdep=libzmq6 .
<<
InfoTest: <<
	TestScript: <<
		ulimit -n 1200; make check || exit 2
		fink-package-precedence --prohibit-bdep=libzmq6 . || exit 2
	<<
<<

DocFiles: AUTHORS ChangeLog LICENSE NEWS

Shlibs: %p/lib/libzmq.5.dylib 8.0.0 libzmq (>= 4.3.1-1)

SplitOff: <<
	Package: libzmq6
	Depends: %N (= %v-%r)
	Conflicts: libzmq2, libzmq4, libzmq6
	Replaces:  libzmq2, libzmq4, libzmq6
	BuildDependsOnly: true
	Files: <<
		bin
		include
		lib/libzmq.{a,dylib,la}
		lib/pkgconfig
		share/man
	<<
	DocFiles: AUTHORS ChangeLog LICENSE NEWS
<<

Homepage: https://zeromq.org/
DescDetail: <<
MQ (ZeroMQ, 0MQ, zmq) looks like an embeddable networking library but
acts like a concurrency framework. It gives you sockets that carry
whole messages across various transports like in-process,
inter-process, TCP, and multicast. You can connect sockets N-to-N with
patterns like fanout, pub-sub, task distribution, and
request-reply. It's fast enough to be the fabric for clustered
products. Its asynchronous I/O model gives you scalable multicore
applications, built as asynchronous message-processing tasks. It has a
score of language APIs and runs on most operating systems.
<<
DescPort: <<
On 10.11 and earlier, -Werror,unused-const-variable is turned on, which
causes a build failure in src/clock.cpp::nsecs_per_usec. Turn if off
everywhere for simplicity. Should have no effect on 10.12+.

Use proposed replacement for deprecated sprintf(). Upstream #4478.
<<
DescPackaging: <<
Previous maintainer: Kurt Schwehr <goatbar@users.sourceforge.net>
<<
