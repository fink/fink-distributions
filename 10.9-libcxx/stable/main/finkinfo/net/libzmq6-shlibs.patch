diff -ruN zeromq-4.3.4-orig/src/tcp_address.cpp zeromq-4.3.4/src/tcp_address.cpp
--- zeromq-4.3.4-orig/src/tcp_address.cpp	2021-01-03 16:46:01.000000000 -0500
+++ zeromq-4.3.4/src/tcp_address.cpp	2022-12-25 15:33:46.000000000 -0500
@@ -129,7 +129,7 @@
     pos += hbuf_len;
     memcpy (pos, ipv6_suffix_, sizeof ipv6_suffix_ - 1);
     pos += sizeof ipv6_suffix_ - 1;
-    pos += sprintf (pos, "%d", ntohs (port_));
+    pos += snprintf (pos, sizeof(pos), "%d", ntohs (port_));
     return std::string (buf, pos - buf);
 }
 
diff -ruN zeromq-4.3.4-orig/src/udp_engine.cpp zeromq-4.3.4/src/udp_engine.cpp
--- zeromq-4.3.4-orig/src/udp_engine.cpp	2021-01-03 16:46:01.000000000 -0500
+++ zeromq-4.3.4/src/udp_engine.cpp	2022-12-25 15:34:28.000000000 -0500
@@ -368,7 +368,7 @@
 
     char port[6];
     const int port_len =
-      sprintf (port, "%d", static_cast<int> (ntohs (addr_->sin_port)));
+      snprintf (port, sizeof (port), "%d", static_cast<int> (ntohs (addr_->sin_port)));
     zmq_assert (port_len > 0);
 
     const size_t name_len = strlen (name);
diff -ruN zeromq-4.3.4-orig/tests/test_inproc_connect.cpp zeromq-4.3.4/tests/test_inproc_connect.cpp
--- zeromq-4.3.4-orig/tests/test_inproc_connect.cpp	2021-01-03 16:46:02.000000000 -0500
+++ zeromq-4.3.4/tests/test_inproc_connect.cpp	2022-12-25 19:57:22.000000000 -0500
@@ -153,7 +153,7 @@
         void *connect_socket = test_context_socket (ZMQ_ROUTER);
 
         char ep[32];
-        sprintf (ep, "inproc://cbbrr%d", i);
+        snprintf (ep, sizeof(ep), "inproc://cbbrr%d", i);
         TEST_ASSERT_SUCCESS_ERRNO (zmq_connect (connect_socket, ep));
 
         // Cleanup
@@ -231,7 +231,7 @@
     // Set up thread arguments: context followed by endpoint string
     for (unsigned int i = 0; i < no_of_times; ++i) {
         thr_args[i] = (void *) endpts[i];
-        sprintf (endpts[i], "inproc://foo_%d", i);
+        snprintf (endpts[i], sizeof(endpts[i]), "inproc://foo_%d", i);
     }
 
     // Spawn all threads as simultaneously as possible
diff -ruN zeromq-4.3.4-orig/tests/test_issue_566.cpp zeromq-4.3.4/tests/test_issue_566.cpp
--- zeromq-4.3.4-orig/tests/test_issue_566.cpp	2020-09-06 06:47:31.000000000 -0400
+++ zeromq-4.3.4/tests/test_issue_566.cpp	2022-12-25 19:57:58.000000000 -0500
@@ -58,7 +58,7 @@
         void *dealer = zmq_socket (ctx2, ZMQ_DEALER);
         //  Leave space for NULL char from sprintf, gcc warning
         char routing_id[11];
-        sprintf (routing_id, "%09d", cycle);
+        snprintf (routing_id, sizeof(routing_id), "%09d", cycle);
         TEST_ASSERT_SUCCESS_ERRNO (
           zmq_setsockopt (dealer, ZMQ_ROUTING_ID, routing_id, 10));
         int rcvtimeo = 1000;
diff -ruN zeromq-4.3.4-orig/tests/test_proxy.cpp zeromq-4.3.4/tests/test_proxy.cpp
--- zeromq-4.3.4-orig/tests/test_proxy.cpp	2021-01-03 16:46:02.000000000 -0500
+++ zeromq-4.3.4/tests/test_proxy.cpp	2022-12-25 19:59:08.000000000 -0500
@@ -88,7 +88,7 @@
     TEST_ASSERT_SUCCESS_ERRNO (
       zmq_setsockopt (endpoint, ZMQ_LINGER, &linger, sizeof (linger)));
     char endpoint_source[256];
-    sprintf (endpoint_source, "inproc://endpoint%d", databag->id);
+    snprintf (endpoint_source, sizeof(endpoint_source), "inproc://endpoint%d", databag->id);
     TEST_ASSERT_SUCCESS_ERRNO (zmq_connect (endpoint, endpoint_source));
     char *my_endpoint = s_recv (endpoint);
     TEST_ASSERT_NOT_NULL (my_endpoint);
@@ -107,7 +107,7 @@
     char content[CONTENT_SIZE_MAX] = {};
     // Set random routing id to make tracing easier
     char routing_id[ROUTING_ID_SIZE] = {};
-    sprintf (routing_id, "%04X-%04X", rand () % 0xFFFF, rand () % 0xFFFF);
+    snprintf (routing_id, sizeof(routing_id), "%04X-%04X", rand () % 0xFFFF, rand () % 0xFFFF);
     TEST_ASSERT_SUCCESS_ERRNO (zmq_setsockopt (
       client, ZMQ_ROUTING_ID, routing_id,
       ROUTING_ID_SIZE)); // includes '\0' as an helper for printf
@@ -164,7 +164,7 @@
         }
 
         if (keep_sending) {
-            sprintf (content, "request #%03d", ++request_nbr); // CONTENT_SIZE
+            snprintf (content, sizeof(content), "request #%03d", ++request_nbr); // CONTENT_SIZE
             if (is_verbose)
                 printf ("client send - routing_id = %s    request #%03d\n",
                         routing_id, request_nbr);
@@ -228,7 +228,7 @@
         TEST_ASSERT_NOT_NULL (endpoint_receivers[i]);
         TEST_ASSERT_SUCCESS_ERRNO (zmq_setsockopt (
           endpoint_receivers[i], ZMQ_LINGER, &linger, sizeof (linger)));
-        sprintf (endpoint_source, "inproc://endpoint%d", i);
+        snprintf (endpoint_source, sizeof(endpoint_source), "inproc://endpoint%d", i);
         TEST_ASSERT_SUCCESS_ERRNO (
           zmq_bind (endpoint_receivers[i], endpoint_source));
     }
diff -ruN zeromq-4.3.4-orig/tests/test_reqrep_tcp.cpp zeromq-4.3.4/tests/test_reqrep_tcp.cpp
--- zeromq-4.3.4-orig/tests/test_reqrep_tcp.cpp	2020-09-06 06:47:31.000000000 -0400
+++ zeromq-4.3.4/tests/test_reqrep_tcp.cpp	2022-12-25 15:41:28.000000000 -0500
@@ -66,7 +66,7 @@
                            const int port_,
                            const char *bind_address_)
 {
-    sprintf (connect_address_, "tcp://%s:%i;%s", ipv6_ ? "[::1]" : "127.0.0.1",
+    snprintf (connect_address_, sizeof(connect_address_), "tcp://%s:%i;%s", ipv6_ ? "[::1]" : "127.0.0.1",
              port_, strrchr (bind_address_, '/') + 1);
 }
 
diff -ruN zeromq-4.3.4-orig/tests/test_setsockopt.cpp zeromq-4.3.4/tests/test_setsockopt.cpp
--- zeromq-4.3.4-orig/tests/test_setsockopt.cpp	2021-01-16 09:15:51.000000000 -0500
+++ zeromq-4.3.4/tests/test_setsockopt.cpp	2022-12-25 20:02:12.000000000 -0500
@@ -120,7 +120,7 @@
     TEST_ASSERT_EQUAL_INT8 ('\0', devname[0]);
     TEST_ASSERT_EQUAL_UINT (1, buflen);
 
-    sprintf (devname, "testdev");
+    snprintf (devname, sizeof(devname), "testdev");
     buflen = strlen (devname);
 
     TEST_ASSERT_SUCCESS_ERRNO (
diff -ruN zeromq-4.3.4-orig/tests/test_ws_transport.cpp zeromq-4.3.4/tests/test_ws_transport.cpp
--- zeromq-4.3.4-orig/tests/test_ws_transport.cpp	2021-01-16 09:15:51.000000000 -0500
+++ zeromq-4.3.4/tests/test_ws_transport.cpp	2022-12-25 20:23:27.000000000 -0500
@@ -47,7 +47,7 @@
       zmq_getsockopt (sb, ZMQ_LAST_ENDPOINT, bind_address, &addr_length));
 
     // Windows can't connect to 0.0.0.0
-    sprintf (connect_address, "ws://127.0.0.1%s", strrchr (bind_address, ':'));
+    snprintf (connect_address, sizeof(connect_address), "ws://127.0.0.1%s", strrchr (bind_address, ':'));
 
     TEST_ASSERT_SUCCESS_ERRNO (zmq_connect (sc, connect_address));
 
diff -ruN zeromq-4.3.4-orig/tests/testutil.cpp zeromq-4.3.4/tests/testutil.cpp
--- zeromq-4.3.4-orig/tests/testutil.cpp	2021-01-17 07:00:32.000000000 -0500
+++ zeromq-4.3.4/tests/testutil.cpp	2022-12-25 15:34:59.000000000 -0500
@@ -510,7 +510,7 @@
         addr_len = sizeof (struct sockaddr_storage);
         TEST_ASSERT_SUCCESS_RAW_ERRNO (
           getsockname (s_pre, (struct sockaddr *) &addr, &addr_len));
-        sprintf (my_endpoint_, "%s://%s:%u",
+        snprintf (my_endpoint_, sizeof(my_endpoint_), "%s://%s:%u",
                  protocol_ == IPPROTO_TCP
                    ? "tcp"
                    : protocol_ == IPPROTO_UDP
