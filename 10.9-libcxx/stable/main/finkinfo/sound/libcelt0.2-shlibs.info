Package: libcelt0.2-shlibs
Version: 0.11.2
Revision: 2
Description: Ultra-low delay audio codec
License: BSD
Maintainer: Hanspeter Niederstrasser <nieder@users.sourceforge.net>
BuildDepends: pkgconfig (>= 0.9.0-1), libogg (>= 1.1.4-1)
Source: http://downloads.xiph.org/releases/celt/celt-%v.tar.gz
Source-Checksum: SHA256(1836501b6414b89f01d59b0fb1566fc552a37fcaf4714d63682bd80d624e458e)
PatchScript: <<
	# Patch configure to not link like Puma on Yosemite
	perl -pi -e 's|10\.\[012\]\*|10.[012][,.]*|g' configure
<<
ConfigureParams: --mandir=%p/share/man --disable-dependency-tracking --disable-static
InfoTest: <<
	TestScript: make check || exit 2
<<
InstallScript: make install DESTDIR=%d
DocFiles: AUTHORS COPYING ChangeLog NEWS README TODO
Shlibs: <<
    %p/lib/libcelt0.2.dylib 3.0.0 %n (>= 0.11.1-1)
<<
Splitoff: <<
  Package: celt
  Depends: <<
    %N (= %v-%r),
    libogg-shlibs (>= 1.1.4-1)
  <<
  Files: <<
    bin
  <<
  DocFiles: AUTHORS COPYING ChangeLog NEWS README TODO
<<
Splitoff2: <<
  Package: libcelt0.2-dev
  Depends: %N (= %v-%r)
  BuildDependsOnly: true
  Conflicts: celt-dev, libcelt0.2-dev
  Replaces: celt-dev, libcelt0.2-dev
  Files: <<
    include
    lib/pkgconfig
    lib/libcelt0.dylib
    lib/libcelt0.la
  <<
  DocFiles: AUTHORS COPYING ChangeLog NEWS README TODO
<<
Homepage: http://www.celt-codec.org
DescDetail: <<
 CELT stands for "Constrained Energy Lapped Transform". It applies
 some of the CELP principles, but does everything in the frequency
 domain, which removes some of the limitations of CELP. CELT is
 suitable for both speech and music and currently features: 
  Ultra-low latency (typically from 3 to 9 ms) 
  Full audio bandwidth (>20kHz; sample rates from 32 kHz to 96 kHz)
  Support for both speech and music
  A quality/bitrate trade-off competitive with widely used high delay codecs
  Stereo support
  Packet loss concealment
  Constant bit-rates from 32 kbps to 128 kbps and above
  A fixed-point version of the encoder and decoder
 The CELT codec is meant to bridge the gap between Vorbis and Speex
 for applications where both high quality audio and low delay are desired.
<<
