diff -Nurd ruby-3.2.6.orig/defs/gmake.mk ruby-3.2.6/defs/gmake.mk
--- ruby-3.2.6.orig/defs/gmake.mk	2024-10-30 05:47:11
+++ ruby-3.2.6/defs/gmake.mk	2025-10-25 06:44:51
@@ -295,9 +295,7 @@
 bundled-gem-srcdir = $(srcdir)/gems/src/$(1)
 bundled-gem-extracted = $(srcdir)/.bundle/gems/$(1)-$(2)
 
-update-gems: | $(patsubst %,$(srcdir)/gems/%.gem,$(bundled-gems))
-update-gems: | $(call foreach-bundled-gems-rev,bundled-gem-gemfile)
-update-gems: | $(call foreach-bundled-gems-rev,bundled-gem-srcdir)
+update-gems:
 
 test-bundler-precheck: | $(srcdir)/.bundle/cache
 
diff -Nurd ruby-3.2.6.orig/mjit.c ruby-3.2.6/mjit.c
--- ruby-3.2.6.orig/mjit.c	2024-10-30 05:47:11
+++ ruby-3.2.6/mjit.c	2025-10-25 06:44:51
@@ -586,6 +586,7 @@
 {
     const char *rest_args[] = {
 # ifdef __clang__
+        "-Xclang",
         "-emit-pch",
         "-c",
 # endif
diff -Nurd ruby-3.2.6.orig/spec/ruby/core/process/daemon_spec.rb ruby-3.2.6/spec/ruby/core/process/daemon_spec.rb
--- ruby-3.2.6.orig/spec/ruby/core/process/daemon_spec.rb	2024-10-30 05:47:11
+++ ruby-3.2.6/spec/ruby/core/process/daemon_spec.rb	2025-10-25 06:44:51
@@ -2,6 +2,9 @@
 require_relative 'fixtures/common'
 
 platform_is_not :windows do
+  # macOS 15 is not working this examples
+  return if /darwin/ =~ RUBY_PLATFORM && /15/ =~ `sw_vers -productVersion`
+
   describe :process_daemon_keep_stdio_open_false, shared: true do
     it "redirects stdout to /dev/null" do
       @daemon.invoke("keep_stdio_open_false_stdout", @object).should == ""
diff -Nurd ruby-3.2.6.orig/spec/ruby/core/string/index_spec.rb ruby-3.2.6/spec/ruby/core/string/index_spec.rb
--- ruby-3.2.6.orig/spec/ruby/core/string/index_spec.rb	2024-10-30 05:47:11
+++ ruby-3.2.6/spec/ruby/core/string/index_spec.rb	2025-10-25 06:44:51
@@ -224,17 +224,6 @@
     $~.should == nil
   end
 
-  ruby_bug "#20421", ""..."3.2" do
-    it "always clear $~" do
-      "a".index(/a/)
-      $~.should_not == nil
-
-      string = "blablabla"
-      string.index(/bla/, string.length + 1)
-      $~.should == nil
-    end
-  end
-
   it "starts the search at the given offset" do
     "blablabla".index(/.{0}/, 5).should == 5
     "blablabla".index(/.{1}/, 5).should == 5
diff -Nurd ruby-3.2.6.orig/spec/ruby/library/socket/ipsocket/getaddress_spec.rb ruby-3.2.6/spec/ruby/library/socket/ipsocket/getaddress_spec.rb
--- ruby-3.2.6.orig/spec/ruby/library/socket/ipsocket/getaddress_spec.rb	2024-10-30 05:47:11
+++ ruby-3.2.6/spec/ruby/library/socket/ipsocket/getaddress_spec.rb	2025-10-25 12:16:40
@@ -17,9 +17,11 @@
   # There is no way to make this fail-proof on all machines, because
   # DNS servers like opendns return A records for ANY host, including
   # traditionally invalidly named ones.
-  it "raises an error on unknown hostnames" do
-    -> {
-      IPSocket.getaddress("rubyspecdoesntexist.fallingsnow.net")
-    }.should raise_error(SocketError)
+  quarantine! do
+    it "raises an error on unknown hostnames" do
+      -> {
+        IPSocket.getaddress("rubyspecdoesntexist.ruby-lang.org")
+      }.should raise_error(SocketError)
+    end
   end
 end
diff -Nurd ruby-3.2.6.orig/spec/ruby/library/socket/socket/gethostbyaddr_spec.rb ruby-3.2.6/spec/ruby/library/socket/socket/gethostbyaddr_spec.rb
--- ruby-3.2.6.orig/spec/ruby/library/socket/socket/gethostbyaddr_spec.rb	2024-10-30 05:47:11
+++ ruby-3.2.6/spec/ruby/library/socket/socket/gethostbyaddr_spec.rb	2025-10-25 17:54:01
@@ -113,7 +113,7 @@
           suppress_warning { Socket.gethostbyaddr(@addr, :INET6) }.should be_an_instance_of(Array)
         end
 
-        platform_is_not :windows, :wsl do
+        platform_is_not :windows, :wsl, :darwin do
           it 'raises SocketError when the address is not supported by the family' do
             -> { suppress_warning { Socket.gethostbyaddr(@addr, :INET) } }.should raise_error(SocketError)
           end
diff -Nurd ruby-3.2.6.orig/test/-ext-/bug_reporter/test_bug_reporter.rb ruby-3.2.6/test/-ext-/bug_reporter/test_bug_reporter.rb
--- ruby-3.2.6.orig/test/-ext-/bug_reporter/test_bug_reporter.rb	2024-10-30 05:47:11
+++ ruby-3.2.6/test/-ext-/bug_reporter/test_bug_reporter.rb	2025-10-25 06:44:51
@@ -9,6 +9,8 @@
   end
 
   def test_bug_reporter_add
+    pend "Various macOS/XCode versions are not working with this assertion" if /darwin/ =~ RUBY_PLATFORM
+
     omit if ENV['RUBY_ON_BUG']
 
     description = RUBY_DESCRIPTION
diff -Nurd ruby-3.2.6.orig/test/net/http/test_https.rb ruby-3.2.6/test/net/http/test_https.rb
--- ruby-3.2.6.orig/test/net/http/test_https.rb	2024-10-30 05:47:11
+++ ruby-3.2.6/test/net/http/test_https.rb	2025-10-25 06:44:51
@@ -167,18 +167,16 @@
   def test_session_reuse_but_expire
     # FIXME: The new_session_cb is known broken for clients in OpenSSL 1.1.0h.
     omit if OpenSSL::OPENSSL_LIBRARY_VERSION.include?('OpenSSL 1.1.0h')
-    omit if OpenSSL::OPENSSL_LIBRARY_VERSION.include?('OpenSSL 3.2.')
-    omit if OpenSSL::OPENSSL_LIBRARY_VERSION.include?('OpenSSL 3.3.')
 
     http = Net::HTTP.new(HOST, config("port"))
     http.use_ssl = true
     http.cert_store = TEST_STORE
 
-    http.ssl_timeout = -1
+    http.ssl_timeout = 1
     http.start
     http.get("/")
     http.finish
-
+    sleep 1.25
     http.start
     http.get("/")
 
diff -Nurd ruby-3.2.6.orig/test/openssl/test_x509req.rb ruby-3.2.6/test/openssl/test_x509req.rb
--- ruby-3.2.6.orig/test/openssl/test_x509req.rb	2024-10-30 05:47:11
+++ ruby-3.2.6/test/openssl/test_x509req.rb	2025-10-25 06:44:51
@@ -39,11 +39,6 @@
     assert_equal(0, req.version)
     req = OpenSSL::X509::Request.new(req.to_der)
     assert_equal(0, req.version)
-
-    req = issue_csr(1, @dn, @rsa1024, OpenSSL::Digest.new('SHA256'))
-    assert_equal(1, req.version)
-    req = OpenSSL::X509::Request.new(req.to_der)
-    assert_equal(1, req.version)
   end
 
   def test_subject
@@ -106,7 +101,7 @@
     assert_equal(false, req.verify(@rsa2048))
     assert_equal(false, request_error_returns_false { req.verify(@dsa256) })
     assert_equal(false, request_error_returns_false { req.verify(@dsa512) })
-    req.version = 1
+    req.subject = OpenSSL::X509::Name.parse("/C=JP/CN=FooBarFooBar")
     assert_equal(false, req.verify(@rsa1024))
   rescue OpenSSL::X509::RequestError # RHEL 9 disables SHA1
   end
diff -Nurd ruby-3.2.6.orig/test/ruby/test_argf.rb ruby-3.2.6/test/ruby/test_argf.rb
--- ruby-3.2.6.orig/test/ruby/test_argf.rb	2024-10-30 05:47:11
+++ ruby-3.2.6/test/ruby/test_argf.rb	2025-10-25 06:44:51
@@ -267,6 +267,7 @@
   end
 
   def test_inplace_nonascii
+    omit "not working on MinGW" if /mingw/ =~ RUBY_PLATFORM
     ext = Encoding.default_external or
       omit "no default external encoding"
     t = nil
diff -Nurd ruby-3.2.6.orig/test/ruby/test_process.rb ruby-3.2.6/test/ruby/test_process.rb
--- ruby-3.2.6.orig/test/ruby/test_process.rb	2024-10-30 05:47:11
+++ ruby-3.2.6/test/ruby/test_process.rb	2025-10-25 06:44:51
@@ -1837,6 +1837,8 @@
     end
 
     def test_daemon_noclose
+      pend "Various macOS/XCode versions are not working with this assertion" if /darwin/ =~ RUBY_PLATFORM
+
       data = IO.popen("-", "r+") do |f|
         break f.read if f
         Process.daemon(false, true)
diff -Nurd ruby-3.2.6.orig/test/ruby/test_rubyoptions.rb ruby-3.2.6/test/ruby/test_rubyoptions.rb
--- ruby-3.2.6.orig/test/ruby/test_rubyoptions.rb	2024-10-30 05:47:11
+++ ruby-3.2.6/test/ruby/test_rubyoptions.rb	2025-10-25 06:44:51
@@ -306,6 +306,7 @@
   end
 
   def test_chdir
+    omit "not working on MinGW" if /mingw/ =~ RUBY_PLATFORM
     assert_in_out_err(%w(-C), "", [], /Can't chdir/)
 
     assert_in_out_err(%w(-C test_ruby_test_rubyoptions_foobarbazqux), "", [], /Can't chdir/)
@@ -787,6 +788,8 @@
   end
 
   def assert_segv(args, message=nil)
+    pend "Various macOS/XCode versions are not working with this assertion" if /darwin/ =~ RUBY_PLATFORM
+
     omit if ENV['RUBY_ON_BUG']
 
     # We want YJIT to be enabled in the subprocess if it's enabled for us
@@ -971,6 +974,7 @@
     # Since the codepage is shared all processes per conhost.exe, do
     # not chcp, or parallel test may break.
     def test_locale_codepage
+      omit "not working on MinGW" if /mingw/ =~ RUBY_PLATFORM
       locale = Encoding.find("locale")
       list = %W"\u{c7} \u{452} \u{3066 3059 3068}"
       list.each do |s|
diff -Nurd ruby-3.2.6.orig/test/ruby/test_vm_dump.rb ruby-3.2.6/test/ruby/test_vm_dump.rb
--- ruby-3.2.6.orig/test/ruby/test_vm_dump.rb	2024-10-30 05:47:11
+++ ruby-3.2.6/test/ruby/test_vm_dump.rb	2025-10-25 06:44:51
@@ -3,6 +3,8 @@
 
 class TestVMDump < Test::Unit::TestCase
   def assert_darwin_vm_dump_works(args)
+    pend "Various macOS/XCode versions are not working with this assertion" if /darwin/ =~ RUBY_PLATFORM
+
     omit if RUBY_PLATFORM !~ /darwin/
     assert_in_out_err(args, "", [], /^\[IMPORTANT\]/)
   end
@@ -12,7 +14,7 @@
   end
 
   def test_darwin_segv_in_syscall
-    assert_darwin_vm_dump_works('-e1.times{Process.kill :SEGV,$$}')
+    assert_darwin_vm_dump_works(['-e1.times{Process.kill :SEGV,$$}'])
   end
 
   def test_darwin_invalid_access
