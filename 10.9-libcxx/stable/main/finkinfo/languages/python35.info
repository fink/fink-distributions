# -*- coding: ascii; tab-width: 4; x-counterpart: python35.patch -*-
Info2: <<
Package: python%type_pkg[python]
Version: 3.5.10
Revision: 1
Type: python 3.5
Maintainer: Daniel Johnson <daniel@daniel-johnson.org>
Depends: <<
	%N-shlibs (= %v-%r),
	blt-shlibs,
	bzip2-shlibs,
	expat1-shlibs (>= 2.2.5-1),
	fink (>= 0.34.8),
	gdbm4-shlibs,
	libffi6-shlibs,
	libgettext8-shlibs,
	liblzma5-shlibs,
	libncursesw5-shlibs,
	openssl110-shlibs (>= 1.1.1d-1),
	readline7-shlibs,
	sqlite3-shlibs  (>= 3.24.0-1),
	tcltk (>= 8.4.1-1),
	x11
<<
BuildDepends: <<
	blt-dev (>= 2.4z-15),
	bzip2-dev,
	expat1 (>= 2.2.5-1),
	fink (>= 0.32), 
	gdbm4,
	gettext-bin,
	gettext-tools,
	libffi6,
	libgettext8-dev,
	liblzma5,
	libncursesw5,
	readline7,
	sqlite3-dev (>= 3.24.0-1),
	openssl110-dev (>= 1.1.1d-1),
	tcltk-dev (>= 8.4.1-1),
	x11-dev
<<
# Python 3.4+ wants to install these packages but that conflicts with fink's.
Recommends: pip-py%type_pkg[python], setuptools-tng-py%type_pkg[python]

Provides: argparse-py%type_pkg[python], futures-py%type_pkg[python], enum34-py%type_pkg[python], pathlib-py%type_pkg[python]

Source: https://www.python.org/ftp/python/%v/Python-%v.tar.xz
Source-Checksum: SHA256(0f0fa8685c1dc1f1dacb0b4e7779796b90aef99dc1fa4967a71b9da7b57d4a28)
# Doc tarball missing upstream.
#Source2: https://www.python.org/ftp/python/doc/%v/python-%v-docs-html.tar.bz2
#Source2-MD5: c576463076f94da8daaf39f8eaeacd14
PatchFile: %n.patch
PatchFile-MD5: f07ce62c88ca3be5afd05362a935f0a6
PatchFile2: %n-darwin20.patch
PatchFile2-MD5: 5fc4c8c53d930e55ec850bb3bc9cccbf
PatchScript: <<
	#!/bin/sh -ex
	sed 's|@PREFIX@|%p|g' < %{PatchFile} | patch -p1
	patch -p1 < %{PatchFile2}
	# /tmp and /var/tmp are symlinks to /private/tmp and /private/var/tmp
	# on OS X. That's fine except it can cause tests in some packages to
	# fail since '/tmp' != '/private/tmp'. Default to using /private/tmp.
	perl -pi -e "s|'/tmp', '/var/tmp'|'/private/tmp', '/private/var/tmp'|" Lib/tempfile.py
	perl -pi -e 's/ -lSystemStubs//' ./configure
	perl -pi -e 's/-O3/-fwrapv -O3/' ./configure
	# Skip broken test on APFS that tries to explicitly to open(2) a file with a filename that is an illegal byte
	# sequence and APFS returns EILSEQ a as a result.
	# See  https://developer.apple.com/library/content/documentation/FileManagement/Conceptual/APFS_Guide/FAQ/FAQ.html
	# APFS accepts only valid UTF-8 encoded filenames for creation, and preserves both case and normalization of the filename on disk in all variants.
	if [ `diskutil info / | grep -c "APFS"` -gt 0 ] ; then
		perl -pi -e "s|unittest.skipUnless\(support.TESTFN_UNDECODABLE|unittest.skipUnless\(0|" Lib/test/test_httpservers.py
	fi
<<

UseMaxBuildJobs: true

SetCC: gcc
SetCXX: g++

ConfigureParams: <<
	--enable-shared \
	--enable-loadable-sqlite-extensions \
	--with-dbmliborder=gdbm \
	--with-system-expat \
	--with-system-ffi \
	--with-tcltk-includes="-I%p/include -I/opt/X11/include" \
	--with-tcltk-libs="-L%p/lib -ltcl -ltk" \
	--without-ensurepip
<<

CompileScript: <<
#!/bin/sh -ex

	# for OS X 10.14, ensure full SDK is available, but include it after any fink specific versions.
	if [ "$(uname -r | cut -d. -f1)" -ge 18 ]; then
		SDK_PATH="$(xcrun --sdk macosx --show-sdk-path)"
		export CFLAGS="-Wno-nullability-completeness"
		export CPPFLAGS="-I%p/include -I%p/include/ncursesw -I$SDK_PATH/usr/include"
		perl -pi -e "s|/usr/include|$SDK_PATH/usr/include|" setup.py
	fi
	# for macOS 11, need help finding libz in new system-library cache
	# https://bugs.python.org/issue41116
	if [ "$(uname -r | cut -d. -f1)" -ge 20 ]; then
		DIST_CONFIG_PARAMS="--enable-universalsdk=$(xcrun --sdk macosx --show-sdk-path) --with-universal-archs=64-bit"
	fi

	# https://bugs.python.org/issue28456 and radar://28372390
	# https://daniel.haxx.se/blog/2016/10/11/poll-on-mac-10-12-is-broken/
	./configure %c $DIST_CONFIG_PARAMS
	perl -pi -e 's|\#define HAVE_POLL 1||' ./pyconfig.h
	perl -pi -e 's|\#define HAVE_POLL_H 1||g' ./pyconfig.h
	perl -pi -e 's|\#define HAVE_SYS_POLL_H 1||g' ./pyconfig.h
	make -w -j1
<<

# Tests have started hanging for me.
InfoTest: <<
	TestConflicts: apple-gdb
	TestScript: <<
		#!/bin/sh -ex
		# Change install_name of lib during tests since DYLD_LIBRARY_PATH is not exported to test_subprocess on 10.11+.
		if [ -x python.exe ]; then
			python_exe=python.exe
		else
			python_exe=python
		fi
		install_name_tool -change %p/lib/python%type_raw[python]/config-%type_raw[python]m/libpython%type_raw[python]m.dylib %b/libpython%type_raw[python]m.dylib $python_exe
		/usr/bin/find `ls -d %b/build/lib*` -name *.so -exec install_name_tool -change %p/lib/python%type_raw[python]/config-%type_raw[python]m/libpython%type_raw[python]m.dylib %b/libpython%type_raw[python]m.dylib {} \;
		install_name_tool -id %b/libpython%type_raw[python]m.dylib libpython%type_raw[python]m.dylib

		# test_socket can fail with some DNS settings.
		# multiprocessing_spawn fails on "KeyboardInterrupt not raised by wait",
		# the other 4 hang indefinitely
		# test_ctypes is currently broken on 11.0
		EXTRATESTOPTS='-w -unone -x test_socket test_distutils test_ssl test_multiprocessing_spawn test_asyncio test_httpservers test_logging test_xmlrpc test_ctypes'
		LANG=en_US.UTF-8 make -k test EXTRATESTOPTS="$EXTRATESTOPTS" || TESTRETURN=$?

		# Put install_name back.
		install_name_tool -change %b/libpython%type_raw[python]m.dylib %p/lib/python%type_raw[python]/config-%type_raw[python]m/libpython%type_raw[python]m.dylib $python_exe
		/usr/bin/find `ls -d %b/build/lib*` -name *.so -exec install_name_tool -change %b/libpython%type_raw[python]m.dylib %p/lib/python%type_raw[python]/config-%type_raw[python]m/libpython%type_raw[python]m.dylib {} \;
		install_name_tool -id %p/lib/python%type_raw[python]/config-%type_raw[python]m/libpython%type_raw[python]m.dylib libpython%type_raw[python]m.dylib

		# Remove stray .pyc that get made during tests to keep validator happy.
		find ./Tools -name "*.pyc" -delete
		find ./Tools -name "__pycache__" -delete
		exit $TESTRETURN
	<<
<<

InstallScript: <<
#!/bin/sh -ex
	# Rebuild _sysconfigdata.py if we ran tests.
	make
	# _sysconfigdata.py contains build-time variables that point to %b.
	# This is harmless but upsets fink's validator.
	# Change to %p/lib to make fink happy.
	perl -pi -e 's,%b,%p/lib/python%type_raw[python]/config-%type_raw[python]m,' `ls -d %b/build/lib*`/_sysconfigdata.py
	# Don't propagate -lintl to other packages.
	perl -pi -e 's/-lintl //' `ls -d %b/build/lib*`/_sysconfigdata.py
	# install fails with -j greater than 1
	export MAKEFLAGS=-j1
	make install DESTDIR=%d

	# we don't want -lintl to appear in LIBS otherwise python-config will propagate it
	perl -pi -e 's/-lintl //' %i/lib/python%type_raw[python]/config-%type_raw[python]m/Makefile
	perl -pi -e 's,%b,%p/lib/python%type_raw[python]/config-%type_raw[python]m,' %i/lib/python%type_raw[python]/config-%type_raw[python]m/Makefile	
	# fix all main things to be python-versioned filenames with
	# unversioned symlinks to them
	pushd %i/bin
		for f in idle3 pydoc3; do
			mv ${f} ${f}-%type_raw[python]
			ln -s ${f}-%type_raw[python] %i/bin/${f}
		done
		#Remove this for now to avoid conflicting with 'python' package.
		rm 2to3
	popd

	# Add symlinks to %p/lib.
	ln -s %p/lib/python%type_raw[python]/config-%type_raw[python]m/libpython%type_raw[python]m.dylib %i/lib/libpython%type_raw[python].dylib
	ln -s %p/lib/python%type_raw[python]/config-%type_raw[python]m/libpython%type_raw[python]m.dylib %i/lib/libpython%type_raw[python]m.dylib

	# install some docs and other useful tidbits
	rm -rf Misc/RPM
	/bin/cp -R Misc Tools %i/lib/python%type_raw[python]
# Doc tarball missing upstream.
#	mkdir -p %i/share/doc/%n/html
#	/bin/cp -R ../python-%v-docs-html/ %i/share/doc/%n/html
<<
SplitOff: <<
 Package: %N-shlibs
 Depends: libgettext8-shlibs
 Files: lib/libpython%type_raw[python].dylib lib/libpython%type_raw[python]m.dylib lib/python%type_raw[python]/config-%type_raw[python]m/libpython%type_raw[python]m.dylib
 Shlibs: %p/lib/python%type_raw[python]/config-%type_raw[python]m/libpython%type_raw[python]m.dylib 3.5.0 %n (>= 3.5.0-1)
 DocFiles: README LICENSE 
<<
SplitOff2: <<
 Package: python3
 Depends: %N (>= %v-%r)
 Files: <<
		bin/idle3
		bin/pydoc3
		bin/python3
		bin/python3-config
		bin/pyvenv
		lib/pkgconfig/python3.pc
		share/man/man1/python3.1
	<<
 DocFiles: README LICENSE
 Description: Generic commands to invoke python%type_pkg[python]
 DescDetail: <<
  This package only contains non-versioned symlinks to the binaries included
  with python%type_pkg[python].
 <<
 DescUsage: <<
  This package should only be used when you don't care which version of the
  python 3.x interpreter you need.
 <<
<<
DocFiles: README LICENSE 
Description: Interpreted, object-oriented language
DescDetail: <<
 Python is often compared to Tcl, Perl, Scheme or Java. 
 This package installs unix python - not the OSX Framework version.
 Builds a two-level namespace dynamic libpython (needed for koffice).

 The interpretter is installed as "python%type_raw[python]", and all associated
 commands are similarly named with the python-version in them. To get
 the simple "python3" command, install the fink package "python3" (note:
 the "python3" command there is not guaranteed to be python%type_raw[python]!).
<<
DescUsage: <<
	python%type_raw[python] changes the compiler options used to compile
	third-party python modules. Please do not add %type_raw[python] variants
	to them without actually testing that they build cleanly.
<<

DescPackaging: <<
	Patch a lot of things to impliment shared-lib support for
	non-Framework build on Darwin.

	Static libpython is installed in lib/pythonX.X/config-%type_raw[python]m/ but
	shared goes in %p/lib by default. Fink's packaging has always
	placed manually-built shared lib in config/ along side static,
	This gives consistency regardless of -search_paths_first.
	Continue this practice so that -pyXX varianted packages don't
	need special-casing for certain variants.

	Make sure all compiled modules link against libpython%type_raw[python] (and
	propagate this to third-party compiled modules) to ensure that
	all symbols resolved at compile-time to avoid packager
	mistakes and user runtime surprises.

	Play lots of games to make sure we get expected support
	libraries. 

	Adjust "python3" unversioned link to be a symlink not a hard link.

	Shared lib is buried next to static one instead of being in
	%p/lib because that's where it's always been in the fink
	package series. Why would they be in different places? Patch
	-config script to continue this tradition (bug in previous
	versions accidentally did the Right Thing here).

	New in 3.2, .pyc files are saved in the __pycache__ directory
	at the same level as the matching .py file. Any packages that
	expect the .pyc file to be next to the .py file will need adjustment.

	The .pyc and .so files also include the python version in the name.

	Don't run ensurepip since it installs files that conflict with
	the pip and setuptools packages.
<<
DescPort: <<
	libpython needs to link to CF because that lib has the parent
	thread that load modules that need to have CF available. See:
	http://bugs.python.org/issue7085

	bsddb is gone so drop db* patch and dep.
	Patch setup.py to find ncursesw headers and drop libncurses5 dep.
	Ensure $(LDFLAGS) is used linking libpython or else it can't find libintl.

	Patch ctypes to look in %p/lib for libraries.

	Upstream patch from https://bugs.python.org/issue27369 to fix tests
	with expat 2.2.0.

	No longer change stack size of interpreter in configure. Causes test
	failures in 10.14.4. https://bugs.python.org/issue34602

	Call build executable by correct filename in test suite
	(python on case-sensitive, python.exe on -insensitive file systems).

	On macOS11, ctypes test needs to know about shared library cache
	but not yet ported to release branches.
	https://github.com/python/cpython/pull/22855
	Also, for python35, 64-bit building implies ppc64 as well, so patch out
	that arch.
<<
License: OSI-Approved
Homepage: http://www.python.org
<<
