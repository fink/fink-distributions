Info2: <<
Package: gcc6
Version: 6.5.0
Revision: 204
Distribution: 10.14.5
Source: ftp://gcc.gnu.org/pub/gcc/releases/gcc-%v/gcc-%v.tar.xz
Source-Checksum: SHA256(7ef1796ce497e89479183702635b14bb7a46b53249209a5e0f999bebf4740945)
Source2: ftp://sourceware.org/pub/java/ecj-4.9.jar
Source2-Checksum: SHA256(9506e75b862f782213df61af67338eb7a23c35ff425d328affc65585477d34cd)
PatchFile: %n.patch
PatchFile-MD5: c50f476148e7e4c792432d3add832a77 
# upstream patch to avoid regressions caused by clang7's libunwind
# See: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=66848#c11
PatchFile2: %n-boehmgc-hack.patch
PatchFile2-MD5: 52fa69b98d5a657b7a6d8c26e39b4e28
PatchFile3: %n-apfs.patch
PatchFile3-MD5: ddb5df56c7705d8edab883662d6920c5
PatchFile4: %n-build-sysroot.patch
PatchFile4-MD5: 6a3ae1dc774e419bb61b1063583d9ba6
PatchFile5: %n-xcode10.2.patch
PatchFile5-MD5: 32be6b5aec21bca954fccf210ab2d164
PatchScript: <<
	%{default_script}
	# autoconf2.6ish patch for modern XQuartz paths
	perl -pi -e "s|/usr/lpp/Xamples|/opt/X11|" libjava/configure
	# don't update live infodoc dir
	find . -name Makefile.in | xargs perl -pi -e 's/install-info --version/false/g'
	# make remove_duplicates() sandbox friendly
	perl -pi.bak -e "s|if \(errno \!\= ENOENT\)|if \(\(errno \!\= ENOENT\) \&\& \(errno \!\= EPERM\)\)|g" gcc/incpath.c
<<
Type: -64bit .
NoSetCPPFLAGS: True
NoSetLDFLAGS: True
UseMaxBuildJobs: True
Conflicts: <<
	gcc5, gcc6, gcc7, gcc8,
	gcc9,
	gcc10,
	gcc11,
	gcc12,
	gcc13
<<
Replaces: <<
	gcc5, gcc6, gcc7, gcc8,
	gcc9,
	gcc10,
	gcc11,
	gcc12,
	gcc13
<<
Depends: <<
	%N-compiler (= %v-%r)
<<
BuildDepends: <<
	fink (>= 0.32),
	fink-package-precedence,
	gettext-tools,
	gmp5 (>= 6.0.0a-3),
	isl3,
	libgettext8-dev,
	libiconv-dev,
	libmpc3 (>= 1.0.3-1),
	libmpfr4 (>= 3.1.3-1),
	x11-dev
<<
ConfigureParams: <<
	--prefix=%p/lib/gcc6 \
	--mandir=%p/share/man \
	--infodir=%p/lib/gcc6/info \
	--enable-languages=c,c++,fortran,lto,objc,obj-c++,java \
	--with-gmp=%p \
	--with-libiconv-prefix=%p \
	--with-isl=%p \
	--with-mpc=%p \
	--with-system-zlib \
	--program-suffix=-fsf-6 \
	--disable-multilib \
	--with-sysroot=${SDK_PATH}
<<
InfoTest: <<
	TestDepends: <<
		autogen,
		dejagnu,
		apple-gdb
	<<
	TestScript: <<
               #!/bin/bash -ev
               if [ $UID = 0 ]; then
			if [ -e /usr/bin/csrutil && `csrutil status | grep -c disabled` ]; then
                  		cd ../darwin_objdir; make -k check RUNTESTFLAGS="--target_board=unix'{-m64}'" || :
			else
				echo "The gcc testsuite must be run with SIP disabled or package installed."
				exit 0
			fi
               else
                  echo "The gcc testsuite must be run as root due to its use of gdb."
                  exit 0
               fi
	<<
<<
InfoDocs: cp-tools.info gcc.info gfortran.info cpp.info gccinstall.info libgomp.info cppinternals.info gccint.info gcj.info
CompileScript: <<
	#!/bin/bash -ev
	set +x
	if [ -e /usr/local/lib/libgmp.a ] || [ -e /usr/local/lib/libgmp.dylib ]; then
		echo "-----WARNING-----WARNING-----WARNING-----"
		echo "You seem to have GMP installed in /usr/local."
		echo "This is known to cause %N to fail to build."
		echo "Please move aside /usr/local and try again."
		echo "-----WARNING-----WARNING-----WARNING-----"
		exit 1
	else
		echo "Good, /usr/local/lib/libgmp* not present."
	fi
	set -x
	ulimit -s `ulimit -s`
	mv ../ecj-4.9.jar ecj.jar
	mkdir ../darwin_objdir
	cd ../darwin_objdir
	# build doesn't play well with GNU-make
	# unsupported option '-static-libgcc'
	export MAKE=/usr/bin/make
	# Get the unversioned SDK path
	SDK_PATH=`dirname $(xcrun --sdk macosx --show-sdk-path)`/MacOSX.sdk
	# check for incompatible clang
	clangvers=`clang --version | cut -d\  -f4`
	$(`dpkg --compare-versions $clangvers '>>' 6.0`) && $(`dpkg --compare-versions $clangvers '<<' 7.2`) && clangcheck='y'
	if [ "$clangcheck" = "y" ]; then
		../gcc-%v/configure %c --with-build-config=bootstrap-debug
	else
		../gcc-%v/configure %c
	fi
	# Use bootstrap-lean to reduce disk usage.
	# Note that this causes plugin testsuite failures
	# since the plugin headers must come from prev-gcc.
	# make bootstrap-lean
	make bootstrap
	cd %b/..
	fink-package-precedence --prohibit-bdep=%n .
<<
InstallScript: <<
	#!/bin/sh -ev
	darwinvers=`uname -r`
	cd ../darwin_objdir
	make -j 1 install DESTDIR=%d
	mkdir -p %i/bin

	# Add symlinks to recreate previous naming of executables in %p/bin
	# as well as %p/lib/gcc6/bin and new -fsf-6 naming in %p/bin.
	binfiles="gcc g++ c++ cpp gcov"
	for binfile in $binfiles ; do
		ln -s %p/lib/gcc6/bin/$binfile-fsf-6 %i/lib/gcc6/bin/$binfile-6
		ln -s %p/lib/gcc6/bin/$binfile-fsf-6 %i/bin/$binfile-6
		ln -s %p/lib/gcc6/bin/$binfile-fsf-6 %i/bin/$binfile-fsf-6
	done
	binfiles="aot-compile gappletviewer gc-analyze gcj gcj-dbtool gcjh gfortran gij gjar gjarsigner gjavah gkeytool gnative2ascii gorbd grmic grmid grmiregistry gserialver gtnameserv jcf-dump jv-convert rebuild-gcj-db"
	for binfile in $binfiles ; do
		ln -s %p/lib/gcc6/bin/$binfile-fsf-6 %i/lib/gcc6/bin/$binfile
		ln -s %p/lib/gcc6/bin/$binfile-fsf-6 %i/bin/$binfile
		ln -s %p/lib/gcc6/bin/$binfile-fsf-6 %i/bin/$binfile-fsf-6
	done

	# Remove unsupported executables
	binfiles="gcc-ar gcc-nm gcc-ranlib"
	for binfile in $binfiles ; do
		rm -f %i/lib/gcc6/bin/$binfile-fsf-6 %i/lib/gcc6/bin/%m-apple-darwin`uname -r`-$binfile-fsf-6
	done

	# Add symlinks for manpages under old names.
	man1files="cpp g++ gcc gcov"
	for man1file in $man1files ; do
		ln -s $man1file-fsf-6.1 %i/share/man/man1/$man1file-6.1
	done
	man1files="aot-compile gappletviewer gc-analyze gcj-dbtool gcj gcjh gfortran gij gjar gjarsigner gjavah gjdoc gkeytool gnative2ascii gorbd grmic grmid grmiregistry gserialver gtnameserv jcf-dump jv-convert rebuild-gcj-db"
	for man1file in $man1files ; do
		ln -s $man1file-fsf-6.1 %i/share/man/man1/$man1file.1
	done

	# Rename manpages with -fsf-6 suffix and create symlinks to old names. 
	man7files="fsf-funding gfdl gpl"
	for man7file in $man7files ; do
		mv %i/share/man/man7/$man7file.7 %i/share/man/man7/$man7file-fsf-6.7
		ln -s $man7file-fsf-6.7 %i/share/man/man7/$man7file.7
	done

	# Add dir for installed info files, and link them to %i/share/info.
	# the %i/lib/gcc6/info/* files will go into the -compiler package
	# and the files in %i/share/info go into the main package, this allows
	# the info files for specific compiler versions to be accessed with
	# e.g. `info -d /fink_install_dir/lib/gcc6/info gcc', but the "main" info files will
	# be available for the install gccXX package in %p/share/info, as usual
	install -d -m 755 %i/share/info
	for infofile in $(find %i/lib/gcc6/info -name '*.info*'); do
		infobase=$(basename $infofile)
		case $infofile in
			*info) /usr/bin/install-info --infodir=%i/lib/gcc6/info ${infofile} ;;
		esac
		ln -s %p/lib/gcc6/info/$infobase %i/share/info/$infobase
	done

	cp %b/gcc/config/darwin-sections.def %i/lib/gcc6/lib/gcc/%m-apple-darwin${darwinvers}/%v/plugin/include/config
	# remove build path from .la files
	perl -pi -e "s, \-L[^ ']*/%n-%v-%r/darwin_objdir/[^ ']*,,g" `find %i/lib/gcc6/lib -name '*.la'`
	perl -pi -e "s, /[^ ']*/%n-%v-%r/darwin_objdir/[^ ']*,,g" `find %i/lib/gcc6/lib -name 'libasan.la'`
	perl -pi -e "s, /[^ ']*/%n-%v-%r/darwin_objdir/[^ ']*,,g" `find %i/lib/gcc6/lib -name 'libubsan.la'`
<<
SplitOff: <<
	Package: %N-shlibs
	Replaces: <<
		gcc4 (<= 20050130-4),
		gfortran-shlibs
	<<
	Provides: <<
		gfortran-shlibs
	<<
	Description: Shared libraries for %N
	DocFiles: gcc/COPYING gcc/COPYING.LIB
	Files: <<
		lib/gcc6/lib/libgfortran.3*.dylib
		lib/gcc6/lib/libstdc++.6*.dylib
		lib/gcc6/lib/libgcc_s.1*.dylib
		lib/gcc6/lib/libgcc_ext.1*.dylib
		lib/gcc6/lib/libgcj.17*.dylib
		lib/gcc6/lib/libgcj-tools.17*.dylib
		lib/gcc6/lib/libgij.17*.dylib
		lib/gcc6/lib/libitm.1*.dylib
		lib/gcc6/lib/libssp.0*.dylib
		lib/gcc6/lib/libobjc-gnu.4*.dylib
		lib/gcc6/lib/libgomp.1*.dylib
		lib/gcc6/lib/libquadmath.0*.dylib
		lib/gcc6/lib/libatomic.1*.dylib
		lib/gcc6/lib/libasan.3*.dylib
		lib/gcc6/lib/libubsan.0*.dylib
		lib/gcc6/lib/libcilkrts.5*.dylib
		lib/gcc6/lib/gcj-%v-17
	<<
	Shlibs: <<
		%p/lib/gcc6/lib/libgfortran.3.dylib 4.0.0 %n (>= 6.2.0-1)
		%p/lib/gcc6/lib/libstdc++.6.dylib 7.0.0 %n (>= 6.2.0-1) 
		%p/lib/gcc6/lib/libgcc_s.1.dylib 1.0.0 %n (>= 6.2.0-1) 
		%p/lib/gcc6/lib/libgcj.17.dylib 18.0.0 %n (>= 6.2.0-1)
		%p/lib/gcc6/lib/libgcj-tools.17.dylib  18.0.0 %n (>= 6.2.0-1) 
		%p/lib/gcc6/lib/libgij.17.dylib 18.0.0 %n (>= 6.2.0-1) 
		%p/lib/gcc6/lib/libitm.1.dylib 2.0.0 %n (>= 6.2.0-1)
		%p/lib/gcc6/lib/libssp.0.dylib 1.0.0 %n (>= 6.2.0-1) 
		%p/lib/gcc6/lib/libobjc-gnu.4.dylib 5.0.0 %n (>= 6.2.0-1)
		%p/lib/gcc6/lib/libgomp.1.dylib 2.0.0 %n (>= 6.2.0-1) 
		%p/lib/gcc6/lib/libquadmath.0.dylib 1.0.0 %n (>= 6.2.0-1)
		%p/lib/gcc6/lib/libatomic.1.dylib 4.0.0  %n (>= 6.2.0-1)
		%p/lib/gcc6/lib/libasan.3.dylib 4.0.0  %n (>= 6.2.0-1)
		%p/lib/gcc6/lib/libubsan.0.dylib 1.0.0 %n (>= 6.2.0-1)
		%p/lib/gcc6/lib/libcilkrts.5.dylib 6.0.0 %n (>= 6.2.0-1)
		%p/lib/gcc6/lib/gcj-%v-17/libjvm.dylib 0.0.0 %n (>= 6.2.0-1)
	<<
<<
SplitOff2: <<
	Package: %N-compiler
	Depends: <<
		gmp5-shlibs (>= 6.0.0a-3),
		isl3-shlibs,
		libgettext8-shlibs,
		libgmpxx5-shlibs (>= 6.0.0a-3),
		libiconv,
		libmpc3-shlibs (>= 1.0.3-1),
		libmpfr4-shlibs (>= 3.1.3-1),
		%N-shlibs (= %v-%r)
	<<
	BuildDependsOnly: False
	Description: Compiler Binaries for gcc6
	DocFiles: gcc/COPYING gcc/COPYING.LIB
	Files: <<
		bin/*-fsf-6
		lib/gcc6
		share/man/man1/*-fsf-6.1
		share/man/man7/*-fsf-6.7
	<<
<<
License: GPL
Description: GNU Compiler Collection Version 6
DescDetail: <<
 GCC, the GNU Compiler Collection, includes front ends for
 C, C++, Objective-C, Objective-C++, Fortran, Java, and Ada.
 .
 C, C++, Objective C and Fortran and Java are included in this package.
 .
 The C and C++ compilers are named gcc-6 and g++-6 to avoid
 conflicts with gcc and g++ installed by the Apple Developer Tools
<<
DescPackaging: <<
 Build with -fsf-6 suffix and place non-overlapping files into new gcc6-compiler
 package which can co-exist with other gccXX-compiler packages. Overlapping files
 are left in main gcc6 package which still conflicts with other gccXX packages.
 Backport r235222 and r235372 from gcc trunk for dejagnu 1.6 compatibility.
 Backport r235547 from gcc-6-branch to fix ABI detection breakage of PR70839.

 Backport darwin-specific patches:
 PR71767 1/4 https://gcc.gnu.org/ml/gcc-patches/2016-11/msg00537.html
 PR71767 2/4 https://gcc.gnu.org/ml/gcc-patches/2016-11/msg00538.html
 PR71767 3/4 https://gcc.gnu.org/ml/gcc-patches/2016-11/msg00539.html
 PR71767 4/4 https://gcc.gnu.org/ml/gcc-patches/2016-11/msg00540.html
 PR57438 https://gcc.gnu.org/ml/gcc-patches/2016-11/msg00541.html
 PR67710 https://gcc.gnu.org/ml/gcc-patches/2016-11/msg00545.html

 Add apfs patch to suppress https://gcc.gnu.org/bugzilla/show_bug.cgi?id=81797
 by adding ".NOTPARALLEL: install-headers" to libstdc++-v3/include/Makefile.in.

 macOS10.14 no longer supports building 32bit libraries, so must disable multilib.
 https://gcc.gnu.org/bugzilla/show_bug.cgi?id=87030

 We use --with-sysroot to find the hidden system-headers in case /usr/include is not
 populated. Ideally want --with-build-sysroot because we only need the headers to build
 gcc and that should not impact the end product, but then anything using gccX will
 need to add it's own -isysroot flag.
 https://gcc.gnu.org/bugzilla/show_bug.cgi?id=79885

 Xcode10.2 exposed _Atomic in c++, where it isn't supported.
 https://gcc.gnu.org/bugzilla/show_bug.cgi?id=89864
<<
Homepage: http://gcc.gnu.org/
Maintainer: None <fink-devel@lists.sourceforge.net>
<<
