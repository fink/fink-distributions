Package: fpc
Version: 3.2.2
Revision: 1

Replaces: fpc-config (<< 3.2.2)
Recommends: fpc-doc

CustomMirror: <<
eur-HU: ftp://ftp.hu.freepascal.org/pub/fpc/
nam-CA: ftp://mirror.freemirror.org/pub/fpc/
Primary: ftp://ftp.freepascal.org/pub/fpc/
<<

Source: mirror:custom:/dist/%v/source/fpcbuild-%v.tar.gz
Source-MD5: 3681ae4a208be4f64ec65e832a9a702d

Source2: mirror:custom:/dist/3.0.4/bootstrap/x86_64-macosx-10.9-ppcx64.tar.bz2
Source2-MD5: 05b8dade26a8f2657d54e885395930f5
Source2Rename: x86_64-macosx-10.7-ppcx64-3.0.4.tar.bz2

SourceDirectory: fpcbuild-%v/fpcsrc

UseMaxBuildJobs: false

BuildDepends: fink (>= 0.32.0)

Patchscript: <<
#!/bin/sh -ev
# adjust the path "codfilepath" for plex from /usr/local to fink's prefix.
  sed -i.bak 's|/usr/local|%p|g' utils/tply/pyacc.y
  sed -i.bak 's|/usr/local|%p|g' utils/tply/pyacc.pas
  sed -i.bak 's|/usr/local|%p|g' utils/tply/plex.pas
# fixes building of lazarus on older system < 10.11.
  sed -i.bak 's|{\$linkframework CoreImage}|{linkframework CoreImage}|g' \
    packages/cocoaint/src/CocoaAll.pas
<<

CompileScript: <<
#!/bin/sh -ev
# Explicitly set minimum version of OS X
# Avoids harmless but annoying ld warning
# Keep in sync with fpc-config
  export MACOSX_DEPLOYMENT_TARGET=10.9

  linkerOptions=""
  if [ "$(uname -r | cut -d. -f1)" -ge 19 ] ; 
  then
    linkerOptions="-XR/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk"
  fi
# compile the compiler
  make all OPT="-ap $linkerOptions" PP="%b/../../ppcx64"

# create the config file
  %b/utils/fpcmkcfg/bin/%m-darwin/fpcmkcfg -d basepath=%p/lib/%n/\$fpcversion -o fpc.cfg

cat >fpc.cfg.patch <<EOFCFGPATCH
diff -Naur old/fpc.cfg new/fpc.cfg
--- old/fpc.cfg	2020-07-27 09:50:07.000000000 +0200
+++ new/fpc.cfg	2020-07-27 09:52:12.000000000 +0200
@@ -205,6 +205,19 @@
 #-Fl/lib;/usr/lib
 -Fl%p/lib/fpc/\$fpcversion/lib/\$FPCTARGET
 
+-Fl/usr/lib
+
+-Fl/usr/X11/lib
+-Fl/usr/X11R6/lib
+-Fl/opt/X11/lib
+
+-Fl%p/lib
+
+# searchpath for Qt4Pas frameworks
+#ifdef darwin
+-Ff%p/lib/qt4-mac/lib
+#endif
+
 #IFNDEF Darwin
 #DEFINE NEEDCROSSBINUTILS
 #ENDIF
@@ -267,6 +280,12 @@
 -XX
 #endif
 
+# Explicitly set minimum version of OS X
+# Avoids harmless but annoying ld warning
+# Keep in sync with fpc
+#ifdef darwin
+-WM10.9
+#endif
 
 # -------------
 # Miscellaneous
EOFCFGPATCH
  patch -p1 < fpc.cfg.patch

# compile the compiler utilities msgdif and msg2inc
  cd compiler/utils
  %b/compiler/ppcx64 $linkerOptions \
    -Fu%b/rtl/units/%m-darwin msgdif.pp
  %b/compiler/ppcx64 $linkerOptions \
    -Fu%b/rtl/units/%m-darwin msg2inc.pp
<<

InfoTest: <<
  TestScript: <<
#!/bin/sh -ev
  mkdir -p       freepascal-tests
  cp -R rtl      freepascal-tests
  cp -R tests    freepascal-tests
  cp -R packages freepascal-tests
  chmod -R 777   .
  cd             freepascal-tests/tests

# Executing the following does not work because of permission problems.
# If you really want to run the tests uncomment the following line and execute
# "fink --test rebuild fpc"
# Make sure there is no other version of fpc installed. 
# Depending on your path settings you may get errors about the system unit
# being wrong.
# The tests will take quite some time! You have been warned.

# make full TEST_FPC=%b/compiler/ppcx64 FPC=%b/compiler/ppcx64 \
#   OPT=-Fu%b/rtl/units/%m-darwin/ FPCMAKE=%b/utils/fpcm/fpcmake

<<
<<

SplitOff: <<
  Package: fpc-config
  # Pseudo package to remove outdated stuff.
  RuntimeDepends: fink-obsolete-packages
  # dpkg would complain about a package without any file.
  InstallScript: <<
    mkdir -p %i/share/doc/installed-packages
    touch    %i/share/doc/installed-packages/fpc-config
  <<
<<
InstallScript: <<
#!/bin/sh -ev
  make install           INSTALL_PREFIX=%i       PP=%b/compiler/ppcx64 FPCMAKE=%b/utils/fpcm/fpcmake
  ln -sf ../lib/fpc/%v/ppcx64 %i/bin/ppcx64
  make -C ../install/man INSTALL_PREFIX=%i/share
  make -C ../install/doc INSTALL_PREFIX=%i/share PP=%b/compiler/ppcx64

  install_name_tool -id %p/lib/libpas2jslib.dylib %i/lib/libpas2jslib.dylib

  install compiler/utils/msgdif  %i/bin
  install compiler/utils/msg2inc %i/bin

  mkdir %i/etc
  install fpc.cfg %i/etc
<<

Shlibs: !%p/lib/libpas2jslib.dylib

RuntimeVars: <<
FPCDIR: %p/lib/fpc/%v
PPC_CONFIG_PATH: %p/etc/
<<

License: GPL/LGPL

Description: Free Pascal compiler

DescDetail: <<
Free Pascal is a 32 and 64 bit professional Pascal compiler. 
Supported processors: Intel x86 (including 8086), AMD64/x86-64, PowerPC,
PowerPC64, Sparc, Sparc64, ARM, AArch64, MIPS, M68k, AVR and the JVM.
Supported operating systems: Linux, FreeBSD, 
macOS/iOS/iPhoneSimulator, DOS (16 and 32 bit), Win32, Win64, WinCE, OS/2,
Nintendo GBA, Nintendo DS, Nintendo Wii, Android, and more.

The language syntax has excellent compatibility with TP 7.0 as well as with
most versions of Delphi (classes, rtti, exceptions, ansistrings,
widestrings, interfaces). A Mac Pascal compatibility mode is also provided
to assist users of previous Pascal compilers for the Mac.  
ISO mode of fpc supports Standard Pascal according to ISO 7185.
Furthermore, Free Pascal supports function overloading, operator
overloading, global properties and other modern features.

https://wiki.freepascal.org/User_Changes_3.2.2 also lists changes in fpc.
<<

DescUsage: <<
 Compile and link a Pascal file with: 

   fpc FILENAME

 Get help with: fpc -h

 For using Free Pascal on macOS see:
    https://wiki.freepascal.org/Portal:Mac  

 For more documentation about Free Pascal in HTML and pdf, install fpc-doc.

 After uncommenting a line in fpc.info "fink --test rebuild fpc" executes 
 the test suite of the compiler.
 This takes quite some time, in particular on slow machines.
 Expect a small number of failed tests.
<<

DescPort: <<
  With version 3.2.0 the creation of the config file fpc.cfg has been 
  integrated to this package description. The file is created on the fly 
  using the utility fpcmkcfg and patched as required.
<<

Homepage: https://www.freepascal.org
Maintainer: Karl-Michael Schindler <karl-michael.schindler@web.de>
