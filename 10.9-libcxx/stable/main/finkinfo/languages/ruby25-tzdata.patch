Based on following upstream patch:
From da865a866dbfa490edd90078c0b17db349725958 Mon Sep 17 00:00:00 2001
From: Hiroshi SHIBATA <hsbt@ruby-lang.org>
Date: Thu, 29 Sep 2022 15:40:22 +0900
Subject: [PATCH] Re-enable example for Europe/Amsterdam pre-1970 time

  * https://github.com/ruby/spec/pull/939
  * https://github.com/ruby/ruby/pull/6393
--- ruby-2.6.10-orig/spec/ruby/core/time/shared/local.rb	2022-04-12 06:50:11.000000000 -0500
+++ ruby-2.6.10/spec/ruby/core/time/shared/local.rb	2023-01-14 03:45:29.000000000 -0600
@@ -8,10 +8,10 @@
 
   platform_is_not :windows do
     describe "timezone changes" do
-      it "correctly adjusts the timezone change to 'CEST' on 'Europe/Amsterdam'" do
+      it "correctly adjusts the timezone change to 'CET' on 'Europe/Amsterdam'" do
         with_timezone("Europe/Amsterdam") do
-          Time.send(@method, 1940, 5, 16).to_a.should ==
-            [0, 40, 1, 16, 5, 1940, 4, 137, true, "CEST"]
+          Time.send(@method, 1970, 5, 16).to_a.should ==
+            [0, 0, 0, 16, 5, 1970, 6, 136, false, "CET"]
         end
       end
     end
From 58cc3c9f387dcf8f820b43e043b540fa06248da3 Mon Sep 17 00:00:00 2001
From: Nobuyoshi Nakada <nobu@ruby-lang.org>
Date: Wed, 7 Dec 2022 13:08:40 +0900
Subject: [PATCH] [Bug #19187] Fix for tzdata-2022g

---
 test/ruby/test_time_tz.rb | 21 +++++++++++++++------
 1 file changed, 15 insertions(+), 6 deletions(-)

diff --git a/test/ruby/test_time_tz.rb b/test/ruby/test_time_tz.rb
index 6fdb95bafe774..6e7e813923aeb 100644
--- a/test/ruby/test_time_tz.rb
+++ b/test/ruby/test_time_tz.rb
@@ -7,9 +7,9 @@ class TestTimeTZ < Test::Unit::TestCase
   has_lisbon_tz = true
   force_tz_test = ENV["RUBY_FORCE_TIME_TZ_TEST"] == "yes"
   case RUBY_PLATFORM
-  when /linux/
+  when /darwin|linux/
     force_tz_test = true
-  when /darwin|freebsd/
+  when /freebsd/
     has_lisbon_tz = false
     force_tz_test = true
   end
@@ -95,6 +95,9 @@ def group_by(e, &block)
   CORRECT_KIRITIMATI_SKIP_1994 = with_tz("Pacific/Kiritimati") {
     Time.local(1994, 12, 31, 0, 0, 0).year == 1995
   }
+  CORRECT_SINGAPORE_1982 = with_tz("Asia/Singapore") {
+    "2022g" if Time.local(1981, 12, 31, 23, 59, 59).utc_offset == 8*3600
+  }
 
   def time_to_s(t)
     t.to_s
@@ -140,9 +143,12 @@ def test_america_managua
 
   def test_asia_singapore
     with_tz(tz="Asia/Singapore") {
-      assert_time_constructor(tz, "1981-12-31 23:59:59 +0730", :local, [1981,12,31,23,59,59])
-      assert_time_constructor(tz, "1982-01-01 00:30:00 +0800", :local, [1982,1,1,0,0,0])
-      assert_time_constructor(tz, "1982-01-01 00:59:59 +0800", :local, [1982,1,1,0,29,59])
+      assert_time_constructor(tz, "1981-12-31 23:29:59 +0730", :local, [1981,12,31,23,29,59])
+      if CORRECT_SINGAPORE_1982
+        assert_time_constructor(tz, "1982-01-01 00:00:00 +0800", :local, [1981,12,31,23,30,00])
+        assert_time_constructor(tz, "1982-01-01 00:00:00 +0800", :local, [1982,1,1,0,0,0])
+        assert_time_constructor(tz, "1982-01-01 00:29:59 +0800", :local, [1982,1,1,0,29,59])
+      end
       assert_time_constructor(tz, "1982-01-01 00:30:00 +0800", :local, [1982,1,1,0,30,0])
     }
   end
@@ -450,8 +456,11 @@ def self.gen_zdump_test(data)
 America/Managua  Wed Jan  1 04:59:59 1997 UTC = Tue Dec 31 23:59:59 1996 EST isdst=0 gmtoff=-18000
 America/Managua  Wed Jan  1 05:00:00 1997 UTC = Tue Dec 31 23:00:00 1996 CST isdst=0 gmtoff=-21600
 Asia/Singapore  Sun Aug  8 16:30:00 1965 UTC = Mon Aug  9 00:00:00 1965 SGT isdst=0 gmtoff=27000
-Asia/Singapore  Thu Dec 31 16:29:59 1981 UTC = Thu Dec 31 23:59:59 1981 SGT isdst=0 gmtoff=27000
+Asia/Singapore  Thu Dec 31 15:59:59 1981 UTC = Thu Dec 31 23:29:59 1981 SGT isdst=0 gmtoff=27000
 Asia/Singapore  Thu Dec 31 16:30:00 1981 UTC = Fri Jan  1 00:30:00 1982 SGT isdst=0 gmtoff=28800
+End
+  gen_zdump_test <<'End' if CORRECT_SINGAPORE_1982
+Asia/Singapore  Thu Dec 31 16:00:00 1981 UTC = Fri Jan  1 00:00:00 1982 SGT isdst=0 gmtoff=28800
 End
   gen_zdump_test CORRECT_TOKYO_DST_1951 ? <<'End' + (CORRECT_TOKYO_DST_1951 < "2018f" ? <<'2018e' : <<'2018f') : <<'End'
 Asia/Tokyo  Sat May  5 14:59:59 1951 UTC = Sat May  5 23:59:59 1951 JST isdst=0 gmtoff=32400
