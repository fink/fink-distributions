Package: lua52
Version: 5.2.4
Revision: 1
Description: Small and fast embeddable scripting language
License: BSD

# Dependencies:
Depends: lua52-shlibs
Conflicts: lua (<< 1:5.0.4-0)
Replaces:  lua (<< 1:5.0.4-0)
Recommends: luarocks

# Unpack Phase:
Source: http://www.lua.org/ftp/lua-%v.tar.gz
Source-Checksum: SHA256(b9e2e4aad6789b3b63a056d442f7b39f0ecfca3ae0f1fc0ae4e9614401b69f4b)

Patchscript: <<
#!/bin/sh -ev
# create the pkg-config file lua.pc
cat >%b/lua.pc <<EOFCFG
# lua.pc -- pkg-config data for Lua
# setup by KMS for fink on Mac OS X

# the version can be extracted from the Makefile
# grep '^V=' Makefile
# grep '^R=' Makefile
# also 'make pc' outputs version and canonical vars

shortversion= 5.2
version= 5.2.4

prefix=%p
INSTALL_BIN= \${prefix}/bin 
INSTALL_INC= \${prefix}/include 
INSTALL_LIB= \${prefix}/lib 
INSTALL_MAN= \${prefix}/man/man1 
INSTALL_LMOD= \${prefix}/share/lua/\${shortversion} 
INSTALL_CMOD= \${prefix}/lib/lua/\${shortversion} 

# canonical vars 
exec_prefix= \${prefix}
libdir= \${exec_prefix}/lib
includedir= \${prefix}/include

Name: Lua
Description: A Scripting Language
Version: \${version}
URL: http://www.lua.org/
Requires:
Libs: -L\${libdir} -llua
Libs.private: -lm
Cflags: -I\${includedir}

# (end of lua.pc)
EOFCFG
<<

# Compile Phase:
CompileScript: <<
#!/bin/sh -ev
# compile
  make macosx
  rm src/lua.o src/luac.o
  rm src/luac
# keep lua for the TestScript
  mv src/lua src/lua_test
# create dylib and its symlinks
  gcc -dynamiclib -install_name %p/lib/liblua.5.2.dylib \
    -compatibility_version 5.2.0 -current_version %v      \
    -o liblua.%v.dylib src/*.o
  ln -s liblua.%v.dylib liblua.5.2.dylib
# create binaries using dylibs
  cd src
  gcc -fno-common -DLUA_USE_LINUX -lreadline -L.. -llua.%v lua.c  -o lua
  gcc -fno-common -DLUA_USE_LINUX -lreadline -L.. -llua.%v luac.c -o luac
<<

# Install Phase:
InstallScript: <<
#!/bin/sh -ev
  make install INSTALL_TOP=%i INSTALL_MAN=%i/share/man/man1
  install -d            %i/lib/pkgconfig/
  install -m 644 lua.pc %i/lib/pkgconfig/
  install -m 644 liblua.%v.dylib %i/lib
  ln -s liblua.%v.dylib %i/lib/liblua.5.2.dylib
# rename
  mv %i/bin/lua  %i/bin/lua52
  mv %i/bin/luac %i/bin/luac52
  mv %i/share/man/man1/lua.1  %i/share/man/man1/lua52.1
  mv %i/share/man/man1/luac.1 %i/share/man/man1/luac52.1

# remove some empty cruft
  rm -rf %i/lib/lua
  rm -rf %i/share/lua
<<

DocFiles: <<
  doc/contents.html doc/logo.gif doc/lua.css doc/manual.css
  doc/manual.html doc/osi-certified-72x60.png doc/readme.html README
<<

# Use of 'update-alternatives' allows _any_ Lua version to order the 'lua'
# and 'luac' commands to point to their installed binary. The one with 
# strongest priority (version) wins.
#
# Note: 'man update-alternatives' for info on usage.
#	No need for '#!/bin/sh -ev' prefix for if/then to work.

PostInstScript: <<
  update-alternatives --install %p/bin/lua lua %p/bin/lua52 520 \
	--slave %p/share/man/man1/lua.1 lua.1 %p/share/man/man1/lua52.1
  update-alternatives --install %p/bin/luac luac %p/bin/luac52 520 \
    --slave %p/share/man/man1/luac.1 luac.1 %p/share/man/man1/luac52.1
<<

PreRmScript: <<
  if [ $1 != "upgrade" ]; then
    update-alternatives --remove lua  %p/bin/lua52
    update-alternatives --remove luac %p/bin/luac52
  fi
<<

# Test Phase:
# make test fails with missing dylib. Fix: Use special version lua_test 
# with static lib.
InfoTest: <<
  TestScript: <<
    src/lua_test -v || exit 2
  <<
  TestSuiteSize: small
<<

DescDetail: <<
Lua is a programming language originally designed for extending applications,
but also frequently used as a general-purpose, stand-alone language. Lua
combines simple procedural syntax (similar to Pascal) with powerful data
description constructs based on associative arrays and extensible semantics.
Lua is dynamically typed, interpreted from bytecodes, and has automatic 
memory management with garbage collection, making it ideal for 
configuration, scripting, and rapid prototyping. 

A fundamental concept in the design of Lua is to provide meta-mechanisms 
for implementing features, instead of providing a host of features directly in
the language. For example, although Lua is not a pure object-oriented
language, it does provide meta-mechanisms for implementing classes and
inheritance. Lua's meta-mechanisms bring an economy of concepts and keep the
language small, while allowing the semantics to be extended in unconventional
ways. Extensible semantics is a distinguishing feature of Lua. 

Lua is implemented as a small library of C functions, written in ANSI C, 
and compiles unmodified in all known platforms. The implementation goals 
are simplicity, efficiency, portability, and low embedding cost. 
<<

DescPort: <<
Note: lua52 replaces older 5.0 'lua' package, but co-exists with lua51 
	  and possible future packages, using 'update-alternatives' for the 
	  common 'lua' command (otherwise, no conflicts).
Note: Stock Lua compilation does not create dynamic libraries; we do it 
	  here. For some reason, cannot be done from 'liblua.a' directly, 
	  that will lose all the symbols. :((at least was so on 10.4-transitional) 
<<

DescPackaging: <<
Lua offers four header files for the creation of C/Lua bindings:
 
  lua.h, lualib.h, luaconf.h, and lauxlib.h

These are in the lua52-dev package, which will conflict with lua51-dev. 
User can have several Lua versions installed, but will only be able to 
develop C bindings with one of them at a time.
<<

SplitOff: <<
Package: lua52-shlibs
Conflicts: lua-shlibs (<< 1:5.0.4-0)
Replaces:  lua-shlibs (<< 1:5.0.4-0)

Description: Shared libraries for linking Lua 5.2

DocFiles: README

Files: <<
  lib/liblua.%v.dylib
  lib/liblua.5.2.dylib
<<

Shlibs: <<
  %p/lib/liblua.5.2.dylib 5.2.0 lua52-shlibs (>= 5.2.4-1)
<<
<<

SplitOff2: <<
Package: lua52-dev
Depends: lua52-shlibs (= %v-%r)
Conflicts: lua (<< 1:5.0.4-0), lua50-dev, lua51-dev, lua53-dev
Replaces:  lua (<< 1:5.0.4-0), lua50-dev, lua51-dev, lua53-dev
BuildDependsOnly: True
Recommends: pkgconfig, tolua

Description: Files for compiling against Lua C API

InstallScript: <<
#!/bin/sh -ev
  mkdir %i/lib
  ln -s liblua.%v.dylib %i/lib/liblua.dylib
<<

Files: <<
  include
  lib/pkgconfig
  lib/liblua.a
<<

DocFiles: README

DescDetail: <<
  For details about Lua/C API:
  http://www.lua.org/manual/5.2/manual.html#3
<<
<<

Homepage: http://www.lua.org
Maintainer: Karl-Michael Schindler <karl-michael.schindler@web.de>
