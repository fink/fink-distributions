Package: llvm-gcc42
Version: 2336.11
Revision: 8
Distribution: 10.9
Source: http://opensource.apple.com/tarballs/llvmgcc42/llvmgcc42-%v.tar.gz
Source-Checksum: SHA256(1bdb98d11abc91afa17b0d79735856e20b450aed178c79ba753b4f50054f4205)
PatchFile: %n.patch
PatchFile-MD5: 3ca37e403cacbcf2b3b6fc26efbcc874
PatchFile2: %n-clang.patch
PatchFile2-MD5: b0bbe5d6a8888013ac0b7657690d60a3
BuildDepends: <<
	fink (>= 0.30.0),
	gettext-tools,
	libiconv-dev,
	texinfo-legacy,
	xcode (>= 4.7)
<<
Depends: <<
	%N-shlibs (= %v-%r),
	libiconv,
	xcode (>= 4.7)
<<
SourceDirectory: llvmgcc42-%v
NoSetCPPFLAGS: true
NoSetLDFLAGS: true
BuildDependsOnly: false
UseMaxBuildJobs: false
InfoDocs: llvm-cpp.info llvm-cppinternals.info llvm-gcc.info llvm-gccinstall.info llvm-gccint.info
PatchScript: <<
	#!/bin/bash -ev
	sed -e "s|@@FINKPREFIX@@|%p|g" < %{PatchFile} | patch -p0
	mv build_gcc.fink build_gcc
	chmod u+x build_gcc
	perl -pi -e "s|DEVELOPER_DIR|BUILD_DEVELOPER_DIR|g" %b/GNUmakefile %b/llvmCore/utils/buildit/build_llvm
	perl -pi -e "s|--enable-werror | |" %b/build_gcc
	perl -pi -e "s|developer.apple.com/bugreporter|http://sourceforge.net/p/fink/bugs/|g" %b/gcc/version.c
	perl -pi -e "s|LLVM_VERSION_INFO \"|LLVM_VERSION_INFO \" as Fink %n %v_%r|g" %b/gcc/version.c
	# ltmain.sh notes 'On all known operating systems, these are identical', and -module has gone
	# away with Apple's clang-3.4
	perl -pi -e 's/module/export_dynamic/' llvmCore/Makefile.rules
	perl -pi -e 's/-no-undefined//' llvmCore/tools/edis/Makefile llvmCore/tools/lto/Makefile
	# check for incompatible clang
	clangvers=`clang --version | cut -d\  -f4`
	$(`dpkg --compare-versions $clangvers '>>' 6.0`) && clangcheck='y'
	if [ "$clangcheck" = "y" ]; then
		patch -b -p1 < %{PatchFile2}
	fi
	perl -pi -e 's|-install_name|-Wl,-headerpad_max_install_names -install_name|g' %b/gcc/Makefile.in
	# make remove_duplicates() sandbox friendly
	perl -pi.bak -e "s|if \(errno \!\= ENOENT\)|if \(\(errno \!\= ENOENT\) \&\& \(errno \!\= EPERM\)\)|g" %b/gcc/c-incpath.c
<<
CompileScript: <<
<<
InstallScript: <<
	#!/bin/bash -ev
	export LIBRARY_PATH="%p/lib:/usr/lib"
	export CPATH="%p/include:/usr/include"
	export PATH="%p/opt/texinfo-legacy/bin:%p/bin:/bin:/usr/bin:/sbin:/usr/sbin"
	export LANGUAGES="c,c++,objc,obj-c++"
	export AR_FOR_TARGET=/usr/bin/ar
	export AS_FOR_TARGET=/usr/bin/as
	export LD_FOR_TARGET=/usr/bin/ld
	export NM_FOR_TARGET=/usr/bin/nm
	export RANLIB_FOR_TARGET=/usr/bin/ranlib
	export STRIP_FOR_TARGET=/usr/bin/strip
	export DSYMUTIL_FOR_HOST=/usr/bin/dsymutil
	export RANLIB_FOR_HOST=/usr/bin/ranlib
	export STRIP_FOR_HOST=/usr/bin/strip
	export OTOOL=/usr/bin/otool
	export OTOOL64=/usr/bin/otool
	export MAKEINFO=%p/opt/texinfo-legacy/bin/makeinfo
	/usr/bin/make install CC="clang -pipe -std=gnu89"            \
		CXX="clang++ -pipe -stdlib=libstdc++"  \
		PREFIX=%p                              \
		SRCROOT=%b                             \
		OBJROOT=%b/../objroot                  \
		SYMROOT=%b/../symroot                  \
		DSTROOT=%d                             \
		RC_NONARCH_CFLAGS="-pipe -std=gnu89"   \
		RC_OS="macos"                          \
		RC_ARCHS="x86_64"                      \
		RC_ProjectSourceVersion="2336"         \
		RC_ProjectSourceSubversion="11"        \
		TARGETS="x86_64"                       \
		BUILD_DEVELOPER_DIR="Developer"

	# move directory structure with tar
	cd %b/../objroot/dst-x86_64-x86_64
	tar -cpf - .%p | (cd %d ; tar xpf -)

	# remove overlapping manpages with gcc48
	rm -fr %i/share/man/man7

	# remove llvm-gcc-4.2 as gcc
	rm %i/bin/gcc %i/bin/%m-apple-darwin*-gcc

	# add symlinks for as, ld and libstdc++.dylib
	ln -sf /usr/bin/as %i/lib/llvm-gcc42/gcc/x86_64-apple-darwin13/4.2.1/as
	ln -sf /usr/bin/ld %i/lib/llvm-gcc42/gcc/x86_64-apple-darwin13/4.2.1/ld
	ln -sf /usr/lib/libstdc++.6.dylib %i/lib/llvm-gcc42/gcc/x86_64-apple-darwin13/4.2.1/libstdc++.6.dylib

	# hardcode install name for libllvmgcc.dylib
	install_name_tool -id %p/lib/llvm-gcc42/gcc/x86_64-apple-darwin13/4.2.1/libllvmgcc.dylib %i/lib/llvm-gcc42/gcc/x86_64-apple-darwin13/4.2.1/libllvmgcc.dylib

	# Rename infofiles with llvm- prefix and create symlinks to old names. 
	install -d -m 755 %i/share/info
	infofiles="cpp cppinternals gcc gccinstall gccint"
	for infofile in $infofiles ; do
		mv %i/lib/%n/info/$infofile.info %i/lib/%n/info/llvm-$infofile.info
		ln -s %p/lib/%n/info/llvm-$infofile.info %i/share/info/llvm-$infofile.info
	done
<<
SplitOff: <<
	Package: %N-shlibs
	Description: Shared libraries for llvm-gcc42
	Files: <<
		lib/llvm-gcc42/libgomp.1*.dylib
		lib/llvm-gcc42/i386/libgomp.1*.dylib
		lib/llvm-gcc42/gcc/x86_64-apple-darwin13/4.2.1/libllvmgcc.dylib
	<<
	Shlibs: <<
		%p/lib/llvm-gcc42/libgomp.1.dylib 2.0.0 %n (>= 2336.11-1)
		%p/lib/llvm-gcc42/i386/libgomp.1.dylib 2.0.0 %n (>= 2336.11-1)
		!%p/lib/llvm-gcc42/gcc/x86_64-apple-darwin13/4.2.1/libllvmgcc.dylib
	<<
<<
License: GPL2
Description: Apple gcc compiler frontend for llvm
DescDetail: <<
llvm-gcc42 integrates the LLVM optimizers and code 
generator with the GCC 4.2 parser. This allows LLVM to
compile languages supported by the GCC compiler
frontends, and provides high-fidelity drop-in 
compatibility with version 4.2 of GCC.
<<
DescPackaging: <<
Set UseMaxBuildJobs false and rely on build_gcc script to directly handle -j for parallel make and
serial make install.
<<
Homepage: http://opensource.apple.com/
Maintainer: None <fink-devel@lists.sourceforge.net>
