diff -Nurd -x'*~' elinks-0.13~20190125.orig/Makefile.config.in elinks-0.13~20190125/Makefile.config.in
--- elinks-0.13~20190125.orig/Makefile.config.in	2019-01-25 20:48:21.000000000 -0500
+++ elinks-0.13~20190125/Makefile.config.in	2019-11-24 03:15:14.000000000 -0500
@@ -185,7 +185,7 @@
 LIBS = @LIBS@
 
 
-INCLUDES = -I$(top_builddir) -I$(top_srcdir)/src
+INCLUDES = -I$(top_builddir) -I$(top_srcdir)/src -I$(top_srcdir)/src/intl/gettext
 
 COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS)
 
diff -Nurd -x'*~' elinks-0.13~20190125.orig/configure.ac elinks-0.13~20190125/configure.ac
--- elinks-0.13~20190125.orig/configure.ac	2019-01-25 20:48:21.000000000 -0500
+++ elinks-0.13~20190125/configure.ac	2019-11-24 03:59:38.000000000 -0500
@@ -491,8 +491,8 @@
 EL_CONFIG_OPTIONAL_LIBRARY(CONFIG_BROTLI, brotli, brotli/decode.h, brotlidec, BrotliDecoderDecompressStream,
 	[  --with-brotli           enable experimental brotli support])
 
-EL_CONFIG_OPTIONAL_LIBRARY(CONFIG_IDN, idn, idna.h, idn, stringprep_check_version,
-	[  --without-idn           disable international domain names support])
+EL_CONFIG_OPTIONAL_LIBRARY(CONFIG_IDN2, idn2, idn2.h, idn2, idn2_lookup_ul,
+	[  --without-idn2           disable international domain names support])
 
 # LZMA disabled by default, because of little usability and compilation problems
 # with new xz
@@ -1684,11 +1684,8 @@
 # -rdynamic check needs to happen after the libraries have already
 # been added to $LDFLAGS.
 AC_MSG_CHECKING([for -rdynamic])
-LDFLAGS_X="$LDFLAGS"
-LDFLAGS="-rdynamic $LDFLAGS"
-AC_LINK_IFELSE([AC_LANG_PROGRAM([[]], [[]])],[have_rdynamic=yes],[have_rdynamic=no])
-test "$have_rdynamic" = no && LDFLAGS="$LDFLAGS_X"
-AC_MSG_RESULT($have_rdynamic)
+have_rdynamic=no
+AC_MSG_RESULT([no (forced)])
 
 # ===================================================================
 # Export directory paths
diff -Nurd -x'*~' elinks-0.13~20190125.orig/src/protocol/uri.c elinks-0.13~20190125/src/protocol/uri.c
--- elinks-0.13~20190125.orig/src/protocol/uri.c	2019-01-25 20:48:21.000000000 -0500
+++ elinks-0.13~20190125/src/protocol/uri.c	2019-11-24 03:15:18.000000000 -0500
@@ -6,8 +6,8 @@
 
 #include <ctype.h>
 #include <errno.h>
-#ifdef HAVE_IDNA_H
-#include <idna.h>
+#ifdef HAVE_IDN2_H
+#include <idn2.h>
 #endif
 #include <stdio.h>
 #include <stdlib.h>
@@ -531,24 +531,20 @@
 		 * --pasky */
 		if (uri->ipv6 && wants(URI_PORT)) add_char_to_string(string, '[');
 #endif
-#ifdef CONFIG_IDN
+#ifdef CONFIG_IDN2
 		/* Support for the GNU International Domain Name library.
 		 *
-		 * http://www.gnu.org/software/libidn/manual/html_node/IDNA-Functions.html
-		 *
-		 * Now it is probably not perfect because idna_to_ascii_lz()
-		 * will be using a ``zero terminated input string encoded in
-		 * the current locale's character set''. Anyway I don't know
-		 * how to convert anything to UTF-8 or Unicode. --jonas */
+		 * http://www.gnu.org/software/libidn/libidn2/manual/libidn2.html
+		 */
 		if (wants(URI_IDN)) {
 			unsigned char *host = memacpy(uri->host, uri->hostlen);
 
 			if (host) {
 				char *idname;
-				int code = idna_to_ascii_lz(host, &idname, 0);
+				int code = idn2_lookup_ul(host, &idname, 0);
 
 				/* FIXME: Return NULL if it coughed? --jonas */
-				if (code == IDNA_SUCCESS) {
+				if (code == IDN2_OK) {
 					add_to_string(string, idname);
 					free(idname);
 					add_host = 0;
