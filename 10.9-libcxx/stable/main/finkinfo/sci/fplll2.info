Info4: <<
# 5.3.3 bumps libN=6
Package: fplll2
Version: 5.0.3
Revision: 1
Maintainer: None <fink-devel@lists.sourceforge.net>

Conflicts: fplll0, fplll2
Replaces: fplll0, fplll2
BuildDepends: <<
  fink-package-precedence,
  gmp5,
  libmpfr4,
<<
Depends: %N-shlibs (= %v-%r)
BuildDependsOnly: True

Source: https://github.com/fplll/fplll/releases/download/%v/fplll-%v.tar.gz
Source-MD5: 111ea027e447878d656414f24867f289

PatchScript: <<
	# Patch configure to not link like Puma on Yosemite
	perl -pi.bak -e 's|10\.\[012\]\*|10.[012][,.]*|g' configure
<<

# TODO: use --without-qd to avoid a "hidden dependency" if we ever
# add a qd package. However, this flag breaks the fplll compilation
# (this should be fixed in a future version, though)
#ConfigureParams: --without-qd

InfoTest: TestScript: make check || exit 2

CompileScript: <<
#!/bin/sh -ev
  ./configure %c
  make
  fink-package-precedence .
<<
InstallScript: make install DESTDIR=%d
DocFiles: COPYING INSTALL NEWS README.md
SplitOff: <<
  Package: %N-shlibs
  Depends: gmp5-shlibs, libmpfr4-shlibs
  Files: lib/libfplll.2.dylib
  Shlibs: %p/lib/libfplll.2.dylib 3.0.0 %n (>= 5.0.0-1)
  DocFiles: COPYING INSTALL NEWS README.md
<<

Description: LLL-reduction of euclidean lattices
DescDetail: <<
fplll contains several algorithms on lattices that rely on floating-point
computations. This includes implementations of the floating-point LLL
reduction algorithm, offering different speed/guarantees ratios. It contains
a 'wrapper' choosing the estimated best sequence of variants in order to
provide a guaranteed output as fast as possible. In the case of the wrapper,
the succession of variants is oblivious to the user. It also includes a
rigorous floating-point implementation of the Kannan-Fincke-Pohst algorithm
that finds a shortest non-zero lattice vector, and the BKZ reduction
algorithm.
<<
Homepage: https://github.com/fplll/fplll
License: GPL
<<
