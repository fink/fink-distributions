Package: eigen2
Version: 2.0.17
Revision: 1
Maintainer: None <fink-devel@lists.sourceforge.net>
BuildDepends: cmake (>= 2.6.2)
BuildDependsOnly: true

SourceDirectory: eigen-eigen-b23437e61a07
Source: http://bitbucket.org/eigen/eigen/get/%v.bz2
Source-Checksum: SHA256(7255e856ed367ce6e6e2d4153b0e4e753c8b8d36918bf440dd34ad56aff09960)
SourceRename: %n-%v.tar.bz2
CompileScript: <<
 #!/bin/sh -ev
 /bin/mkdir build
 cd build
 %p/bin/cmake \
 -DCMAKE_INSTALL_PREFIX=%i \
 ..
<<

InstallScript: <<
 #!/bin/sh -ev
 cd build
 /usr/bin/make install
 perl -pi -e 's,%d,,g' %i/share/pkgconfig/eigen2.pc
<<

Docfiles: COPYING COPYING.LESSER
Description: C++ template library for linear algebra
DescDetail: <<
Eigen 2 is a C++ template library for linear algebra (vectors, matrices, and 
related algorithms). It is:
 * Versatile. Eigen handles both fixed-size and dynamic-size matrices and
  vectors, without code duplication, and in a completely integrated way. It
  aims to provide not only vectors and matrices but also many algorithms.
 * Fast. Expression templates remove temporaries and enable lazy evaluation.
  Explicit vectorization is performed for the SSE (2 and later) and AltiVec
  instruction sets, with graceful fallback to non-vectorized code. With
  fixed-size objects, dynamic memory allocation is avoided, and the loops
  are unrolled when that makes sense. For large matrices, special attention
  is paid to cache-friendliness. This Benchmark shows Eigen's outstanding
 performance.
 * Good API. Expression templates allow for a very clean and expressive API.
  Implementing an algorithm on top of Eigen feels like just copying
  pseudocode.
<<
DescPackaging: <<
 Previous maintainer: Hanspeter Niederstrasser <nieder@users.sourceforge.net>
                      Koen van der Drift <driftkop@users.sourceforge.net>
 Docs are not installed because they require some *tex and *ps.
<<
License: GPL
Homepage: http://eigen.tuxfamily.org/
