Info2: <<

Package: geojson-py%type_pkg[python]
Version: 1.0.9
Revision: 1
Type: python (2.7 3.4 3.5 3.6)

Source: http://pypi.python.org/packages/source/g/geojson/geojson-%v.tar.gz
Source-MD5: 94880d993dba8b184de122c5a84fa329

Depends: python%type_pkg[python], simplejson-py%type_pkg[python]
BuildDepends: setuptools-tng-py%type_pkg[python]

CompileScript: <<
 %p/bin/python%type_raw[python] setup.py build
<<
InstallScript: <<
 %p/bin/python%type_raw[python] setup.py install --root %d
<<

License: BSD
DocFiles: LICENSE.rst PKG-INFO README.rst
Homepage: http://pypi.python.org/pypi/geojson/
Maintainer: Kurt Schwehr <goatbar@users.sourceforge.net>

# Doctests aren't quite right, but the package works
#InfoTest: <<
#  TestScript: %p/bin/python%type_raw[python] setup.py test || exit 2
#<<

Description: Encoder/decoder for simple GIS features
DescDetail: <<
This package contains:

    * The reference implementation of the Python geo interface:
      http://trac.gispython.org/lab/wiki/PythonGeoInterface

    * Functions for encoding and decoding GeoJSON (http://geojson.org)
      formatted data.

Geojson provides geometry, feature, and collection classes, and
supports pickle-style dump and load of objects.
<<
DescUsage: <<
Here's an example of a round-trip through the GeoJSON format:

>>> import geojson
>>> p = geojson.Point([0.0, 0.0])
>>> p
Point(coordinates=[0.0, 0.0])
>>> data = geojson.dumps(p)
>>> data
'{"type": "Point", "coordinates": [0.0, 0.0]}'
>>> q = geojson.loads(data, object_hook=geojson.GeoJSON.to_instance)
>>> q
Point(coordinates=[0.0, 0.0])

The geometry classes interoperate with Shapely via the geo interface:

>>> from shapely.geometry import asShape
>>> x = asShape(p)
>>> x.wkt
'POINT (0.0000000000000000 0.0000000000000000)'
<<

# Info2
<<
