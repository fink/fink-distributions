Info4: <<
Package: fplll0
Version: 4.0.4
Revision: 3
Maintainer: None <fink-devel@lists.sourceforge.net>

Conflicts: fplll0, fplll2
Replaces: fplll0, fplll2
BuildDepends: <<
  fink-package-precedence,
  gmp5,
  libmpfr6,
<<
Depends: %N-shlibs (= %v-%r)
GCC: 4.0
BuildDependsOnly: True

Source: http://perso.ens-lyon.fr/damien.stehle/fplll/libfplll-%v.tar.gz
Source-Checksum: SHA256(cba8b0ded43f235003a58bcd4b2973105749b3f69732ae09fa44c7e98f5f71b1)

PatchScript: <<
	# Patch configure to not link like Puma on Yosemite
	perl -pi.bak -e 's|10\.\[012\]\*|10.[012][,.]*|g' configure
<<
ConfigureParams: --disable-static

InfoTest: TestScript: make check || exit 2

CompileScript: <<
#!/bin/sh -ev
  ./configure %c
  make
  fink-package-precedence --prohibit-bdep=%n .
<<
InstallScript: make install DESTDIR=%d
DocFiles: AUTHORS COPYING INSTALL NEWS README README.html
SplitOff: <<
  Package: %N-shlibs
  Depends: gmp5-shlibs, libmpfr6-shlibs
  Files: lib/libfplll.0.dylib
  Shlibs: %p/lib/libfplll.0.dylib 2.0.0 %n (>= 4.0.0-1)
  DocFiles: AUTHORS COPYING INSTALL NEWS README README.html
<<

Description: LLL-reduction of euclidean lattices
DescDetail: <<
fplll contains several algorithms on lattices that rely on floating-point
computations. This includes implementations of the floating-point LLL
reduction algorithm, offering different speed/guarantees ratios. It contains
a 'wrapper' choosing the estimated best sequence of variants in order to
provide a guaranteed output as fast as possible. In the case of the wrapper,
the succession of variants is oblivious to the user. It also includes a
rigorous floating-point implementation of the Kannan-Fincke-Pohst algorithm
that finds a shortest non-zero lattice vector, and the BKZ reduction
algorithm.
<<
Homepage: https://github.com/fplll/fplll
License: GPL
<<
