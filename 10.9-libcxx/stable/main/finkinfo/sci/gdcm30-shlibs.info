Package: gdcm30-shlibs
Version: 3.0.24
Revision: 1
Maintainer: None: <fink-devel@lists.sourceforge.net>
Homepage: http://gdcm.sourceforge.net/wiki/index.php/Main_Page
Description: Grassroots DICOM library
DescDetail: <<
Whenever medical data, especially medical image data, is generated in a
clinical environment, that data must be stored such that it can be retrieved by
the same hospital either immediately, or after several years to determine the
effectiveness of a course of treatment and to allow comparisons of multiple
images for the same patient.

Digital Imaging and Communications in Medicine (DICOM) is a standard that
governs this capability by specifying handling, storing, printing, and
transmitting information in medical imaging.

Grassroots DICOM (GDCM) is an implementation of the DICOM standard designed to
be open source so that researchers may access clinical data directly. GDCM
includes a file format definition and a network communications protocol, both
of which should be extended to provide a full set of tools for a researcher or
small medical imaging vendor to interface with an existing medical database.
GDCM is an open source implementation of the DICOM standard. It offers some
compatibility with ACR-NEMA 1.0 & 2.0 files (raw files). 
<<
License: BSD

BuildDepends: <<
	cmake,
	docbook-xsl-ns (>= 1.78.1-2),
	expat1,
	fink-package-precedence,
	json-c5,
	libcharls2-dev,
	libiconv-dev,
	libopenjp2.7,
	libsocket++.1.2-dev,
	libxml2,
	openssl300-dev,
	pkgconfig,
	swig
<<
Depends: <<
	expat1-shlibs,
	json-c5-shlibs,
	libcharls2-shlibs,
	libiconv,
	libopenjp2.7-shlibs,
	libsocket++.1.2-shlibs,
	openssl300-shlibs
<<
GCC: 4.0

Source: mirror:sourceforge:gdcm/gdcm%%203.x/GDCM%%20%v/gdcm-%v.tar.bz2
Source-Checksum: SHA256(c672bb6caa83ac937e5e1595e0f809bc65cbc1d516ab6363156a49548f1e51f1)

PatchFile: %n.patch
PatchFile-MD5: a493fb051175fb9496ea57b63f10ccca
PatchScript: <<
	%{default_script}
	perl -pi -e 's|/etc/xml/catalog|%p$&|g' Utilities/doxygen/CMakeLists.txt
<<

#-DGDCM_USE_SYSTEM_PAPYRUS3
#-DGDCM_USE_SYSTEM_LJPEG
CompileScript: <<
#!/bin/sh -ev
	mkdir ../finkbuild
	pushd ../finkbuild
		cmake \
		-DCMAKE_PREFIX_PATH=%p \
		-DCMAKE_INSTALL_PREFIX:PATH=%i \
		-DCMAKE_INSTALL_NAME_DIR=%p/lib \
		-DGDCM_BUILD_SHARED_LIBS:BOOL=ON \
		-DGDCM_USE_SYSTEM_CHARLS:BOOL=ON \
		-DGDCM_USE_SYSTEM_EXPAT:BOOL=ON \
		-DGDCM_USE_SYSTEM_JSON:BOOL=ON \
		-DGDCM_USE_SYSTEM_LIBXML2:BOOL=ON \
		-DGDCM_USE_SYSTEM_OPENJPEG:BOOL=ON \
		-DGDCM_USE_SYSTEM_OPENSSL:BOOL=ON \
		-DGDCM_USE_SYSTEM_SOCKETXX:BOOL=ON \
		-DSOCKETXX_INCLUDE_DIR:PATH=%p/include \
		-DGDCM_USE_SYSTEM_UUID:BOOL=ON \
		-DGDCM_USE_SYSTEM_ZLIB:BOOL=ON \
		-DGDCM_WRAP_JAVA:BOOL=OFF \
		-DGDCM_BUILD_APPLICATIONS:BOOL=ON \
		-DCMAKE_C_FLAGS=-MD \
		-DCMAKE_CXX_FLAGS=-MD \
		%b
		make
	popd
	pushd ..
		fink-package-precedence --depfile-ext='\.d' --prohibit-bdep=gdcm30-dev .
	popd
<<

InstallScript: << 
#!/bin/sh -ev
	pushd ../finkbuild
		make install
	popd
<<
DocFiles: AUTHORS Copyright.txt README.Copyright.txt
Shlibs: <<
	%p/lib/libgdcmCommon.3.0.dylib 3.0.0 %n (>=3.0.24-1) 
	%p/lib/libgdcmDICT.3.0.dylib 3.0.0 %n (>=3.0.24-1)
	%p/lib/libgdcmDSED.3.0.dylib 3.0.0 %n (>=3.0.24-1) 
	%p/lib/libgdcmIOD.3.0.dylib 3.0.0 %n (>=3.0.24-1) 
	%p/lib/libgdcmMEXD.3.0.dylib 3.0.0 %n (>=3.0.24-1) 
	%p/lib/libgdcmMSFF.3.0.dylib 3.0.0 %n (>=3.0.24-1) 
	%p/lib/libgdcmjpeg12.3.0.dylib 3.0.0 %n (>=3.0.24-1) 
	%p/lib/libgdcmjpeg16.3.0.dylib 3.0.0 %n (>=3.0.24-1) 
	%p/lib/libgdcmjpeg8.3.0.dylib 3.0.0 %n (>=3.0.24-1) 
<<
SplitOff: <<
	Package: gdcm
	Depends: <<
		%N (>= %v-%r),
		libsocket++.1.2-shlibs,
		libxml2-shlibs
	<<
	Files: <<
		bin
		share/man
	<<
	DocFiles: AUTHORS Copyright.txt README.Copyright.txt
<<
SplitOff3: <<
	Package: gdcm30-dev
	Depends: %N (= %v-%r)
	BuildDependsOnly: true
	Conflicts: <<
		gdcm-dev,
		gdcm24-dev,
		gdcm26-dev,
		gdcm30-dev
	<<
	Replaces: <<
		gdcm-dev,
		gdcm24-dev,
		gdcm26-dev,
		gdcm40-dev
	<<
	Files: <<
		lib/lib*[^04].dylib
		lib/gdcm-3.0
		include
	<<
	DocFiles: AUTHORS Copyright.txt README.Copyright.txt
<<
DescPackaging: <<
	Docs use TeX for generation, so we aren't building them in
	this package.

	docbook-xsl-ns needed to build manpages (otherwise build
	error). Can disable their generation by defining
	"GDCM_BUILD_DOCBOOK_MANPAGES:BOOL=OFF" at config time.
	
	Python bindings don't work yet.

	Examples use Qt for their build, so we'll pull those into
	their own package at some point.

	As of 2.6.9, Java stuff stopped working, so don't build it.

	Former maintainer: Alexander Hansen <alexkhansen@users.sourceforge.net>
<<
