Info2: <<
Package: arpack-ng%type_pkg[-mpi]%type_pkg[-blas]
Version: 3.4.0
Revision: 2
Type: -blas (-atlas -ref .), gcc (9), lapack (3.8.0), -mpi (. -mpi)

Maintainer: None <fink-devel@lists.sourceforge.net>
Description: Solve large scale eigenvalue problems
DescDetail: <<
ARPACK is a collection of Fortran77 subroutines designed to solve large scale
eigenvalue problems.  It began at Rice university:
http://www.caam.rice.edu/software/ARPACK

The arpack-ng project is a joint project between Debian, Octave and Scilab in 
order to provide a common and maintained version of arpack.

Because no single release has been published by Rice university for the last 
decade and since many software packages (Octave, Scilab, R, Matlab...) have 
forked it and implemented their own modifications, arpack-ng aims to tackle 
this issue by providing a common repository and maintained version.
<<
DescUsage: <<
This package contains static libraries, an unversioned dylib, Fortran 
examples, and documentation.
<<

BuildDependsOnly: true
Homepage:  https://github.com/opencollab/arpack-ng
License: BSD

Source: https://github.com/opencollab/%{Ni}/archive/%v.tar.gz
Source-MD5: ae9ca13f2143a7ea280cb0e2fd4bfae4
Source-Checksum: SHA1(c6ea9ea1712c27ec45fbf33c3f064fdba7e9c89b)
SourceRename: %{Ni}-%v.tar.gz
SourceDirectory: %{Ni}-%v

BuildDepends: <<
	autoconf2.6,
	automake1.15,
	(%type_raw[-blas] = -atlas) atlas (>= 3.10.2-5),
	(%type_raw[-blas] = -ref) lapack%type_pkg[lapack],
	gcc%type_pkg[gcc]-compiler,
	libtool2,
	(%type_raw[-mpi] = -mpi) openmpi,
	(%type_raw[-mpi] = -mpi) pykg-config,
	fink (>=0.30.0)
<<
Depends: %N-shlibs (= %v-%r )
Conflicts: <<
	%{Ni}, 
	%{Ni}-atlas, 
	%{Ni}-ref,
	%{Ni}-mpi, 
	%{Ni}-mpi-atlas, 
	%{Ni}-mpi-ref,
	arpack, 
	arpack-atlas
<<
Replaces: <<
	%{Ni}, 
	%{Ni}-atlas, 
	%{Ni}-ref, 
	%{Ni}-mpi, 
	%{Ni}-mpi-atlas, 
	%{Ni}-mpi-ref, 
	arpack, 
	arpack-atlas
<<

PatchScript: <<
	#!/bin/sh -ev
	# tweak the .pc file
	case "%type_raw[-blas]" in
		-ref) subst="s|-lblas -latlas|-L%p/lib/lapack/%type_raw[lapack] -lrefblas -lreflapack|" ;;
		-atlas) subst="s/-lblas -latlas/-ltatlas/" ;;
		*) subst="s/-lblas -latlas/-Wl,framework,Accelerate/" ;;
	esac
	perl -pi -e "$subst" arpack.pc.in
<<
SetLDFLAGS: -Wl,-dead_strip_dylibs

ConfigureParams: <<
	(%type_raw[-blas] = .) --with-blas='-Wl,-framework,Accelerate' \
	(%type_raw[-blas] = .) --with-lapack='-Wl,-framework,Accelerate' \
	(%type_raw[-blas] = -atlas) --with-blas='-ltatlas' \
	(%type_raw[-blas] = -atlas) --with-lapack='-ltatlas' \
	(%type_raw[-blas] = -ref) --with-blas='-L%p/lib/lapack/%type_raw[lapack] -lrefblas' \
	(%type_raw[-blas] = -ref) --with-lapack='-L%p/lib/lapack/%type_raw[lapack] -lreflapack' \
	--libdir=%p/lib/%{Ni}%type_pkg[-blas] \
	(%type_raw[-mpi] = -mpi) --enable-mpi \
	--disable-static
<<

CompileScript: <<
	#!/bin/sh -ev
	./bootstrap
	export F77=%p/bin/gfortran-fsf-%type_raw[gcc]
	if [ "%type_raw[-mpi]" = "-mpi" ] ; then
		export MPIF77=%p/bin/mpif77
		libs=`PKG_CONFIG_PATH=%p/lib/openmpi/pkgconfig pykg-config --libs ompi-f77 | cut -d\  -f2- `
		export LIBS=$libs
		export LDFLAGS="-L%p/lib/openmpi $LDFLAGS"
	fi
	if [ "%type_raw[-blas]" = "." ]  
		then export FFLAGS='-ff2c'
	fi
	%{default_script}
<<

InstallScript:  <<
	#!/bin/sh -ev
	make install DESTDIR=%d
	# manually install headers
	mkdir -p %i/include/arpack
	cp SRC/*.h %i/include/arpack
	pushd %i/lib
	# move .la and .pc files
	mv arpack-ng%type_pkg[-blas]/pkgconfig .
	mv arpack-ng%type_pkg[-blas]/*.la .
	# put in compatibility symlinks
	ln -s arpack-ng%type_pkg[-blas]/libarpack.dylib 
	if [ "%type_raw[-mpi]" = "-mpi" ] 
	    # For -mpi variant only:
	    # put in compatibility symlink
		then ln -s arpack-ng%type_pkg[-blas]/libparpack.dylib
		popd
		# copy PARPACK docs manually
		mkdir -p %i/share/doc/%n/PARPACK
		cp -r PARPACK_CHANGES %i/share/doc/%n/
		cp -r PARPACK/EXAMPLES %i/share/doc/%n/PARPACK
	fi
<<

DocFiles: CHANGES DOCUMENTS EXAMPLES  README TODO COPYING
DescPackaging:  <<
	Needs a gfortran, so we'r currently using gcc5

	Needs -ff2c when using Accelerate.framework, but not when using
	ATLAS or the reference LAPACK.
	
	We can actually disable parpack now.  Only copy the PARPACK docs
	for the -mpi variants.
	
	As of 3.1.3-3:  stash libraries in a variant-specific directory to
				 	avoid dependency deadlocks amongst the shlibs.
	Former Maintainer: Alexander Hansen <alexkhansen@users.sourceforge.net>
<<

Splitoff: <<
	Package: %N-shlibs
	Files: lib/arpack-ng%type_pkg[-blas]/lib*arpack.2.dylib
	Shlibs: <<
		%p/lib/arpack-ng%type_pkg[-blas]/libarpack.2.dylib 3.0.0 %n (>=3.1.3-3)
		(%type_raw[-mpi] = -mpi) %p/lib/arpack-ng%type_pkg[-blas]/libparpack.2.dylib 3.0.0 %n (>=3.1.3-1)
	<<
	Depends: <<
		(%type_raw[-blas] = -atlas) atlas-shlibs (>= 3.10.2-5), 
		(%type_raw[-blas] = -ref) lapack%type_pkg[lapack]-shlibs,
		(%type_raw[-mpi] = -mpi) openmpi-shlibs,
		gcc%type_pkg[gcc]-shlibs
	<<
	Conflicts: <<
		arpack-ng%type_pkg[-blas]-shlibs,
		arpack-ng-mpi%type_pkg[-blas]-shlibs
	<<
	Replaces: <<
		arpack-ng%type_pkg[-blas]-shlibs,
		arpack-ng-mpi%type_pkg[-blas]-shlibs
	<<
	DescDetail: <<
		This package contains the shared libraries.
	<<
	DocFiles: COPYING
<<
<<
