Package: yorick
Version: 2.2.04
Revision: 1
Description: Interpreted language and scientific graphics
License: BSD
Maintainer: None <fink-devel@lists.sourceforge.net>
Depends: x11
BuildDepends: texinfo, x11-dev
Source: https://github.com/dhmunro/yorick/archive/y_2_2_04.tar.gz
SourceDirectory: yorick-y_2_2_04
Source-Checksum: SHA256(4a4f3a18aed533cc5fadbb3d4bafb48f04834a22cbff6ad5c19d9dba74facbda)
SetCFLAGS: -O2
CompileScript: <<
  make Y_HOME=relocatable ysite
  ./configure
  make
  cd doc; make yorick.info
<<
InfoTest: <<
	TestDepends: xvfb-run
	TestScript: xvfb-run make check || exit 2
<<
InstallScript: <<
	make install
	### move the runtime yorick tree into %i
	/usr/bin/install -d %i/lib/yorick/2.2
	/bin/cp -r relocatable/* %i/lib/yorick/2.2
	### generate symlinks in %p/bin for ease of use
	/usr/bin/install -d %i/bin
	/bin/ln -s %p/lib/yorick/2.2/bin/yorick %i/bin/yorick
	/bin/ln -s %p/lib/yorick/2.2/bin/gist %i/bin/gist
	### install associated help files
	/usr/bin/install -d %i/share/info %i/share/man/man1 %i/share/emacs/site-lisp
	/usr/bin/install -m 644 doc/yorick.info* %i/share/info
	/usr/bin/install -m 644 doc/yorick.1 doc/gist.1 %i/share/man/man1
	/usr/bin/install -m 644 emacs/yorick.el emacs/yorick-auto.el %i/share/emacs/site-lisp
	### avoid duplication of documentation
	/bin/rm -rf %i/lib/yorick/2.2/doc
	/bin/ln -s %p/share/doc/yorick %i/lib/yorick/2.2/doc	  
<<
DocFiles: README.md LICENSE.md doc/README:README.doc doc/FILE_FORMATS doc/*.doc doc/*.pdf doc/*.tex
InfoDocs: yorick.info
Homepage: http://yorick.github.com/
DescDetail: <<
Yorick is an interpreted programming language, designed for
postprocessing or steering large scientific simulation codes. Smaller
scientific simulations or calculations, can be written as standalone
yorick programs. The language features a compact syntax for many
common array operations, so it processes large arrays of numbers very
efficiently. Unlike most interpreters, which are several hundred times
slower than compiled code for number crunching, yorick can approach to
within a factor of four or five of compiled speed for many common
tasks. Superficially, yorick code resembles C code, but yorick
variables are never explicitly declared and have a dynamic scoping
similar to many Lisp dialects. The yorick language is designed to be
typed interactively at a keyboard, as well as stored in files for
later use. Yorick includes an interactive graphics package, and a
binary file package capable of translating to and from the raw numeric
formats of all modern computers.
<<
DescUsage: <<
See %p/lib/yorick/2.2/i/testfull.i for a test suite. Type 
"yorick -batch testfull.i" in a xterm to run it.
<<
DescPackaging: <<
Install tree is placed in 'relocatable' directory in build tree. That layout can then be copied anywhere, as long as relative paths are maintained. We choose to use a major.minor version directory.  Is this forward looking for 2.3 and on?  Ubuntu puts yorick straight into the main tree, suggesting there are no versioning concerns.

There are several extra subroutines (like mpi) that might need the compiled build directory in order to be built.  If that can't be changed, will have to be generated as splitoffs, but having that many deps upfront should be avoided if possible.  Will need to investigate if they can be built off an installed yorick.
<<
