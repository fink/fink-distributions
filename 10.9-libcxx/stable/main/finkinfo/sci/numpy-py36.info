# -*- coding: ascii; tab-width: 4; x-counterpart: numpy-py.patch -*-
Info2: <<
Package: numpy-py36
Version: 1.19.5
Revision: 1
Distribution: 10.9, 10.10, 10.11, 10.12, 10.13, 10.14, 10.14.5, 10.15
# v1.20 drops support for py<37
Maintainer: None <fink-devel@lists.sourceforge.net>
Type: python (3.6), gcc (11)
Depends: <<
    python%type_pkg[python],
    openblas-shlibs
<<
BuildDepends: <<
    cython-py%type_pkg[python] (>= 0.29.21),
    openblas,
    setuptools-tng-py%type_pkg[python] (<< 60.0.0-1)
<<
Source: https://pypi.io/packages/source/n/numpy/numpy-%v.zip
Source-Checksum: SHA256(a76f502430dd98d7546e1ea2250a7360c065a5fdea52b2dffe8ae7180909b6f4)
# There probably never existed any py38+ versions of these:
Conflicts: <<
    f2py-py%type_pkg[python],
    scipy-py%type_pkg[python] (<= 1:0.4)
<<
Replaces: <<
    f2py-py%type_pkg[python],
    scipy-py%type_pkg[python] (<= 1:0.4),
    scipy-core-py%type_pkg[python] (<< 1.3.0-6)
<<
Provides: f2py-py%type_pkg[python]
#SetCC: gcc-fsf-%type_raw[gcc]
#SetCXX: g++-fsf-%type_raw[gcc]
#SetCFLAGS: -march=core2
SetCFLAGS: -mtune=native
# Support for macOS's Accelerate framework was re-enabled in numpy/numpy#18874
# as numpy can get by with LAPACK 3.2.1.
# Nonetheless giving preference to external OpenBLAS here.
CompileScript: <<
    NPY_BLAS_ORDER=openblas,accelerate NPY_LAPACK_ORDER=openblas,accelerate ATLAS=None %p/bin/python%type_raw[python] setup.py build
<<
InfoTest: <<
    TestDepends: <<
        gcc%type_raw[gcc]-compiler,
        hypothesis-py%type_pkg[python] (>= 6.24.1),
        pytest-py%type_pkg[python]
    <<
    TestScript: touch %b/INSTALL_MAKE_CHECK
<<
InstallScript: <<
    #!/bin/sh -ev
    ATLAS=None %p/bin/python%type_raw[python] setup.py install --root %d

    if [ -f %b/INSTALL_MAKE_CHECK ]; then
        PATH=%i/bin:$PATH
        # Point to gfortran executables for f2py tests.
        export F90=gfortran-fsf-%type_raw[gcc]
        export F77=$F90
        export PYTHONPATH=%i/lib/python%type_raw[python]/site-packages
        cd $PYTHONPATH
        # For comparison, runtest.py has 17404 passed, 730 skipped, 1293 deselected, 28 xfailed, 8 xpassed, 1 warning
        # pytest should have 18460-18537 passed, 968-889 skipped, 1 deselected, 27-28 xfailed, 8 xpassed, 230-246 warnings
        # >       ForkingPickler(file, protocol).dump(obj)
        # E       AttributeError: Can't pickle local object 'TestSaveTxt.test_large_zip.<locals>.check_large_zip'
        # %p/lib/python3.10/multiprocessing/reduction.py:60: AttributeError
        LANG=en_US.UTF-8 SHELL=/bin/sh %p/bin/python%type_raw[python] -Bm pytest numpy -k 'not (test_large_zip or TestCond and test_nan)' || exit 2
        rm -r numpy/.pytest_cache
    fi
 
    # We don't supply py-unversioned of this tool (could do it via
    # update-alternatives if there is demand).
    rm %i/bin/{f2py,f2py3}
<<
DocFiles: INSTALL.rst.txt LICENSE.txt PKG-INFO README.md THANKS.txt doc benchmarks
Description: N-dimensional array package for Python
DescDetail: <<
NumPy (formerly known as scipy_core) is the fundamental package needed
for scientific computing with Python. It contains among other things:

  - a powerful N-dimensional array object
  - sophisticated (broadcasting) functions
  - tools for integrating C/C++ and Fortran code
  - useful linear algebra, Fourier transform, and random number capabilities.

Besides its obvious scientific uses, NumPy can also be used as an
efficient multi-dimensional container of generic data. Arbitrary
data-types can be defined. This allows NumPy to seamlessly and
speedily integrate with a wide variety of databases.
<<
DescPackaging:  <<
https://github.com/numpy/numpy/issues/5229
Seems to be fixed in 1.10 (at least for Yosemite and El Capitan).
Impossible to issue a warning for the potential failures as a 'sys.exit(1)'
causes the install phase to immediately exit (thanks to 'bash -e'?).

Set SHELL (%v >= 1.13.0) because fink-bld's shell is /usr/bin/false and several configure test programs require a real shell.
https://sourceforge.net/p/fink/package-submissions/4930/#467b

Patched on 10.13, to not use SHELL from the environment, but hardcode a real shell following
https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=225156
Upstream kept the slightly non-POSIX behaviour, thus reverting to setting SHELL=/bin/sh.
Dependent packages using numpy.distutils.exec_command will need to follow suite.
<<
License: OSI-Approved
Homepage: http://www.numpy.org
<<
