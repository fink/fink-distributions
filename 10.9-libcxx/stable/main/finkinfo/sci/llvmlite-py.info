# -*- coding: ascii; tab-width: 4 -*-
Info2: <<
Package: llvmlite-py%type_pkg[python]
Version: 0.26.0
Revision: 1
Type: python (2.7 3.5 3.6 3.7)

Description: LLVM-Python binding for writing JIT compilers
DescDetail: <<
The old llvmpy binding exposes a lot of LLVM APIs but the mapping of C++-style
memory management to Python is error prone. Numba and many JIT compilers do not
need a full LLVM API. Only the IR builder, optimizer, and JIT compiler APIs are
necessary.

llvmlite is a project originally tailored for Numba's needs, using the
following approach:
- A small C wrapper around the parts of the LLVM C++ API we need that are not
  already exposed by the LLVM C API.
- A ctypes Python wrapper around the C API.
- A pure Python implementation of the subset of the LLVM IR builder that we
  need for Numba.

Key Benefits
- The IR builder is pure Python code and decoupled from LLVM's frequently-
  changing C++ APIs.
- Materializing a LLVM module calls LLVM's IR parser which provides better
  error messages than step-by-step IR building through the C++ API (no more
  segfaults or process aborts).
- Most of llvmlite uses the LLVM C API which is small but very stable
  (low maintenance when changing LLVM version).
- The binding is not a Python C-extension, but a plain DLL accessed using
  ctypes (no need to wrestle with Python's compiler requirements and C++ 11
  compatibility).
- The Python binding layer has sane memory management.
- llvmlite is quite faster than llvmpy thanks to a much simpler architecture
  (the Numba test suite is twice faster than it was).

llvmpy Compatibility Layer
- The llvmlite.llvmpy namespace provides a minimal llvmpy compatibility layer.
<<
DescPackaging: Last version to work with LLVM 6.0
Maintainer: Derek Homeier <dhomeie@gwdg.de>
License: BSD
Homepage: https://pypi.org/project/llvmlite/

Source: https://files.pythonhosted.org/packages/source/l/llvmlite/llvmlite-%v.tar.gz
Source-Checksum: SHA256(13e84fe6ebb0667233074b429fd44955f309dead3161ec89d9169145dbad2ebf)

Depends: llvm60-shlibs, python%type_pkg[python], ( %type_pkg[python] <= 33 ) enum34-py%type_pkg[python]
BuildDepends: fink (>= 0.32), llvm60 (>= 6.0.1), llvm60-dev (>= 6.0.1), libcxx1-dev (= 6.0.1-1), setuptools-tng-py%type_pkg[python]

CompileScript: LLVM_CONFIG=%p/opt/llvm-6.0/bin/llvm-config %p/bin/python%type_raw[python] setup.py build

InstallScript: <<
	LLVM_CONFIG=%p/opt/llvm-6.0/bin/llvm-config %p/bin/python%type_raw[python] setup.py install --root=%d
	install_name_tool -id %p/lib/python%type_raw[python]/site-packages/llvmlite/binding/libllvmlite.dylib %i/lib/python%type_raw[python]/site-packages/llvmlite/binding/libllvmlite.dylib
<<

InfoTest: <<
	TestScript: LLVM_CONFIG=%p/opt/llvm-6.0/bin/llvm-config PYTHONPATH=%b %p/bin/python%type_raw[python] runtests.py || exit 2
<<

Shlibs: <<
 	%p/lib/python%type_raw[python]/site-packages/llvmlite/binding/libllvmlite.dylib 0.0.0 llvmlite (>= 0.24.0-0)
<<

# ToDo: Sphinx-build docs (not included in 0.22...)
DocFiles: LICENSE PKG-INFO README.rst examples
# Info2
<<
