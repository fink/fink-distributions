# -*- coding: ascii; tab-width: 4 -*-
Info2: <<
Package: numba-py%type_pkg[python]
Version: 0.41.0
Revision: 1
Type: python (2.7 3.5 3.6 3.7)

Description: Compiler for Python array/numerical functions
DescDetail: <<
Numba is an Open Source NumPy-aware optimizing compiler for Python sponsored by
Anaconda, Inc. It uses the remarkable LLVM compiler infrastructure to compile
Python syntax to machine code.
It is aware of NumPy arrays as typed memory regions and so can speed-up code
using NumPy arrays. Other, less well-typed code will be translated to Python
C-API calls effectively removing the "interpreter" but not removing the dynamic
indirection.
Numba is also not a tracing JIT. It compiles your code before it gets run
either using run-time type information or type information you provide in
the decorator.
Numba is a mechanism for producing machine code from Python syntax and typed
data structures such as those that exist in NumPy.
<<
DescPackaging: Requires llvmlite 0.26 / LLVM 6.0; 4 test failures (+2 if not setting SHELL=/bin/sh)
Maintainer: Derek Homeier <dhomeie@gwdg.de>
License: BSD
Homepage: https://pypi.org/project/numba/

Source: https://files.pythonhosted.org/packages/source/n/numba/numba-%v.tar.gz
Source-Checksum: SHA256(2334d46f23de4603bcd64e7d9c5a16ea5ff69ee755bf9731a438de1084913ea6)

Depends: <<
	python%type_pkg[python],
	argparse-py%type_pkg[python],
	llvmlite-py%type_pkg[python] (= 0.26.0-1),
	numpy-py%type_pkg[python] (>= 1.10.0),
	( %type_pkg[python] <= 30 ) funcsigs-py%type_pkg[python],
	( %type_pkg[python] <= 30 ) singledispatch-py%type_pkg[python]
<<
BuildDepends: <<
	fink (>= 0.32),
	clang60,
	setuptools-tng-py%type_pkg[python]
<<

# For pretty_annotate module (code highlighting):
Recommends: jinja2-py%type_pkg[python], pygments-py%type_pkg[python]

# Enable llvm clang with OpenMP support
PatchScript: perl -pi.orig -e "s/(omppath = \[)('lib'.* )('include',)/\${1}\${3} 'libomp',/;" setup.py

CompileScript:  CC=clang-6.0 CXX=clang++-6.0 %p/bin/python%type_raw[python] setup.py build_ext --inplace

InstallScript: <<
	perl -pi -e 's|( =) (\d+e\+\d //) (\d+)|$1 round($2 $3)|;' examples/vectorize/*polynomial.py
	CC=clang-6.0 CXX=clang++-6.0 %p/bin/python%type_raw[python] setup.py install --root=%d
	mv %i/bin/numba %i/bin/numba-py%type_pkg[python]
	mv %i/bin/pycc %i/bin/pycc-py%type_pkg[python]
	#/usr/bin/find %i/lib/python%type_raw[python]/site-packages/numba -name '*.pyc' -delete
<<

PostInstScript: <<
	update-alternatives --install %p/bin/numba numba %p/bin/numba-py%type_pkg[python] %type_pkg[python] --slave %p/bin/pycc pycc %p/bin/pycc-py%type_pkg[python]

	echo ""
	echo "The scripts 'numba', 'pycc', installed in %p/bin/ are symlinks automatically" 
	echo "updated by the update-alternatives utility. If you install multiple flavours"
	echo "of the numba package the symlinks will point to the higher flavour by default."

<<

PreRmScript:<<
	if [ $1 != "upgrade" ]; then
		update-alternatives --remove numba %p/bin/numba-py%type_pkg[python]
	fi
<<

InfoTest: <<
	TestDepends: jinja2-py%type_pkg[python], pygments-py%type_pkg[python]
	TestScript: <<
		perl -pi.bak -e 's|(cmd = ..)(python)(.. .-)|${1}%p/bin/python%type_raw[python]${3}|;' numba/tests/test_runtests.py
		SHELL=/bin/sh %p/bin/python%type_raw[python] runtests.py || exit 2
	<<
	TestSuiteSize: huge
<<

# ToDo: Sphinx-build docs (not included in 0.22...)
DocFiles: LICENSE PKG-INFO README.rst examples docs/source
# Info2
<<
