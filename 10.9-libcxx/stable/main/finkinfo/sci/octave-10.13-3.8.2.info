Info2: <<
Package: octave%type_pkg[-blas]%type_pkg[-qtui]
Type: -blas (. -atlas -ref), oct (3.8.2), gcc (9), lapack (3.8.0), -qtui (. -qtmac -qtx11)
Version: 3.8.2
Revision: 105
Distribution: 10.13

Description: MATLAB-like language for computations
Maintainer: None <fink-devel@lists.sourceforge.net>
License: GPL3+
Homepage: http://www.gnu.org/software/octave/

# package metadata
BuildDepends: <<
	autoconf2.6,
	automake1.15,
	fftw3 (>= 3.1.1-7), 
	fontconfig2-dev,
	freetype219 (>= 2.6-1), 
	gcc%type_pkg[gcc]-compiler, 
	gl2ps-dev,
	glpk36-dev,
	graphicsmagick1322-dev, 
	hdf5.9, 
	libcurl4,
	libpcre1,
	libtool2,
	pykg-config,
	qhull6.3.1-dev, 
	readline7,  
	sed,
	suitesparse (>= 4.0.2-2),
	texinfo,
	fink (>= 0.36.4-1),
	fink-buildenv-modules (>= 0.1.3-1),
	fink-package-precedence,
	fltk13-aqua,
	(%type_raw[-blas] = .) 		arpack-ng (>=3.1.3-3) | (%type_raw[-blas] = .) arpack-ng-mpi (>= 3.1.2-4), 
	(%type_raw[-blas] = .) 		qrupdate (>= 1.1.2-7),
	(%type_raw[-blas] = -atlas) atlas (>= 3.10.1-1),
	(%type_raw[-blas] = -atlas) arpack-ng-atlas (>= 3.1.3-3) | (%type_raw[-blas] = -atlas) arpack-ng-mpi-atlas (>= 3.1.3-3), 
	(%type_raw[-blas] = -atlas) qrupdate-atlas (>= 1.1.2-7),
	(%type_raw[-blas] = -ref) 	lapack%type_pkg[lapack], 
	(%type_raw[-blas] = -ref) 	arpack-ng-ref (>= 3.1.3-3) | (%type_raw[-blas] = -ref) arpack-ng-mpi-ref (>= 3.1.3-3),
	(%type_raw[-blas] = -ref) 	qrupdate-ref (>= 1.1.2-7),
	(%type_raw[-qtui] = -qtmac) qt4-base-mac,
	(%type_raw[-qtui] = -qtmac) qt4-base-mac-linguist,
	(%type_raw[-qtui] = -qtmac) qscintilla2.11-qt4-mac,
	(%type_raw[-qtui] = -qtx11) qt4-base-x11,
	(%type_raw[-qtui] = -qtx11) qt4-base-x11-linguist,
	(%type_raw[-qtui] = -qtx11) qscintilla2.11-qt4-x11,
	texlive-base | texlive-nox-base
<<
Depends: %{Ni}%type_pkg[oct]%type_pkg[-blas]%type_pkg[-qtui] (=%v-%r)
BuildConflicts: coot-dev, broken-gcc, lammpi-dev, fort77, 4ti2-dev
Suggests: %{Ni}%type_pkg[oct]-docs
Provides: <<
									%{Ni}-interpreter,
%{Ni}-interpreter-aqua,
(%type_raw[-qtui] = -qtx11)			%{Ni}-interpreter-qtx11,
(%type_raw[-qtui] = -qtmac)			%{Ni}-interpreter-qtmac,
(%type_raw[-blas] = -atlas)			%{Ni}-interpreter-newatlas,
(%type_raw[-blas] = .)				%{Ni}-interpreter-accelerate,
(%type_raw[-blas] = -ref)			%{Ni}-interpreter-ref
<<
Conflicts: <<
	%{Ni}, 
	%{Ni}-qtmac,
	%{Ni}-qtx11, 
	%{Ni}-x11, 
	%{Ni}-x11-qtmac, 
	%{Ni}-x11-qtx11, 
	%{Ni}-atlas,
	%{Ni}-atlas-qtmac,
	%{Ni}-atlas-qtx11,
	%{Ni}-atlas-x11,
	%{Ni}-atlas-x11-qtmac,
	%{Ni}-atlas-x11-qtx11,
	%{Ni}-ref, 
	%{Ni}-ref-qtmac, 
	%{Ni}-ref-qtx11, 
	%{Ni}-ref-x11,
	%{Ni}-ref-x11-qtmac,
	%{Ni}-ref-x11-qtx11,
	%{Ni}3.0.2 ( << 3.0.2-5), 
	%{Ni}3.0.2-atlas ( << 3.0.2-5) 
<<
Replaces: <<
	%{Ni}, 
	%{Ni}-qtmac, 
	%{Ni}-qtx11, 
	%{Ni}-x11, 
	%{Ni}-x11-qtmac, 
	%{Ni}-x11-qtx11, 
	%{Ni}-atlas,
	%{Ni}-atlas-qtmac,
	%{Ni}-atlas-qtx11,
	%{Ni}-atlas-x11,
	%{Ni}-atlas-x11-qtmac,
	%{Ni}-atlas-x11-qtx11,
	%{Ni}-ref, 
	%{Ni}-ref-qtmac, 
	%{Ni}-ref-qtx11, 
	%{Ni}-ref-x11,
	%{Ni}-ref-x11-qtmac,
	%{Ni}-ref-x11-qtx11,
	%{Ni}3.0.2 ( << 3.0.2-5), 
	%{Ni}3.0.2-atlas ( << 3.0.2-5) 
<<

# source
Source: mirror:gnu:%{Ni}/%{Ni}-%v.tar.bz2
Source-MD5: 188bd97e22054f9c62701ee0e6800dc1

# patch
PatchFile: %{ni}-%v-octaverc.patch
PatchFile-MD5: 79b5b16b41901d7818468a2081d29e0b
PatchFile2: %{ni}-3.8-manpages.patch
PatchFile2-MD5: faaecde613b4a87833b0e82a9b8939d4
PatchFile3: %{ni}-%v-clang-libcxx.patch
PatchFile3-MD5: 83a27afacaae69f6b00ec4e677a00927
PatchFile4: %{ni}-%v-xbackslash-texinfo.diff
PatchFile4-MD5: 835421dac7a1217e9bbee8437d9aae63
PatchFile5: %{ni}-%v-dont-use-included-texinfo-texmfcnf.patch
PatchFile5-MD5: a72fed2655902d004b52fd93a8fe3987
PatchFile6: %{ni}-%v-xcode9.patch
PatchFile6-MD5: 4ae29343cec4dde59e19246d25c27633
PatchFile7: %{ni}-%v-fortran2018.patch
PatchFile7-MD5: edd6555b4c4ea826989fa27a85dc3766
PatchScript: <<
	#!/bin/sh -ev

	#Fink-specific structural changes
	sed -e 's/@OCTVERSION@/%v/g' -e 's|@FINKPREFIX@|%p|g' %{PatchFile} | patch -p1 
	# Put in the Fink tree.
	sed -i -e 's|@FINKPREFIX@|%p|g' doc/interpreter/*.1 src/mkoctfile*in.cc

	# fix build under libc++
	patch -p1 < %{PatchFile3}

	#Additional patches from Debian for docs
	patch -p1 < %{PatchFile4}
	patch -p1 < %{PatchFile5}

	# Patch for Xcode 9
	patch -p1 < %{PatchFile6}

	# Patch configure not to link like Puma on Yosemite
	perl -pi -e 's/(10\.\[012\])\*/\1\,.\*/' configure
	
	# add /opt/X11/include to the legal header directories
	perl -pi -e "s|(/usr/X11R4/include)|\1\n/opt/X11/include|" configure

	# create versioned manpages
	cp doc/interpreter/%{Ni}.1 doc/interpreter/%{Ni}-%v.1
	cp doc/interpreter/%{Ni}-config.1 doc/interpreter/%{Ni}-config-%v.1
	cp doc/interpreter/%{Ni}-cli.1 doc/interpreter/%{Ni}-cli-%v.1
	cp doc/interpreter/mkoctfile.1 doc/interpreter/mkoctfile-%v.1

	# fix executable names in versioned manpages
	sed -e 's/@OCTVERSION@/%v/g' %{PatchFile2} | patch -p1 
	
	# instead of using flag-sort, ensure that the right sysdep.h is used
	grep -lr '#include "sysdep.h"' * | xargs perl -pi.orig -e 's,sysdep.h,%b/libinterp/corefcn/sysdep.h,'

	# If we're not using an X11-based FLTK, just because we _have_ X doesn't mean
	# we want to use it.
	perl -pi -e 's/HAVE_X_WINDOWS/HAVE_X_BINDOWS/g' libinterp/dldfcn/__init_fltk__.cc

	# Supress warnings about use of features that are removed from
	# Fortran 2018. See https://savannah.gnu.org/bugs/?54390
	patch -p1 < %{PatchFile7}
<<

GCC: 4.0
SetCC: oct-cc
SetCFLAGS: -O3 -MD
SetCXX: oct-cxx
SetCXXFLAGS: -O3 -MD
SetLIBS: -lgl2ps

ConfigureParams: <<
	--disable-java \
	(%type_raw[-blas] = .)		--with-lapack=-Wl,-framework,Accelerate \
	(%type_raw[-blas] = .)		--with-blas=-Wl,-framework,Accelerate \
 	(%type_raw[-blas] = -atlas)	--with-lapack="-ltatlas" \
 	(%type_raw[-blas] = -atlas)	--with-blas="-ltatlas" \
 	(%type_raw[-blas] = -ref)	--with-lapack="-L%p/lib/lapack/%type_raw[lapack] -lreflapack" \
 	(%type_raw[-blas] = -ref)	--with-blas="-L%p/lib/lapack/%type_raw[lapack] -lrefblas" \
	--with-framework-carbon \
	--with-magick=GraphicsMagick \
	--with-qhull-includedir=%p/include/libqhull \
	--host=%m-apple-darwin \
	--build=%m-apple-darwin \
	--infodir='${prefix}/share/info' \
	--mandir='${prefix}/share/man' \
	--libexecdir='${prefix}/lib' \
	--enable-shared \
	--enable-dl \
	--disable-static \
	( "%type_raw[-qtui]" = "." ) --disable-gui \
	--enable-dependency-tracking
<<
CompileScript: <<
 #!/bin/sh -ev
 # check for fink-octave-scripts compiler wrappers since these can vanish if people
 # use older octave packaging

if [ ! -x %p/bin/oct-cc -o ! -x %p/bin/oct-cxx ] ; then
	 printf "\nERROR===============================================\n\n"
	 printf "One or both of the %p/bin/oct-cc or %p/bin/oct-cxx\n"
	 printf "wrapper-scripts is missing or not executable.\n"
	 printf "Try using the following command to fix the situation:\n"
	 printf "\nfink reinstall fink-octave-scripts\n"
	 printf "\n=====================================================\n\n"
	 exit 2
 fi

 . %p/sbin/fink-buildenv-helper.sh

 # allow configure to find OpenGL libraries in X11
 export LDFLAGS="-L%p/lib -Wl,-dead_strip_dylibs"
 export CPPFLAGS="-I%p/include -I%p/include/freetype2"
 export CPP="clang -E"
 export CXXCPP="clang++ -E"
 export F77=%p/bin/gfortran-fsf-%type_raw[gcc]
 # -ff2c is required when using gfortran and Accelerate.framework
 if [ "%type_raw[-blas]" = "." ]
 	then export FFLAGS='-O3 -ff2c'
 	else export FFLAGS='-O3'
 fi
 FLIBDIR="%p/lib/gcc%type_raw[gcc]/lib"
 export FLIBS="-L${FLIBDIR} -lgfortran"
 export PKG_CONFIG=%p/bin/pykg-config
 qt_type=`echo %type_pkg[-qtui] | cut -dt -f2`
 if [ "%type_raw[-qtui]" != "."  ] ; then	
 	export PKG_CONFIG_PATH="%p/lib/qt4-$qt_type/lib/pkgconfig:$PKG_CONFIG_PATH"
	export PATH="%p/lib/qt4-$qt_type/bin:$PATH"
	# QtCore is inherited
	export LDFLAGS=`pkg-config QtNetwork --libs`" "`pkg-config QtGui --libs`" -L%p/lib/qt4-$qt_type/lib $LDFLAGS"
 fi
 
 autoreconf -fi
 
 ./configure %c "ac_cv_func_mkostemp=no"
 # don't just use top-level Makefile so that we can do a multi-core build.
 pushd libgnu 
 /usr/bin/make -j1
 popd
 for dirs in liboctave libinterp ; do
 	pushd $dirs
 	/usr/bin/make
 	popd
 done
 if [ "%type_raw[-qtui]" != "."  ] ; then
	pushd libgui
	/usr/bin/make
	popd
 fi
 # src/ and scripts/ need to be built with -j1 since docs get built there.
 for dirs in src scripts ; do
 	pushd $dirs
 	/usr/bin/make -j1
 	popd
 done
 /usr/bin/make 
 fink-package-precedence .
<<

InstallScript: <<
 #!/bin/sh -ev
 /usr/bin/make install DESTDIR=%d
 # Install manpages manually
 mkdir -p %i/share/man/man1
 mv doc/interpreter/*.1 %i/share/man/man1
 # Install info pages manually
 mkdir -p %i/share/info
 mv doc/interpreter/*.info* %i/share/info
 # install texi macros
 mkdir -p %i/share/%{Ni}/%v/etc
 cp doc/interpreter/*.texi  %i/share/%{Ni}/%v/etc

 # Install Fink-specific octaverc which points at our oct-versioned
 # package directory, and create the database directory
 cp %{Ni}rc %i/share/%{Ni}/%v/m/startup
 mkdir -p %i/var/%{Ni}/%v/

 # install examples
 mkdir -p %i/share/%{Ni}/%v/doc/examples
 cp -R examples %i/share/%{Ni}/%v/doc/examples

 # remove autogenerated freedesktop.org desktop file
 rm -f %i/share/applications/www.%{Ni}.org-%{Ni}.desktop
 mkdir -p %i/share/%{Ni}/%v/scripts

 # upstream install operation mangles mkoctfile(?), so copy it over
 # from %b manually
 cd %i/bin
 rm mkoctfile mkoctfile-%type_raw[oct]
 /bin/cp %b/src/mkoctfile mkoctfile-%v
 ln -s mkoctfile-%v mkoctfile
  
 # sanitize .la files
 cd %i/lib/%{Ni}/%v/
 perl -pi -e 's/(\-framework)\s(\w+)/-Wl,$1,$2/g' *.la 

 # manually install libcxx-fix.h
 if [ -e %b/liboctave/operators/libcxx-fix.h ] ; then
 	cp %b/liboctave/operators/libcxx-fix.h %i/include/%{Ni}-%v/%{Ni}/
 fi
<<

InfoDocs: %{Ni}.info
DocFiles: AUTHORS BUGS COPYING ChangeLog NEWS README
ConfFiles: %p/share/%{Ni}/site/m/startup/%{Ni}rc

DescDetail: <<
Octave provides a convenient command line interface for solving linear and 
nonlinear problems numerically, and for performing other numerical 
experiments using a language that is mostly compatible with Matlab.
It may also be used as a batch-oriented language.

Octave has extensive tools for solving common numerical linear algebra
problems, finding the roots of nonlinear equations, integrating ordinary
functions, manipulating polynomials, and integrating ordinary differential
and differential-algebraic equations. It is easily extensible and 
customizable via user-defined functions written in Octave's own language, 
or using dynamically loaded modules written in C++, C, Fortran, 
or other languages.
<<

DescUsage: << 
The %{Ni}%type_pkg[-blas]%type_pkg[-qtui] package contains 
unversioned executables, in particular the "octave" executable, along with the
GNU info documentation.  

The "-qtmac" variant builds a GUI which uses Qt on Aqua, while
the "-qtx11" variant builds an X11 Qt gui.

You can select another version of Octave to be the default, i.e. the "octave"
executable and "info octave" point to it, via 
"fink install %{Ni}%type_pkg[-blas]-<version>", 
where the available <version> options are:
	3.0.5
	3.2.4
	3.4.3
	3.6.0
	3.6.1
	3.6.2 
	3.6.3 
	3.6.4
	
By default the plotting output (via gnuplot) is directed to AquaTerm. 
This can be overidden in your startup scripts, e.g.
 
	export GNUTERM=x11
 
in bash
 
or
 
	setenv GNUTERM x11
 
in tcsh.

To build and install packages from Octave Forge manually, or to 
build anything else against Octave, you will need to install the 
%{Ni}%type_pkg[-blas]-dev package.  
Fink's *-oct%type_pkg[oct] packages do this automatically, as well as
applying patches, so unless you want to test a pre-release version,
you are probably better off installing OF packages via Fink.
 
Note:  Fink's Octave implementation modifies one of the startup files,
%p/share/%{Ni}/%v/m/startup/octaverc,
to initialize octave sessions to know about Fink's octave-versioned 
install location for octave-forge packages.  If you use the '--norc' or '-f'
flags in your Octave script, these packages won't be visible.  You'll need to
run the following command in your script:
 
 	pkg global_list %p/var/octave/%v/octave_packages
<<


DescPort: <<
Thanks to Per Persson for most (if not all) of the work on the macos X port.

The Accelerate variant is built with -ff2c in the FFLAGS, 
because this appears to be necessary when using the Accelerate framework.

Revision 7 -- update X11 detection
<<

DescPackaging:  <<
Revision 101: disable Java for the time being.

Patchfile6 from J. Howarth covers build failure on High Sierra from  

"error: call to 'pow' is ambiguous"

in liboctave/numeric/lo-specfun.cc and libinterp/corefcn/graphics.cc by using 
std::pow() instead of pow().

set ac_cv_func_mkostemp=no explicitly to allow building on OS X Sierra and later.

Revision 9 -- Apply relevant patches from https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=790626
to try to solve

./octave.cps:56: Argument of \\ has an extra }.

Requires rerunning the autotools system, so added BDeps on autoconf2.6 and automake1.15.

Revision 7 -- Switch to gcc5, which changes the virtual packages.
Switch to glpk36.  Thanks to dmacks for the update.
Switch to graphicsmagick1322.
Update X11 linkage.

Revision 6 -- Test suite crashes when built against fltk13-aqua and run as fink-bld.
Fix some sketchy flag ordering to ensure that Fink's freetype2 headers get brought
in before those from X11.  Also put a versioned dependency on freetype2.
Switch to hdf5.9.

Revision 5 --  image-oct382 needs the cxx fix for _all_ OSX versions, so we
remove the conditional patching and add a virtual package to note that this has been
applied.

Use pykg-config instead of pkgconfig to lighten the build tree.

Remove a desktop file that gets generated only for users with GNOME/KDE 
installed.

SetLIBS: -lgl2ps because of missing symbols from that library on 10.7/Xcode
4.2.6	

Non-X11 FLTK stuff still uses X headers.
	
Set the GNUTERM environment variable to AquaTerm because autodetection of
DISPLAY seems to cause options to be fed to our gnuplot that it doesn't 
understand.  AquaTerm seems to be a sensible default.

Create manpages for the versioned executables.

We have split the package up into versioned runtime+library, development, and
unversioned runtime packages,  to make upgrades easier for us and for users.  Prior
packaging had separate libraries, but this led to deadlocks when attempting to swap
variants.  Also, it's unlikely that anybody is going to want just the libraries, 
anyway.
	
The -atlas variant depends on -atlas variants (only) of qrupdate and arpack-ng.  
The Accelerate variant depends on Accelerate variants (only) of these, and 
the reference LAPACK variant depends on variants of qrupdate and arpack-ng
which use the reference LAPACK (i.e. lapack350).
 
Patch oct-conf.h and mkoctfile to use octave-specific compiler executables
which are part of the fink-octave-scripts package to avoid issues which 
would propagate as dependencies, e.g. encoding 'flag-sort' or a 
ccache-default compiler. This also makes sure that anything that builds 
against Octave has the proper information when installed manually as well 
as via Fink.

We use the platform-independent oct-cc and oct-cxx wrappers from 
fink-octave-scripts to ensure that user builds:
1) using the Fink compiler wrapper for the OS X version 
2) using a stably named compiler, in case of OS X updates.

We use Provides in a new namespace and new projections to avoid
unwieldy | lists in the octave-forge packages.

Since octave-forge packages for octave < 3.6.0 link to whatever gcc4N 
Octave is using, and also since some other packages actually use gcc-4.N, 
add "liboctave-gcc4N-dev" and "liboctave-gcc4N" Provides, to make sure that
things stay in sync; the latter isn't used yet.

Former Maintainer: Alexander Hansen <alexkhansen@users.sourceforge.net>
<<

# SplitOff

# -dev
SplitOff: <<
	Package: octave%type_pkg[oct]%type_pkg[-blas]%type_pkg[-qtui]-dev
	Depends: <<
		%{Ni}%type_pkg[oct]%type_pkg[-blas]%type_pkg[-qtui] (=%v-%r),
		fink-%{Ni}-scripts (>= 0.3.0-1),
		fink (>=0.32),
		gcc%type_pkg[gcc]-compiler 
	<<
	Conflicts: << 
		%{Ni}305-dev, 
		%{Ni}305-atlas-dev,
		%{Ni}305-ref-dev,  
		%{Ni}324-dev, 
		%{Ni}324-atlas-dev,
		%{Ni}324-ref-dev,
		%{Ni}324-x11-dev,
		%{Ni}324-atlas-x11-dev,
		%{Ni}324-ref-x11-dev,
		%{Ni}343-dev, 
		%{Ni}343-atlas-dev,
		%{Ni}343-ref-dev,
		%{Ni}343-x11-dev,
		%{Ni}343-atlas-x11-dev,
		%{Ni}343-ref-x11-dev,
		%{Ni}360-dev, 
		%{Ni}360-atlas-dev,
		%{Ni}360-ref-dev,
		%{Ni}360-x11-dev,
		%{Ni}360-atlas-x11-dev,
		%{Ni}360-ref-x11-dev,
		%{Ni}361-dev, 
		%{Ni}361-atlas-dev,
		%{Ni}361-ref-dev,
		%{Ni}361-x11-dev,
		%{Ni}361-atlas-x11-dev,
		%{Ni}361-ref-x11-dev,		
		%{Ni}362-dev,
		%{Ni}362-x11-dev,
		%{Ni}362-atlas-dev,
		%{Ni}362-atlas-x11-dev,
		%{Ni}362-ref-dev,
		%{Ni}362-ref-x11-dev,
		%{Ni}363-dev,
		%{Ni}363-x11-dev,
		%{Ni}363-atlas-dev,
		%{Ni}363-atlas-x11-dev,
		%{Ni}363-ref-dev,
		%{Ni}363-ref-x11-dev,
		%{Ni}364-dev,
		%{Ni}364-x11-dev,
		%{Ni}364-atlas-dev,
		%{Ni}364-atlas-x11-dev,
		%{Ni}382-atlas-dev,
	   	%{Ni}382-atlas-x11-dev,
   		%{Ni}382-atlas-x11-qtmac-dev,
   		%{Ni}382-atlas-x11-qtx11-dev,
   		%{Ni}382-atlas-qtmac-dev,
   		%{Ni}382-atlas-qtx11-dev,
   		%{Ni}382-atlas-x11-dev,
   		%{Ni}382-dev,
   		%{Ni}382-x11-dev,
   		%{Ni}382-x11-qtmac-dev,
   		%{Ni}382-x11-qtx11-dev,
   		%{Ni}382-x11-x11-dev,
   		%{Ni}382-mac-dev,
   		%{Ni}382-qtmac-dev,
   		%{Ni}382-qtx11-dev,
   		%{Ni}382-ref-dev,
   		%{Ni}382-ref-x11-dev,
   		%{Ni}382-ref-x11-qtmac-dev,
   		%{Ni}382-ref-x11-qtx11-dev,
	   	%{Ni}382-ref-mac-dev,
   		%{Ni}382-ref-qtmac-dev,
   		%{Ni}382-ref-qtx11-dev,
   		%{Ni}382-x11-dev,
		%{Ni} (<< 3.0.5-5), 
		%{Ni}-atlas (<< 3.0.5-5), 
		%{Ni}3.0.2 ( << 3.0.2-5), 
		%{Ni}3.0.2-atlas ( << 3.0.2-5)
	<<
	Replaces: <<
		%{Ni}305-dev, 
		%{Ni}305-atlas-dev,
		%{Ni}305-ref-dev,  
		%{Ni}324-dev, 
		%{Ni}324-atlas-dev,
		%{Ni}324-ref-dev,
		%{Ni}324-x11-dev,
		%{Ni}324-atlas-x11-dev,
		%{Ni}324-ref-x11-dev,
		%{Ni}343-dev, 
		%{Ni}343-atlas-dev,
		%{Ni}343-ref-dev,
		%{Ni}343-x11-dev,
		%{Ni}343-atlas-x11-dev,
		%{Ni}343-ref-x11-dev,
		%{Ni}360-dev, 
		%{Ni}360-atlas-dev,
		%{Ni}360-ref-dev,
		%{Ni}360-x11-dev,
		%{Ni}360-atlas-x11-dev,
		%{Ni}360-ref-x11-dev,
		%{Ni}361-dev, 
		%{Ni}361-atlas-dev,
		%{Ni}361-ref-dev,
		%{Ni}361-x11-dev,
		%{Ni}361-atlas-x11-dev,
		%{Ni}361-ref-x11-dev,		
		%{Ni}362-dev,
		%{Ni}362-x11-dev,
		%{Ni}362-atlas-dev,
		%{Ni}362-atlas-x11-dev,
		%{Ni}362-ref-dev,
		%{Ni}362-ref-x11-dev,
		%{Ni}363-dev,
		%{Ni}363-x11-dev,
		%{Ni}363-atlas-dev,
		%{Ni}363-atlas-x11-dev,
		%{Ni}363-ref-dev,
		%{Ni}363-ref-x11-dev,
		%{Ni}364-dev,
		%{Ni}364-x11-dev,
		%{Ni}364-atlas-dev,
		%{Ni}364-atlas-x11-dev,
		%{Ni}364-ref-dev,
		%{Ni}364-ref-x11-dev,
		%{Ni}382-atlas-dev,
	   	%{Ni}382-atlas-x11-dev,
   		%{Ni}382-atlas-x11-qtmac-dev,
   		%{Ni}382-atlas-x11-qtx11-dev,
   		%{Ni}382-atlas-qtmac-dev,
   		%{Ni}382-atlas-qtx11-dev,
   		%{Ni}382-atlas-x11-dev,
   		%{Ni}382-dev,
   		%{Ni}382-x11-dev,
   		%{Ni}382-x11-qtmac-dev,
   		%{Ni}382-x11-qtx11-dev,
   		%{Ni}382-x11-x11-dev,
   		%{Ni}382-mac-dev,
   		%{Ni}382-qtmac-dev,
   		%{Ni}382-qtx11-dev,
   		%{Ni}382-ref-dev,
   		%{Ni}382-ref-x11-dev,
   		%{Ni}382-ref-x11-qtmac-dev,
   		%{Ni}382-ref-x11-qtx11-dev,
	   	%{Ni}382-ref-mac-dev,
   		%{Ni}382-ref-qtmac-dev,
   		%{Ni}382-ref-qtx11-dev,
   		%{Ni}382-x11-dev,
		%{Ni} (<< 3.0.5-5), 
		%{Ni}-atlas (<< 3.0.5-5), 
		%{Ni}3.0.2 ( << 3.0.2-5), 
		%{Ni}3.0.2-atlas ( << 3.0.2-5)
	<<
	Provides: <<
		lib%{Ni}%type_pkg[oct]-gcc%type_pkg[gcc]-dev,
		lib%{Ni}%type_pkg[oct]-cxxfix-dev,
		lib%{Ni}%type_pkg[oct]-dev,
		(%type_raw[-blas] = -atlas) 		lib%{Ni}%type_pkg[oct]-newatlas-dev,
		(%type_raw[-blas] = .) 				lib%{Ni}%type_pkg[oct]-accelerate-dev,
		(%type_raw[-blas] = -ref) 			lib%{Ni}%type_pkg[oct]-ref-dev,
		lib%{Ni}%type_pkg[oct]-aqua-dev,
		(%type_raw[-qtui] = -qtx11)			lib%{Ni}%type_pkg[oct]-qtx11-dev,
		(%type_raw[-qtui] = -qtmac)			lib%{Ni}%type_pkg[oct]-qtmac-dev
	<<
	
	BuildDependsOnly: true
	
	Files: <<
		include/%{Ni}-%v
		lib/%{Ni}/%v/*.la 
		lib/%{Ni}/%v/lib{%{Ni},octinterp}.dylib
		(%type_raw[-qtui] != .) lib/%{Ni}/%v/liboctgui.dylib
		bin/mkoctfile*
		bin/%{Ni}-config*
		share/man/man1/mkoctfile*.1
		share/man/man1/%{Ni}-config*.1
	<<
	DescUsage: <<
	This package contains files needed to build against Octave, including
	headers and the mkoctfile executable.  It also contains symlinks to Fink's
	compiler wrappers, which are set up at install time to be appropriate to
	the current machine setup.
	To use mkoctfile to build dynamically loadable modules, you will need 	
	to install the hdf5.8 and fftw3 packages.
 	%n cannot Depend on them since they are BuildDependsOnly.
	<<
	DescPackaging:  <<
	We make up an extra mkoctfile which uses a Fink gcc for packages that need
	stuff which isn't included in Xcode.
	<<
	DocFiles: AUTHORS BUGS COPYING ChangeLog NEWS README
<<

# versioned executables and shlibs
SplitOff2: <<
	Package: octave%type_pkg[oct]%type_pkg[-blas]%type_pkg[-qtui]
	Conflicts: << 
		%{Ni}%type_pkg[oct],
		%{Ni}%type_pkg[oct]-qtmac,
		%{Ni}%type_pkg[oct]-qtx11,
		%{Ni}%type_pkg[oct]-x11,
		%{Ni}%type_pkg[oct]-x11-qtmac,
		%{Ni}%type_pkg[oct]-x11-qtx11,
		%{Ni}%type_pkg[oct]-atlas,
		%{Ni}%type_pkg[oct]-atlas-qtmac,
		%{Ni}%type_pkg[oct]-atlas-qtx11,
		%{Ni}%type_pkg[oct]-atlas-x11,
		%{Ni}%type_pkg[oct]-atlas-x11-qtmac,
		%{Ni}%type_pkg[oct]-atlas-x11-qtx11,
		%{Ni}%type_pkg[oct]-ref,
		%{Ni}%type_pkg[oct]-ref-qtmac,
		%{Ni}%type_pkg[oct]-ref-qtx11,
		%{Ni}%type_pkg[oct]-ref-x11,
		%{Ni}%type_pkg[oct]-ref-x11-qtmac,
		%{Ni}%type_pkg[oct]-ref-x11-qtx11,
		%{Ni} (<< 3.0.5-5), 
		%{Ni}-atlas (<< 3.0.5-5), 
		%{Ni}3.0.2 ( << 3.0.2-5),
		%{Ni}3.0.2-atlas ( << 3.0.2-5)
	<<
	Replaces: <<
		%{Ni}%type_pkg[oct],
		%{Ni}%type_pkg[oct]-qtmac,
		%{Ni}%type_pkg[oct]-qtx11,
		%{Ni}%type_pkg[oct]-x11,
		%{Ni}%type_pkg[oct]-x11-qtmac,
		%{Ni}%type_pkg[oct]-x11-qtx11,
		%{Ni}%type_pkg[oct]-atlas,
		%{Ni}%type_pkg[oct]-atlas-qtmac,
		%{Ni}%type_pkg[oct]-atlas-qtx11,
		%{Ni}%type_pkg[oct]-atlas-x11,
		%{Ni}%type_pkg[oct]-atlas-x11-qtmac,
		%{Ni}%type_pkg[oct]-atlas-x11-qtx11,
		%{Ni}%type_pkg[oct]-ref,
		%{Ni}%type_pkg[oct]-ref-qtmac,
		%{Ni}%type_pkg[oct]-ref-qtx11,
		%{Ni}%type_pkg[oct]-ref-x11,
		%{Ni}%type_pkg[oct]-ref-x11-qtmac,
		%{Ni}%type_pkg[oct]-ref-x11-qtx11,
		%{Ni}%type_pkg[oct]-ref-x11,
		%{Ni} (<< 3.0.5-5), 
		%{Ni}-atlas (<< 3.0.5-5),
		%{Ni}3.0.2 ( << 3.0.2-5), 
		%{Ni}3.0.2-atlas ( << 3.0.2-5)
	<<
	Depends: << 
		(%type_raw[-blas] = .)		arpack-ng-shlibs (>= 3.1.3-3) | (%type_raw[-blas] = .) arpack-ng-mpi-shlibs (>= 3.1.2-4),
		(%type_raw[-blas] = -ref)	arpack-ng-ref-shlibs (>= 3.1.3-3) | (%type_raw[-blas] = -ref) arpack-ng-mpi-ref-shlibs (>= 3.1.3-3),
		(%type_raw[-blas] = -atlas)	arpack-ng-atlas-shlibs (>= 3.1.3-3) | (%type_raw[-blas] = -atlas) arpack-ng-mpi-atlas-shlibs (>= 3.1.3-3),
		(%type_raw[-blas] = -atlas)	atlas-shlibs (>= 3.10.1-1),
		fftw3-shlibs (>= 3.1.1-7), 
		fltk13-aqua-shlibs,
		fontconfig2-shlibs,
		freetype219-shlibs (>= 2.5.5-1),
		gcc%type_pkg[gcc]-shlibs,
		gl2ps-shlibs,
		glpk36-shlibs,
		gnuplot-bin,
		graphicsmagick1322-shlibs,
		hdf5.9-shlibs,
		(%type_raw[-blas] = -ref) 	lapack%type_pkg[lapack]-shlibs,
		libcurl4-shlibs,
		libpcre1-shlibs, 
		ncurses, 
		qhull6.3.1-shlibs,
	 	(%type_raw[-qtui] = -qtmac) qscintilla2.11-qt4-mac-shlibs, 
	 	(%type_raw[-qtui] = -qtx11) qscintilla2.11-qt4-x11-shlibs, 
	 	(%type_raw[-qtui] = -qtmac) qt4-base-mac-qtcore-shlibs, 
	 	(%type_raw[-qtui] = -qtx11) qt4-base-x11-qtcore-shlibs, 
	 	(%type_raw[-qtui] = -qtmac) qt4-base-mac-qtgui-shlibs, 
	 	(%type_raw[-qtui] = -qtx11) qt4-base-x11-qtgui-shlibs, 	 	
	 	(%type_raw[-qtui] = -qtmac) qt4-base-mac-qtnetwork-shlibs,
		(%type_raw[-qtui] = -qtx11) qt4-base-x11-qtnetwork-shlibs,
		(%type_raw[-blas] = -atlas)	atlas-shlibs (>= 3.10.1-1),
		(%type_raw[-blas] = -atlas) qrupdate-atlas-shlibs (>= 1.1.2-7), 
		(%type_raw[-blas] = .) 		qrupdate-shlibs (>= 1.1.2-7),
		(%type_raw[-blas] = -ref) 	qrupdate-ref-shlibs (>= 1.1.2-7),
		readline7-shlibs, 
		suitesparse-shlibs (>= 4.0.2-2)
	 <<
	 RuntimeDepends: <<
		epstool,
		ghostscript | ghostscript-nox,
		fig2dev (>= 3.2.6-2) | transfig-graphicx | transfig-epsfig,
		pstoedit-bin
	<<
	Provides: <<
		lib%{Ni}%type_pkg[oct]-gcc%type_pkg[gcc],
		lib%{Ni}%type_pkg[oct],
		(%type_raw[-blas] = -atlas) 		lib%{Ni}%type_pkg[oct]-newatlas,
		(%type_raw[-blas] = .) 				lib%{Ni}%type_pkg[oct]-accelerate,
		(%type_raw[-blas] = -ref) 			lib%{Ni}%type_pkg[oct]-ref,
		lib%{Ni}%type_pkg[oct]-aqua,
		(%type_raw[-qtui] = -qtx11)			lib%{Ni}%type_pkg[oct]-qtx11,
		(%type_raw[-qtui] = -qtmac)			lib%{Ni}%type_pkg[oct]-qtmac,
		%{Ni}%type_pkg[oct]-interpreter,
		%{Ni}%type_pkg[oct]-interpreter-aqua,
		(%type_raw[-qtui] = -qtx11)			%{Ni}%type_pkg[oct]-interpreter-qtx11,
		(%type_raw[-qtui] = -qtmac)			%{Ni}%type_pkg[oct]-interpreter-qtmac,
		(%type_raw[-blas] = -atlas) 		%{Ni}%type_pkg[oct]-interpreter-newatlas,
		(%type_raw[-blas] = .)				%{Ni}%type_pkg[oct]-interpreter-accelerate,
		(%type_raw[-blas] = -ref) 			%{Ni}%type_pkg[oct]-interpreter-ref,
											%{Ni}%type_pkg[oct]-cxxfix-interpreter
	<<
	
	Files: <<
		share/%{Ni}/%v
		lib/%{Ni}/%v
		bin/%{Ni}-%v
		bin/%{Ni}-cli-%v
		var/%{Ni}/%v
		share/man/man1/%{Ni}-%v.1
	<<
	Shlibs: <<
		%p/lib/%{Ni}/%v/lib%{Ni}.2.dylib 3.0.0 %n (>=3.8.2-1)
		%p/lib/%{Ni}/%v/liboctinterp.2.dylib 3.0.0 %n (>=3.8.2-1)
		(%type_raw[-qtui] !=.) %p/lib/%{Ni}/%v/liboctgui.0.dylib 1.0.0 %n (>=3.8.2-1)
	<<
	DescUsage: <<
	The %{Ni}%type_pkg[oct]%type_pkg[-blas]%type_pkg[-qtui] 
	package contains versioned executables, in particular the 
	"%{Ni}-%type_raw[oct]" executable, as well as all of the core 
	functionality of the Octave interpreter, and the shared libraries which 
	are used by the Octave interpreter as well as for packages that build 
	against Octave, such as the various Octave Forge packages.
	Any package that either links to the libraries in 
	%{Ni}%type_pkg[-blas]-shlibs or installs an extension
	should Depend on 
	%{Ni}%type_pkg[oct]%type_pkg[-blas]%type_pkg[-qtui]-shlibs 
	and BuildDepend on %{Ni}%type_pkg[oct]%type_pkg[-blas]-dev.  
	In addition, it will need to BuildDepend on hdf5.8 and fftw3.  

	The "-qtmac" variant builds a GUI which uses Qt on Aqua, 
    while the "-qtx11" variant builds an X11 Qt GUI.   
	
	Note that the GNU info file, which provides the core documentation, 
	is installed as part of the 
	"%{Ni}%type_pkg[oct]%type_pkg[-blas]%type_pkg[-qtui]"
	package.
	
	By default the plotting output (via gnuplot) is directed to AquaTerm. 
	This can be overidden in your startup scripts, e.g.
 
 		export GNUTERM=x11
 
	in bash
 
	or
 
		setenv GNUTERM x11
 
	in tcsh.
	 
	Note:  Fink's Octave implementation modifies one of the startup files,
	%p/share/%{Ni}/%v/m/startup/octaverc,
	to initialize octave sessions to know about Fink's octave-versioned 
	install location for octave-forge packages.  If you use the '--norc' 
	or '-f' flags in your Octave script, these packages won't be visible.  
	You'll need to run the following command in your script:
 
		pkg global_list %p/var/octave/%v/octave_packages
	<<
	DocFiles: AUTHORS BUGS COPYING ChangeLog NEWS README doc/interpreter doc/refcard doc/liboctave
	RuntimeVars: <<
 		GNUTERM: aqua
	<<
<<
<<
