Info2: <<
Package: octave%type_pkg[-blas]%type_pkg[-x11]
Type: -blas (. -atlas -ref), oct (3.6.4), gcc (9), -x11 (boolean), lapack (3.8.0)
Version: 3.6.4
Revision: 22
Distribution: ( %type_raw[-x11] = -x11 ) 10.9, ( %type_raw[-x11] = -x11 ) 10.10, 10.11, 10.12

Maintainer: Alexander Hansen <alexkhansen@users.sourceforge.net>
License: GPL3+
Homepage: http://www.gnu.org/software/octave/

BuildDepends: <<
	fftw3 (>= 3.1.1-7), 
	fontconfig2-dev,
	freetype219 (>= 2.6-1), 
	gcc%type_pkg[gcc]-compiler, 
	glpk36-dev,
	graphicsmagick1322-dev, 
	hdf5.9, 
	libcurl4,
	libpcre1,
	pykg-config,
	qhull6.3.1-dev, 
	readline7,
	sed,
	suitesparse (>= 4.0.2-2),
	texinfo (>= 4.13),
	fink (>= 0.32.0-1),
	fink-buildenv-modules (>= 0.1.3-1),
	fink-package-precedence,
	(%type_raw[-x11] != -x11) 		fltk13-aqua,
	(%type_raw[-x11] = -x11) 		fltk-x11,
	(%type_raw[-x11] = -x11) 		x11-dev,
	(%type_raw[-blas] = .) 			arpack-ng (>=3.1.3-3) | (%type_raw[-blas] = .) arpack-ng-mpi (>= 3.1.2-4), 
	(%type_raw[-blas] = .) 			qrupdate (>= 1.1.2-7),
	(%type_raw[-blas] = -atlas) 	atlas (>= 3.10.1-1),
	(%type_raw[-blas] = -atlas) 	arpack-ng-atlas (>= 3.1.3-3) | (%type_raw[-blas] = -atlas) arpack-ng-mpi-atlas (>= 3.1.3-3), 
	(%type_raw[-blas] = -atlas) 	qrupdate-atlas (>= 1.1.2-7),
	(%type_raw[-blas] = -ref) 		lapack%type_pkg[lapack], 
	(%type_raw[-blas] = -ref) 		arpack-ng-ref (>= 3.1.3-3) | (%type_raw[-blas] = -ref) arpack-ng-mpi-ref (>= 3.1.3-3),
	(%type_raw[-blas] = -ref) 		qrupdate-ref (>= 1.1.2-7)
<<
Depends: %{Ni}%type_pkg[oct]%type_pkg[-blas]%type_pkg[-x11] (=%v-%r)
BuildConflicts: coot-dev, broken-gcc, lammpi-dev, fort77, 4ti2-dev
Suggests: %{Ni}%type_pkg[oct]-docs
Provides: <<
							octave-interpreter,
(%type_raw[-x11] = -x11) 	octave-interpreter-x11,
(%type_raw[-x11] != -x11) 	octave-interpreter-aqua,
(%type_raw[-blas] = -atlas) octave-interpreter-newatlas,
(%type_raw[-blas] = .) 		octave-interpreter-accelerate,
(%type_raw[-blas] = -ref) 	octave-interpreter-ref
<<
Conflicts: <<
	%{Ni}, 
	%{Ni}-qtmac,
	%{Ni}-qtx11, 
	%{Ni}-x11, 
	%{Ni}-x11-qtmac, 
	%{Ni}-x11-qtx11, 
	%{Ni}-atlas,
	%{Ni}-atlas-qtmac,
	%{Ni}-atlas-qtx11,
	%{Ni}-atlas-x11,
	%{Ni}-atlas-x11-qtmac,
	%{Ni}-atlas-x11-qtx11,
	%{Ni}-ref, 
	%{Ni}-ref-qtmac, 
	%{Ni}-ref-qtx11, 
	%{Ni}-ref-x11,
	%{Ni}-ref-x11-qtmac,
	%{Ni}-ref-x11-qtx11,
	%{Ni}3.0.2 ( << 3.0.2-5), 
	%{Ni}3.0.2-atlas ( << 3.0.2-5) 
<<
Replaces: <<
	%{Ni}, 
	%{Ni}-qtmac, 
	%{Ni}-qtx11, 
	%{Ni}-x11, 
	%{Ni}-x11-qtmac, 
	%{Ni}-x11-qtx11, 
	%{Ni}-atlas,
	%{Ni}-atlas-qtmac,
	%{Ni}-atlas-qtx11,
	%{Ni}-atlas-x11,
	%{Ni}-atlas-x11-qtmac,
	%{Ni}-atlas-x11-qtx11,
	%{Ni}-ref, 
	%{Ni}-ref-qtmac, 
	%{Ni}-ref-qtx11, 
	%{Ni}-ref-x11,
	%{Ni}-ref-x11-qtmac,
	%{Ni}-ref-x11-qtx11,
	%{Ni}3.0.2 ( << 3.0.2-5), 
	%{Ni}3.0.2-atlas ( << 3.0.2-5) 
<<

Source: mirror:gnu:%{Ni}/%{Ni}-%v.tar.gz
Source-MD5: d51e249103b9020ecc305de509c61e4e
Source2: http://anonscm.debian.org/cgit/pkg-octave/octave.git/plain/debian/patches/glpk-4.49.diff?id=9db698bb09ad1a49aea52e62c1bebb7beaad1be6
Source2Rename: octave-debian-glpk-4.49.diff
Source2-MD5: f0c80a604ef69137b8a19c53fc509573

PatchFile2: %{ni}-3.6.4-manpages.patch
PatchFile2-MD5: 305182bbac82d718089e21cc8990beec
PatchFile3: %{ni}-octaverc.patch
PatchFile3-MD5: 1b3342804a8a4c25b429c557f68eb683
PatchFile4: %{ni}-10.7.patch
PatchFile4-MD5: 8304ed39a2c8783f01c81133971166e8
PatchFile5: %{ni}-10.7-x11.patch
PatchFile5-MD5: 6dd5be3b8d199fb76a72997ea50d05d4
PatchFile6: %{ni}-%v-clang-libcxx.patch
PatchFile6-MD5: 8cd251ce7012410a1083af6ae7f69496
PatchFile7: %{ni}-%v-erfc.patch
PatchFile7-MD5: 2c4b83a9ba2ee5a4bc92d7e40caf70a4
PatchFile8: %{ni}-%v-fortran2018.patch
PatchFile8-MD5: 9aaf7e4c6d68a3615942b0a0bb360c7b

PatchScript: <<
	#!/bin/sh -ev

	# add /opt/X11/include to the legal header directories
	perl -pi -e "s|(/usr/X11R4/include)|\1\n/opt/X11/include|" configure

	# upgrade to current glpk interfaces (thanks debian!) but
	# don't want to bother redoing configure.ac->configure
	sed '/--- a\/configure/q' ../octave-debian-glpk-4.49.diff | patch -p1
	perl -pi -e 's/_glp_lpx_simplex/glp_simplex/g' configure

	# create versioned manpages
	cp doc/interpreter/%{Ni}.1 doc/interpreter/%{Ni}-%v.1
	cp doc/interpreter/%{Ni}-config.1 doc/interpreter/%{Ni}-config-%v.1
	cp doc/interpreter/mkoctfile.1 doc/interpreter/mkoctfile-%v.1
	# fix executable names in versioned manpages
	sed -e 's/@OCTVERSION@/%v/g' %{PatchFile2} | patch -p1 

	#Fink-specific structural changes
	sed -e 's/@OCTVERSION@/%v/g' -e 's|@FINKPREFIX@|%p|g' %{PatchFile3} | patch -p1 
	# Put in the Fink tree.
	sed -i.orig -e 's|@FINKPREFIX@|%p|g' doc/interpreter/*.1 src/mkoctfile*in
	
	# Make sure GraphicsMagick gets activated properly.
	perl -pi.orig -e \
		's|(#include \<)(Magick\+\+\.h\>)|\1GraphicsMagick/\2\nusing namespace Magick;|' \
			src/DLD-FUNCTIONS/__magick_read__.cc

	# fix lack of CGDisplayBitsPerPixel on 10.7+
	osversion=`uname -r | cut -d. -f1`
	if [ $osversion -ge 10 ]
	then
		if [ "%type_pkg[-x11]" != "-x11" ]
		then
			patch -p1 < %{PatchFile4}
			perl -pi.orig -e 's/CGDisplayBitsPerPixel/displayBitsPerPixel/' src/display.cc
		else
			# change windows to Windows to match PatchFile5
			perl -pi.orig -e 's/windows/Windows/g' src/display.cc 
			patch -l -p1 < %{PatchFile5}
		fi
	fi

	# more patching by fangism
	# silence some warnings
	sed -i.orig -e '/ibasea/s|\*ibasea, ||' \
		-e '/ibasea/s| ibasea =.*||' \
		liboctave/oct-sort.cc
	# should this accompany -D_THREAD_SAFE? in CFLAGS,CXXFLAGS
	# need size_t from <cstddef>
	sed -i.orig -e '/#define octave_oct_alloc_h/a\
using std::size_t;' liboctave/oct-alloc.h
	# needed by clang++, safe for g++: using-declaration as typedef
	# missing qualifier to dependent-name member-function
	sed -i.orig -e '/truncate_int/s|\(return\) \(truncate_int\)|\1 octave_int_base<T>::\2|' \
		liboctave/oct-inttypes.h
	sed -i.orig -e 's|template static|template|g' liboctave/eigs-base.cc

	# Until somebody figures out why the "view" and "tileName" options cause malloc()
	# errors and segfaults in __magick_finfo__(), disable them:
	perl -pi -e 's|(.*View.*)|//\1|g; s|(.*TileName.*)|//\1|g' src/DLD-FUNCTIONS/__magick_read__.cc
	# put in placeholder values so as not to break people's scripts
	perl -pi -e "s/(.*__magick_finfo__.*)/\1\n\tinfo.TileName = 'Not supported in this build';\n\tinfo.View = 'Not supported in this build';\n/" scripts/image/imfinfo.m


	if [ $osversion -ge 13 ] ; then

		# fix libc++ issue from clang 6	
		patch -p1 < %{PatchFile6}

		# Fix struct-vs-class confusion. See:
		#   https://lists.gnu.org/archive/html/octave-maintainers/2012-03/msg00040.html
		#   https://hg.savannah.gnu.org/hgweb/octave/rev/8cdfd3cabea3
		perl -pi -e 's/struct opts/class opts/' liboctave/regexp.h

		# Fix abiguous calls to pow(). See:
		#   https://hg.savannah.gnu.org/hgweb/octave/revb488e958d024
		# cherry-picked parts that fix compile-time errors.
		sed -i.orig -e '/Log plots with all/,+2s/pow/std::pow/' src/graphics.cc

		# 10.9-specific fix for non-bool return value in bool-declared functions.
		#The return values don't seem to be used, anyway.
		perl -pi -e "s/return os/return false/" src/ls-mat4.cc src/ov-cell.cc src/ov-class.cc src/ov-fcn-handle.cc src/ov-struct.cc
	fi

	# instead of using flag-sort, ensure that the right sysdep.h is used
	grep -lr '#include "sysdep.h"' * | xargs perl -pi.orig -e 's,sysdep.h,%b/src/sysdep.h,'

	# Patch configure not to link like Puma on Yosemite
	perl -pi -e 's/(10\.\[012\])\*/\1\,.\*/' configure

	# XCode's math.h now provides erfc() and autoconf detects it,
	# which reveals lo-specfun.cc's replacement was not protected
	# by the autoconf token even though lo-specfun.h's was
	patch -p1 < %{PatchFile7}

	# Supress warnings about use of features that are removed from
	# Fortran 2018. See https://savannah.gnu.org/bugs/?54390
	# Don't bother regenerating the autotools from templates, just
	# hack expected result into the pre-existing generated files
	patch -p1 < %{PatchFile8}
<<

GCC: 4.0
SetCC: oct-cc
SetCFLAGS: -O3 -MD
SetCXX: oct-cxx
SetCXXFLAGS: -O3 -MD
SetLDFLAGS: -Wl,-dead_strip_dylibs
UseMaxBuildJobs: false

ConfigureParams: <<
	(%type_raw[-blas] = .)		--with-lapack=-Wl,-framework,Accelerate \
	(%type_raw[-blas] = .)		--with-blas=-Wl,-framework,Accelerate \
 	(%type_raw[-blas] = -atlas)	--with-lapack="-ltatlas" \
 	(%type_raw[-blas] = -atlas)	--with-blas="-ltatlas" \
 	(%type_raw[-blas] = -ref)	--with-lapack="-L%p/lib/lapack/%type_raw[lapack] -lreflapack" \
 	(%type_raw[-blas] = -ref)	--with-blas="-L%p/lib/lapack/%type_raw[lapack] -lrefblas" \
	(%type_raw[-x11] != -x11)	--with-framework-carbon \
	(%type_raw[-x11] = -x11)	--without-framework-carbon \
	(%type_raw[-x11] = -x11)	--without-framework-opengl \
	(%type_raw[-x11] = -x11) --with-x \
	--with-magick=GraphicsMagick \
	--with-qhull-includedir=%p/include/libqhull \
	--host=%m-apple-darwin \
	--build=%m-apple-darwin \
	--infodir='${prefix}/share/info' \
	--mandir='${prefix}/share/man' \
	--libexecdir='${prefix}/lib' \
	--enable-shared \
	--enable-dl \
	--disable-static \
	--disable-docs \
	--enable-dependency-tracking
<<
CompileScript: <<
 #!/bin/sh -ev
 # check for fink-octave-scripts compiler wrappers since these can vanish if people
 # use older octave packaging

 if [ ! -x %p/bin/oct-cc -o ! -x %p/bin/oct-cxx ] ; then
	 printf "\nERROR===============================================\n\n"
	 printf "One or both of the %p/bin/oct-cc or %p/bin/oct-cxx\n"
	 printf "wrapper-scripts is missing or not executable.\n"
	 printf "Try using the following command to fix the situation:\n"
	 printf "\nfink reinstall fink-octave-scripts\n"
	 printf "\n=====================================================\n\n"
	 exit 2
 fi

  . %p/sbin/fink-buildenv-helper.sh

 # allow configure to find OpenGL libraries in X11
 if [ "%type_raw[-x11]" = "-x11" ] ; then
	export LDFLAGS="-L%p/lib -L$X11_BASE_DIR/lib -Wl,-dead_strip_dylibs"
 	export CPPFLAGS="-I%p/include -I%p/include/freetype2 -I$X11_BASE_DIR/include"
 else
	export LDFLAGS="-L%p/lib -Wl,-dead_strip_dylibs"
	export CPPFLAGS="-I%p/include -I%p/include/freetype2"
 fi
 
 osversion=`uname -r | cut -d. -f1`
 if [ $osversion -ge 13 ] ; then 
	export CXXFLAGS="$CXXFLAGS -std=c++0x"
 fi
 export F77=%p/bin/gfortran-fsf-%type_raw[gcc]
 FLIBDIR="%p/lib/gcc%type_raw[gcc]/lib"
 export FLIBS="-L${FLIBDIR} -lgfortran"
 # -ff2c is required when using gfortran and Accelerate.framework
 if [ "%type_raw[-blas]" = "." ]
 	then export FFLAGS='-O3 -ff2c'
 	else export FFLAGS='-O3'
 fi
 export PKG_CONFIG=%p/bin/pykg-config
 ./configure %c "ac_cv_func_mkostemp=no"
 if [ $osversion -ge 13 ] ; then 
  # build vs. tr1/unordered_map isn't working right now
	perl -pi -e 's|/\*(.*HAVE_TR1.*)\*/|\1| ; s|(.*WITH_TR1 1)|//\1|' config.h
 fi
# don't just use top-level Makefile so that we can do a multi-core build.
 pushd libgnu 
 make -j1
 popd
 for dirs in libcruft liboctave ; do
 	pushd $dirs
 	make
 	popd
 done
 # src/ and scripts/ need to be built with -j1 since docs get built there.
 for dirs in src scripts ; do
 	pushd $dirs
 	make -j1
 	popd
 done
 fink-package-precedence .
<<

InfoTest: <<
	TestDepends: ( %type_raw[-x11] = -x11 ) xvfb-run
	TestScript: <<
		#!/bin/sh -ev
		if [ "%type_pkg[-x11]" = "-x11" ] 
			then xvfb-run make check || exit 2
		else
			if [ $UID = 0 ]
				then make check || exit 2
				else echo "Test suite under Aqua FLTK is incompatible with building as fink-bld."
			fi 
		fi
	<<
<<

InstallScript: <<
 #!/bin/sh -ev
 make install DESTDIR=%d
 # Install manpages manually
 mkdir -p %i/share/man/man1
 cp doc/interpreter/*.1 %i/share/man/man1
 # Install info pages manually
 mkdir -p %i/share/info
 cp doc/interpreter/*.info* %i/share/info

 # Install Fink-specific octaverc which points at our oct-versioned
 # package directory, and create the database directory
 cp %{Ni}rc %i/share/%{Ni}/%v/m/startup
 mkdir -p %i/var/%{Ni}/%v/

 # install examples
 mkdir -p %i/share/%{Ni}/%v/doc/examples
 cp -R examples %i/share/%{Ni}/%v/doc/examples

 # remove autogenerated freedesktop.org desktop file
 rm -f %i/share/applications/www.%{Ni}.org-%{Ni}.desktop

 # clear out hardcoded Fink sed.
 pushd %i/bin 
 for file in mkoctfile-%v %{Ni}-config-%v 
 do
 	perl -pi -e 's|%p/bin/sed|/usr/bin/env sed|g' $file
 done
 # generate Fink-gcc enabled mkoctfile
 cp mkoctfile-%type_raw[oct] mkoctfile-%type_raw[oct]-gcc%type_raw[gcc]
 perl -pi -e \
 's,oct\-cc,%p/bin/gcc-fsf-%type_raw[gcc],g; \
  s,oct\-cxx,%p/bin/g++-fsf-%type_raw[gcc],g' \
    mkoctfile-%type_raw[oct]-gcc%type_raw[gcc] 
 # create convenience symlink
 ln -s mkoctfile-%type_raw[oct]-gcc%type_raw[gcc] mkoctfile-gcc%type_raw[gcc] 
 popd

 # sanitize .la file
 cd %i/lib/%{Ni}/%v/
 perl -pi -e 's/(\-framework)\s(\w+)/-Wl,$1,$2/g' liboctinterp.la

 # manually install libcxx-fix.h
 if [ -e %b/liboctave/libcxx-fix.h ] ; then
   cp %b/liboctave/libcxx-fix.h %i/include/%{Ni}-%v/%{Ni}/
 fi
<<

InfoDocs: %{Ni}.info
DocFiles: AUTHORS BUGS COPYING ChangeLog NEWS README
ConfFiles: %p/share/%{Ni}/site/m/startup/%{Ni}rc

SplitOff: <<
	Package: octave%type_pkg[oct]%type_pkg[-blas]%type_pkg[-x11]-shlibs
	Conflicts: << 
		%{Ni}%type_pkg[oct]-shlibs,
		%{Ni}%type_pkg[oct]-x11-shlibs,
		%{Ni}%type_pkg[oct]-atlas-shlibs,
		%{Ni}%type_pkg[oct]-atlas-x11-shlibs,
		%{Ni}%type_pkg[oct]-ref-shlibs,
		%{Ni}%type_pkg[oct]-ref-x11-shlibs,
		%{Ni} (<< 3.0.5-5), 
		%{Ni}-atlas (<< 3.0.5-5), 
		%{Ni}3.0.2 ( << 3.0.2-5),
		%{Ni}3.0.2-atlas ( << 3.0.2-5)
	<<
	Replaces: <<
		%{Ni}%type_pkg[oct]-shlibs,
		%{Ni}%type_pkg[oct]-x11-shlibs,
		%{Ni}%type_pkg[oct]-atlas-shlibs,
		%{Ni}%type_pkg[oct]-atlas-x11-shlibs,
		%{Ni}%type_pkg[oct]-ref-shlibs,
		%{Ni}%type_pkg[oct]-ref-x11-shlibs,
		%{Ni} (<< 3.0.5-5),	
		%{Ni}-atlas (<< 3.0.5-5), 
		%{Ni}3.0.2 ( << 3.0.2-5),
		%{Ni}3.0.2-atlas ( << 3.0.2-5)
	<<	
	Depends: << 
		fftw3-shlibs,
		fontconfig2-shlibs,
		freetype219-shlibs (>= 2.5.5-1),
		gcc%type_pkg[gcc]-shlibs,
		hdf5.9-shlibs,
		libpcre1-shlibs, 
		readline7-shlibs,
		suitesparse-shlibs (>= 4.0.2-2),
		(%type_raw[-blas] = -atlas)	atlas-shlibs (>= 3.10.1-1),
		(%type_raw[-blas] = -atlas) qrupdate-atlas-shlibs (>= 1.1.2-7), 
		(%type_raw[-blas] = .) 		qrupdate-shlibs (>= 1.1.2-7),
		(%type_raw[-blas] = -ref) 	qrupdate-ref-shlibs (>= 1.1.2-7),
		(%type_raw[-blas] = -ref) 	lapack%type_pkg[lapack]-shlibs
	<<
	Provides: <<
		lib%{Ni}%type_pkg[oct]-gcc%type_pkg[gcc],
		lib%{Ni}%type_pkg[oct],
		(%type_raw[-blas] = -atlas) lib%{Ni}%type_pkg[oct]-newatlas,
		(%type_raw[-blas] = .) 		lib%{Ni}%type_pkg[oct]-accelerate,
		(%type_raw[-blas] = -ref) 	lib%{Ni}%type_pkg[oct]-ref,
		(%type_raw[-x11] = -x11) 	lib%{Ni}%type_pkg[oct]-x11,
		(%type_raw[-x11] != -x11) 	lib%{Ni}%type_pkg[oct]-aqua
	<<
	
	Files: <<
		lib/%{Ni}/%v/lib{cruft,%{Ni},octinterp}.1.dylib
	<<
	Shlibs: <<
		%p/lib/%{Ni}/%v/libcruft.1.dylib 2.0.0 %n (>=3.6.2-1)
		%p/lib/%{Ni}/%v/lib%{Ni}.1.dylib 3.0.0 %n (>=3.6.2-1)
		%p/lib/%{Ni}/%v/liboctinterp.1.dylib 2.0.0 %n (>=3.6.2-1)
	<<
	DescUsage: <<
	This package contains shared libraries which are used by the Octave
	interpreter itself, as well as for packages that build against Octave, 
	such as the various Octave Forge packages.
	Any package that either links to the libraries in %{Ni}%type_pkg[-blas]%type_pkg[-x11]-shlibs or 
	installs an extension should Depend on %{Ni}%type_pkg[oct]%type_pkg[-blas]%type_pkg[-x11]-shlibs and BuildDepend
	on %{Ni}%type_pkg[oct]%type_pkg[-blas]%type_pkg[-x11]-dev.  
	In addition, it will need to BuildDepend on hdf5.9 and fftw3.  
	<<
	DocFiles: AUTHORS BUGS COPYING ChangeLog NEWS README
<<
SplitOff2: <<
	Package: octave%type_pkg[oct]%type_pkg[-blas]%type_pkg[-x11]-dev
	Depends: <<
		%{Ni}%type_pkg[oct]%type_pkg[-blas]%type_pkg[-x11]-shlibs (=%v-%r), 
		%{Ni}%type_pkg[oct]%type_pkg[-blas]%type_pkg[-x11] (=%v-%r), 
		fink-%{Ni}-scripts (>= 0.3-1),
		gcc%type_pkg[gcc]-compiler 
	<<
	Conflicts: << 
		%{Ni}305-dev, 
		%{Ni}305-atlas-dev,
		%{Ni}305-ref-dev,  
		%{Ni}324-dev, 
		%{Ni}324-atlas-dev,
		%{Ni}324-ref-dev,
		%{Ni}324-x11-dev,
		%{Ni}324-atlas-x11-dev,
		%{Ni}324-ref-x11-dev,
		%{Ni}343-dev, 
		%{Ni}343-atlas-dev,
		%{Ni}343-ref-dev,
		%{Ni}343-x11-dev,
		%{Ni}343-atlas-x11-dev,
		%{Ni}343-ref-x11-dev,
		%{Ni}360-dev, 
		%{Ni}360-atlas-dev,
		%{Ni}360-ref-dev,
		%{Ni}360-x11-dev,
		%{Ni}360-atlas-x11-dev,
		%{Ni}360-ref-x11-dev,
		%{Ni}361-dev, 
		%{Ni}361-atlas-dev,
		%{Ni}361-ref-dev,
		%{Ni}361-x11-dev,
		%{Ni}361-atlas-x11-dev,
		%{Ni}361-ref-x11-dev,		
		%{Ni}362-dev,
		%{Ni}362-x11-dev,
		%{Ni}362-atlas-dev,
		%{Ni}362-atlas-x11-dev,
		%{Ni}362-ref-dev,
		%{Ni}362-ref-x11-dev,
		%{Ni}363-dev,
		%{Ni}363-x11-dev,
		%{Ni}363-atlas-dev,
		%{Ni}363-atlas-x11-dev,
		%{Ni}363-ref-dev,
		%{Ni}363-ref-x11-dev,
		%{Ni}364-dev,
		%{Ni}364-x11-dev,
		%{Ni}364-atlas-dev,
		%{Ni}364-atlas-x11-dev,
		%{Ni}364-ref-dev,
		%{Ni}364-ref-x11-dev,
		%{Ni}382-atlas-dev,
	   	%{Ni}382-atlas-x11-dev,
   		%{Ni}382-atlas-x11-qtmac-dev,
   		%{Ni}382-atlas-x11-qtx11-dev,
   		%{Ni}382-atlas-qtmac-dev,
   		%{Ni}382-atlas-qtx11-dev,
   		%{Ni}382-atlas-x11-dev,
   		%{Ni}382-dev,
   		%{Ni}382-x11-dev,
   		%{Ni}382-x11-qtmac-dev,
   		%{Ni}382-x11-qtx11-dev,
   		%{Ni}382-x11-x11-dev,
   		%{Ni}382-mac-dev,
   		%{Ni}382-qtmac-dev,
   		%{Ni}382-qtx11-dev,
   		%{Ni}382-ref-dev,
   		%{Ni}382-ref-x11-dev,
   		%{Ni}382-ref-x11-qtmac-dev,
   		%{Ni}382-ref-x11-qtx11-dev,
	   	%{Ni}382-ref-mac-dev,
   		%{Ni}382-ref-qtmac-dev,
   		%{Ni}382-ref-qtx11-dev,
   		%{Ni}382-x11-dev,
		%{Ni} (<< 3.0.5-5), 
		%{Ni}-atlas (<< 3.0.5-5), 
		%{Ni}3.0.2 ( << 3.0.2-5), 
		%{Ni}3.0.2-atlas ( << 3.0.2-5)
	<<
	Replaces: <<
		%{Ni}305-dev, 
		%{Ni}305-atlas-dev,
		%{Ni}305-ref-dev,  
		%{Ni}324-dev, 
		%{Ni}324-atlas-dev,
		%{Ni}324-ref-dev,
		%{Ni}324-x11-dev,
		%{Ni}324-atlas-x11-dev,
		%{Ni}324-ref-x11-dev,
		%{Ni}343-dev, 
		%{Ni}343-atlas-dev,
		%{Ni}343-ref-dev,
		%{Ni}343-x11-dev,
		%{Ni}343-atlas-x11-dev,
		%{Ni}343-ref-x11-dev,
		%{Ni}360-dev, 
		%{Ni}360-atlas-dev,
		%{Ni}360-ref-dev,
		%{Ni}360-x11-dev,
		%{Ni}360-atlas-x11-dev,
		%{Ni}360-ref-x11-dev,
		%{Ni}361-dev, 
		%{Ni}361-atlas-dev,
		%{Ni}361-ref-dev,
		%{Ni}361-x11-dev,
		%{Ni}361-atlas-x11-dev,
		%{Ni}361-ref-x11-dev,		
		%{Ni}362-dev,
		%{Ni}362-x11-dev,
		%{Ni}362-atlas-dev,
		%{Ni}362-atlas-x11-dev,
		%{Ni}362-ref-dev,
		%{Ni}362-ref-x11-dev,
		%{Ni}363-dev,
		%{Ni}363-x11-dev,
		%{Ni}363-atlas-dev,
		%{Ni}363-atlas-x11-dev,
		%{Ni}363-ref-dev,
		%{Ni}363-ref-x11-dev,
		%{Ni}364-dev,
		%{Ni}364-x11-dev,
		%{Ni}364-atlas-dev,
		%{Ni}364-atlas-x11-dev,
		%{Ni}364-ref-dev,
		%{Ni}364-ref-x11-dev,
		%{Ni}382-atlas-dev,
	   	%{Ni}382-atlas-x11-dev,
   		%{Ni}382-atlas-x11-qtmac-dev,
   		%{Ni}382-atlas-x11-qtx11-dev,
   		%{Ni}382-atlas-qtmac-dev,
   		%{Ni}382-atlas-qtx11-dev,
   		%{Ni}382-atlas-x11-dev,
   		%{Ni}382-dev,
   		%{Ni}382-x11-dev,
   		%{Ni}382-x11-qtmac-dev,
   		%{Ni}382-x11-qtx11-dev,
   		%{Ni}382-x11-x11-dev,
   		%{Ni}382-mac-dev,
   		%{Ni}382-qtmac-dev,
   		%{Ni}382-qtx11-dev,
   		%{Ni}382-ref-dev,
   		%{Ni}382-ref-x11-dev,
   		%{Ni}382-ref-x11-qtmac-dev,
   		%{Ni}382-ref-x11-qtx11-dev,
	   	%{Ni}382-ref-mac-dev,
   		%{Ni}382-ref-qtmac-dev,
   		%{Ni}382-ref-qtx11-dev,
   		%{Ni}382-x11-dev,
		%{Ni} (<< 3.0.5-5), 
		%{Ni}-atlas (<< 3.0.5-5), 
		%{Ni}3.0.2 ( << 3.0.2-5), 
		%{Ni}3.0.2-atlas ( << 3.0.2-5)
	<<
	Provides: <<
		lib%{Ni}%type_pkg[oct]-gcc%type_pkg[gcc]-dev,
		lib%{Ni}%type_pkg[oct]-dev,
		(%type_raw[-blas] = -atlas) lib%{Ni}%type_pkg[oct]-newatlas-dev,
		(%type_raw[-blas] = .) 		lib%{Ni}%type_pkg[oct]-accelerate-dev,
		(%type_raw[-blas] = -ref) 	lib%{Ni}%type_pkg[oct]-ref-dev,
		(%type_raw[-x11] = -x11) 	lib%{Ni}%type_pkg[oct]-x11-dev,
		(%type_raw[-x11] != -x11) 	lib%{Ni}%type_pkg[oct]-aqua-dev
	<<
	
	BuildDependsOnly: true
	
	Files: <<
		include/%{Ni}-%v
		lib/%{Ni}/%v/*.la 
		lib/%{Ni}/%v/*.dylib
		bin/mkoctfile*
		bin/%{Ni}-config*
		share/man/man1/mkoctfile*.1
		share/man/man1/%{Ni}-config*.1
	<<
	DescUsage: <<
	This package contains files needed to build against Octave, including
	headers and the mkoctfile executable.  It also contains symlinks to Fink's
	compiler wrappers, which are set up at install time to be appropriate to
	the current machine setup.
	To use mkoctfile to build dynamically loadable modules, you will need 	
	to install the hdf5.9 and fftw3 packages.
 	%n cannot Depend on them since they are BuildDependsOnly.
	<<
	DescPackaging:  <<
	We make up an extra mkoctfile which uses a Fink gcc for packages that need
	stuff which isn't included in Xcode.
	<<
	DocFiles: AUTHORS BUGS COPYING ChangeLog NEWS README
<<

Splitoff3: <<
	Package: octave%type_pkg[oct]%type_pkg[-blas]%type_pkg[-x11]
	Depends: <<
		%{Ni}%type_pkg[oct]%type_pkg[-blas]%type_pkg[-x11]-shlibs (=%v-%r),
		ncurses, 
		gnuplot-bin,
		fftw3-shlibs (>= 3.1.1-7), 
		gcc%type_pkg[gcc]-shlibs,
		glpk36-shlibs,
		graphicsmagick1322-shlibs,
		libcurl4-shlibs, 
		qhull6.3.1-shlibs,
		suitesparse-shlibs (>= 4.0.2-2),
		(%type_raw[-x11] != -x11) 	fltk13-aqua-shlibs,
		(%type_raw[-x11] = -x11) 	fltk-x11-shlibs,
		(%type_raw[-blas] = .)		arpack-ng-shlibs (>= 3.1.3-3) | (%type_raw[-blas] = .) arpack-ng-mpi-shlibs (>= 3.1.2-4),
		(%type_raw[-blas] = -ref) 	lapack%type_pkg[lapack]-shlibs,
		(%type_raw[-blas] = -ref)	arpack-ng-ref-shlibs (>= 3.1.3-3) | (%type_raw[-blas] = -ref) arpack-ng-mpi-ref-shlibs (>= 3.1.3-3),
		(%type_raw[-blas] = -atlas)	atlas-shlibs (>= 3.10.1-1),
		(%type_raw[-blas] = -atlas)	arpack-ng-atlas-shlibs (>= 3.1.3-3) | (%type_raw[-blas] = -atlas) arpack-ng-mpi-atlas-shlibs (>= 3.1.3-3)
	<<
	RuntimeDepends: <<
		epstool,
		ghostscript | ghostscript-nox,
		fig2dev (>= 3.2.6-2) | transfig-graphicx | transfig-epsfig,
		pstoedit-bin
	<<
	Conflicts: << 
		%{Ni}%type_pkg[oct],
		%{Ni}%type_pkg[oct]-x11,
		%{Ni}%type_pkg[oct]-atlas,
		%{Ni}%type_pkg[oct]-atlas-x11,
		%{Ni}%type_pkg[oct]-ref,
		%{Ni}%type_pkg[oct]-ref-x11,
		%{Ni} (<< 3.0.5-5), 
		%{Ni}-atlas (<< 3.0.5-5), 
		%{Ni}3.0.2 ( << 3.0.2-5),
		%{Ni}3.0.2-atlas ( << 3.0.2-5)
	<<
	Replaces: <<
		%{Ni}%type_pkg[oct],
		%{Ni}%type_pkg[oct]-x11,
		%{Ni}%type_pkg[oct]-atlas,
		%{Ni}%type_pkg[oct]-atlas-x11,
		%{Ni}%type_pkg[oct]-ref,
		%{Ni}%type_pkg[oct]-ref-x11,
		%{Ni} (<< 3.0.5-5), 
		%{Ni}-atlas (<< 3.0.5-5),
		%{Ni}3.0.2 ( << 3.0.2-5), 
		%{Ni}3.0.2-atlas ( << 3.0.2-5)
	<<
	Provides: <<
									%{Ni}%type_pkg[oct]-interpreter,
	(%type_raw[-x11] = -x11) 		%{Ni}%type_pkg[oct]-interpreter-x11,
	(%type_raw[-x11] != -x11) 		%{Ni}%type_pkg[oct]-interpreter-aqua,
	(%type_raw[-blas] = -atlas) 	%{Ni}%type_pkg[oct]-interpreter-newatlas,
	(%type_raw[-blas] = .)			%{Ni}%type_pkg[oct]-interpreter-accelerate,
	(%type_raw[-blas] = -ref) 		%{Ni}%type_pkg[oct]-interpreter-ref
	<<
	
	Files: <<
		share/%{Ni}/%v
		lib/%{Ni}/%v
		bin/%{Ni}-%v
		var/%{Ni}/%v
		share/man/man1/%{Ni}-%v.1
	<<
	ConfFiles: %p/share/%{Ni}/%v/m/startup/octaverc
	RuntimeVars: <<
 		GNUTERM: aqua
	<<
	DescUsage: <<
	The %{Ni}%type_pkg[oct]%type_pkg[-blas]%type_pkg[-x11] package contains versioned
	executables, in particular the "%{Ni}-%type_raw[oct]" executable,
	as well as all of the core functionality of the Octave interpreter.  
	Note that the GNU info file, which provides the core documentation, 
	is installed as part of the "%{Ni}%type_pkg[oct]%type_pkg[-blas]%type_pkg[-x11]" package.
    
	By default the plotting output (via gnuplot) is directed to AquaTerm. 
	This can be overidden in your startup scripts, e.g.
 
 		export GNUTERM=x11
 
	in bash
 
	or
 
		setenv GNUTERM x11
 
	in tcsh.
	 
	Note:  Fink's Octave implementation modifies one of the startup files,
	%p/share/%{Ni}/%v/m/startup/octaverc,
	to initialize octave sessions to know about Fink's octave-versioned 
	install location for octave-forge packages.  If you use the '--norc' 
	or '-f' flags in your Octave script, these packages won't be visible.  
	You'll need to run the following command in your script:
 
		pkg global_list %p/var/octave/%v/octave_packages
<<
	DocFiles: AUTHORS BUGS COPYING ChangeLog NEWS README
<<

Description: MATLAB-like language for computations
DescDetail: <<
Octave provides a convenient command line interface for solving linear and 
nonlinear problems numerically, and for performing other numerical 
experiments using a language that is mostly compatible with Matlab.
It may also be used as a batch-oriented language.

Octave has extensive tools for solving common numerical linear algebra
problems, finding the roots of nonlinear equations, integrating ordinary
functions, manipulating polynomials, and integrating ordinary differential
and differential-algebraic equations. It is easily extensible and 
customizable via user-defined functions written in Octave's own language, 
or using dynamically loaded modules written in C++, C, Fortran, 
or other languages.
<<
DescUsage: << 
The %{Ni}%type_pkg[-blas]%type_pkg[-x11] package contains unversioned
executables, in particular the "octave" executable, along with the GNU
info documentation.

You can select another version of Octave to be the default, i.e. the "octave"
executable and "info octave" point to it, via 
"fink install %{Ni}%type_pkg[-blas]%type_pkg[-x11]-<version>", 
where the available <version> options are:
	3.0.5
	3.2.4
	3.4.3
	3.6.0
	3.6.1
	3.6.2 
	3.6.3 
	3.6.4
	3.8.2 


By default the plotting output (via gnuplot) is directed to AquaTerm. 
This can be overidden in your startup scripts, e.g.
 
	export GNUTERM=x11
 
in bash
 
or
 
	setenv GNUTERM x11
 
in tcsh.

To build and install packages from Octave Forge manually, or to 
build anything else against Octave, you will need to install the 
%{Ni}%type_pkg[-blas]%type_pkg[-x11]-dev package.  
Fink's *-oct%type_pkg[oct] packages do this automatically, as well as
applying patches, so unless you want to test a pre-release version,
you are probably better off installing OF packages via Fink.
 
Note:  Fink's Octave implementation modifies one of the startup files,
%p/share/%{Ni}/%v/m/startup/octaverc,
to initialize octave sessions to know about Fink's octave-versioned 
install location for octave-forge packages.  If you use the '--norc' or '-f'
flags in your Octave script, these packages won't be visible.  You'll need to
run the following command in your script:
 
 	pkg global_list %p/var/octave/%v/octave_packages
<<
DescPort: <<
Thanks to Per Persson for most (if not all) of the work on the macos X port.

Apply fix from http://lukassen.wordpress.com/2010/01/18/taming-snow-leopard-cgdisplaybitsperpixel-deprication/ ,
with improvements from Peter O'Gorman and Daniel Macks, to display.cc to work around the lack of 
CGDisplayBitsPerPixel on 10.7.

Cleanups from David Fang to get the package to build using clang.

The Accelerate variant is built with -ff2c in the FFLAGS, 
because this appears to be necessary when using the Accelerate framework.

Build doesn't find Xlib.h on 10.8 and later, so we need the -I/usr/X11/include.
Versioned freetype dependency just to make sure.
<<
DescPackaging:  <<
set ac_cv_func_mkostemp=no explicitly to allow building on OS X Sierra and later.

Not sane (and now not even compilable) to use private code
from glpk. Import the functions needed so can still use it
even when glpk stops exporting its internals. See:
	http://octave.1599824.n4.nabble.com/GLPK-interface-was-Re-Multithreaded-Atlas-td1654632.html
 
Set the GNUTERM environment variable to AquaTerm because autodetection
of DISPLAY seems to cause options to be fed to our gnuplot that it doesn't 
understand.
AquaTerm seems to be a sensible default, particularly since gnuplot-nox is also a 
legal dependency.

Create manpages for the versioned executables.

Remove a desktop file that gets generated only for users with GNOME/KDE installed.

We have split the package up into runtime, development, and library packages,
to make upgrades easier for us and for users.
	
We generate common octave-forge bash and octave scripts, 
based on the ones by Johnathan Stickel in the original octave-forge-foo 
packages, in _this_ package, so that any required changes can be made in 
a common location rather than spread out over many packages.
Unfortunately, Octave's 'pkg' tool doesn't seem to know how to deal with 
variables, and the individual octave-forge  packages have to make copies
of the octave scripts during their build process and edit them to use the
package's name.

The -atlas variant depends on -atlas variants (only) of qrupdate and arpack-ng.  
The Accelerate variant depends on Accelerate variants (only) of these, and 
the reference LAPACK variant depends on variants of qrupdate and arpack-ng
which use the reference LAPACK (i.e. lapack342).
 
Patch oct-conf.h and mkoctfile to use octave-specific compiler executables
which are part of the -dev package to avoid issues which would propagate as 
dependendencies, e.g. encoding 'flag-sort' or a ccache-default compiler. This
also makes sure that anything that builds against Octave has the proper 
information when installed manually as well as via Fink, and is critical for
10.6/i386 (and 10.5/x86_64) users where the default compiler architecture
doesn't correspond to the Fink architecture.
These go in the -dev package, and are either wrappers around Fink's compiler
wrappers or symlinks to the Xcode compilers, as appropriate for the OS version.
They are resolved in the PostInstScript so that they set themselves 
appropriately for the OS version where Octave is installed, rather than where
it is built, thereby avoiding the necessity to rebuild Octave when updating
the OS.

Includes an additional mkoctfile which uses Fink's gcc4N compilers instead
of Xcode's.

We turn off building docs to save time, since we'd throw them out anyway 
because the package builds differently with and without TeX executables in
the PATH.  However, this entails manual installation of the manpages and the
GNU info file.

We use Provides in a new namespace and new projections to avoid
unwieldy | lists in the octave-forge packages.

Since octave-forge packages for octave < 3.6.0 link to whatever gcc4N 
Octave is using, and also since some other packages actually use gcc-4.N, 
add "liboctave-gcc4N-dev" and "liboctave-gcc4N" Provides, to make sure that
things stay in sync; the latter isn't used yet.

"imfinfo" gives malloc() errors associated with the "view" and tileName functions
and then crashes on 64-bit platforms:

http://savannah.gnu.org/bugs/?38280

Changing the compiler, optimizations, or *magick didn't change anything.
Nothing seems suspicious in Fink's *magick packages, so pending upstream
resolution of the bug report one way or the other, disable these functions
in magick_finfo.oct and put placeholder values for them in imfinfo.m so
as not to break people's scripts.

Revision 2: Switched to gcc4.8, new atlas scheme, and shared library build 
of suitesparse.

Revision 3: 
Switched to new atlas scheme and shared library build of suitesparse.
Changed Provides: *-ptatlas to *-newatlas to force rebuilds of ATLAS-using
Octave Forge packages against the new packaging scheme.

Revision 5:
Switch to hdf5.8, and add RuntimeDepends: epstool, since we left that out.  

Revision 10:
Switch to gcc49 and lapack350.  
Use fink-octave-scripts package for compilers and patch in build directory's 
sysdep.h to avoid collisions with saclib rather than using flag-sort and then having to
undo it via patching.  All of the octave-forge packages are going to need to BDep:
fink-octave-scripts (>= 3.0.1) henceforth.

Revision 14:
Test suite crashes when built against fltk13-aqua and run as fink-bld.
Fix some sketchy flag ordering to ensure that Fink's freetype2 headers get brought
in before those from X11.  Also put a versioned dependency on freetype2.
Switch to hdf5.9.

Revision 10:
Switch to gcc5, which changes the virtual packages.
Switch to glpk36.  Thanks to dmacks (and Debian) for the update.
Switch to graphicsmagick1322.
Avoid /usr/X11*
<<
<<
