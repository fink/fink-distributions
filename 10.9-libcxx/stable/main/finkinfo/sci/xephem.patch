diff -ruN XEphem-4.2.0-orig/GUI/xephem/Makefile XEphem-4.2.0/GUI/xephem/Makefile
--- XEphem-4.2.0-orig/GUI/xephem/Makefile	2024-02-13 08:35:36
+++ XEphem-4.2.0/GUI/xephem/Makefile	2025-10-10 07:17:34
@@ -9,8 +9,8 @@
 # one executable, xephem.
 
 # These -I and -L flags point to the supporting XEphem libraries
-LIBINC = -I../../libastro -I../../libip -I../../liblilxml -I../../libjpegd -I../../libpng -I../../libz
-LIBLNK = -L../../libastro -L../../libip -L../../liblilxml -L../../libjpegd -L../../libpng -L../../libz
+LIBINC = -I../../libastro -I../../libip -I../../liblilxml -I../../libjpegd #-I../../libpng
+LIBLNK = -L../../libastro -L../../libip -L../../liblilxml -L../../libjpegd #-L../../libpng
 LIBLIB = -lastro -lip -llilxml -ljpegd -lpng -lz
 
 # MOTIFI is the directory containing the Xm directory of include files.
@@ -32,8 +32,8 @@
 
 UNAME_S = $(shell uname -s)
 ifeq ($(UNAME_S),Darwin)
-  PLATI = -I/usr/local/opt/openssl@3/include -I/opt/X11/include
-  PLATL = -L/usr/local/opt/openssl@3/lib -L/opt/X11/lib
+  PLATI = -I@FINK_PREFIX@/include -I/opt/X11/include
+  PLATL = -L@FINK_PREFIX@/lib -L/opt/X11/lib
 endif
 
 CC = gcc
@@ -195,7 +195,7 @@
 all: libs xephem xephem.1
 
 xephem: $(INCS) $(OBJS)
-	$(CC) $(LDFLAGS) -o $@ $(OBJS) $(LIBS)
+	$(CC) $(AM_LDFLAGS) $(LDFLAGS) -o $@ $(OBJS) $(LIBS)
 
 xephem.1: xephem.man
 	nroff -man $? > $@
@@ -205,8 +205,7 @@
 	cd ../../libip; make
 	cd ../../libjpegd; make
 	cd ../../liblilxml; make
-	cd ../../libpng; make
-	cd ../../libz; make
+#	cd ../../libpng; make
 
 clean:
 	rm -fr *.o ../../lib*/*.[ao]
diff -ruN XEphem-4.2.0-orig/GUI/xephem/fallbacks.c XEphem-4.2.0/GUI/xephem/fallbacks.c
--- XEphem-4.2.0-orig/GUI/xephem/fallbacks.c	2024-02-13 08:35:36
+++ XEphem-4.2.0/GUI/xephem/fallbacks.c	2025-10-10 05:49:57
@@ -869,7 +869,7 @@
     "XEphem.SOHOhost: sohowww.nascom.nasa.gov",
     "XEphem.SatViewUp: 0",
     "XEphem.SaturnBackground: #151515",
-    "XEphem.ShareDir: .",
+    "XEphem.ShareDir: @FINK_PREFIX@/lib/xephem",
     "XEphem.Sitename: Chicago, Illinois",
     "XEphem.SkyAnnotColor: #bfc1c6",
     "XEphem.SkyCnsBndColor: #435964",
diff -ruN XEphem-4.2.0-orig/GUI/xephem/gscnet.c XEphem-4.2.0/GUI/xephem/gscnet.c
--- XEphem-4.2.0-orig/GUI/xephem/gscnet.c	2024-02-13 08:35:36
+++ XEphem-4.2.0/GUI/xephem/gscnet.c	2025-10-10 07:04:23
@@ -11,7 +11,7 @@
 
 static int moreObjF (ObjF **opp, int nop, int nnew);
 
-/* fetch GSC 2.3 stars around the given field of view from STScI.
+/* fetch GSC 2.4 stars around the given field of view from STScI.
  * if find some add them to the list at *opp and return new total, else
  * limit FOV to 30 arc mins -- these fields can be very dense.
  * return -1 with a diagnostic message in msg[].
@@ -29,7 +29,7 @@
 {
 #define	GSC23MAXFOV	degrad(30./60.0)		/* max fov */
 	/* http://gsss.stsci.edu/webservices/vo/ConeSearch.aspx?RA=10.0&DEC=5.0&SR=0.2&FORMAT=CSV */
-	static char ifmt[] = "%[^,],%lf,%lf,%*[^,],%*[^,],%*[^,],%*[^,],%lf,%lf,%*[^,],%*[^,],%lf,%lf,%lf,%*[^,],%*[^,],%*[^,],%*[^,],%*[^,],%*[^,],%*[^,],%*[^,],%*[^,],%*[^,],%*[^,],%*[^,],%*[^,],%*[^,],%*[^,],%*[^,],%*[^,],%d";
+	static char ifmt[] = "%[^,],%*[^,],%lf,%lf,%*[^,],%*[^,],%*[^,],%*[^,],%*[^,],%*[^,],%*[^,],%*[^,],%lf,%*[^,],%*[^,],%lf,%*[^,],%*[^,],%*[^,],%*[^,],%*[^,],%*[^,],%*[^,],%*[^,],%lf,%*[^,],%*[^,],%lf,%*[^,],%*[^,],%*[^,],%*[^,],%*[^,],%*[^,],%*[^,],%*[^,],%lf,%*[^,],%*[^,],%*[^,],%*[^,],%*[^,],%*[^,],%*[^,],%*[^,],%d";
 	static char gfmt[] = " GET http://%s%s?RA=%g&DEC=%g&SR=%g&FORMAT=CSV HTTP/1.0\r\nUser-Agent: xephem/%s\r\n\r\n";
 	char host[1024];
 	char buf[2048];
@@ -41,7 +41,7 @@
 	if (fov > GSC23MAXFOV) {
 	    static int fovwarned;
 	    if (!fovwarned) {
-		xe_msg (1, "All GSC 2.3 downloads will be limited to %.2f degree FOV",
+		xe_msg (1, "All GSC 2.4 downloads will be limited to %.2f degree FOV",
 							raddeg(GSC23MAXFOV));
 		fovwarned = 1;
 	    }
@@ -80,19 +80,21 @@
 	while ((n = recvlineb (sockfd, buf, sizeof(buf))) > 0) {
 	    char name[1024];
 	    double radeg, decdeg;
-	    double fmag, jmag, bmag, vmag, rmag;
+	    double fmag, jmag, bmag, vmag, j2mag;
 	    int class;
 	    Obj *op;
 
 	    /* look for total */
-	    if (sscanf (buf, " Objects found : %d", &nstars) == 1)
+	    if (sscanf (buf, " Objects found : %d", &nstars) == 1 ||
+	    sscanf (buf, "#Objects found : %d", &nstars) == 1) {
 		continue;
+		}
 
 	    /* crack */
 	    if (sscanf (buf, ifmt, name, &radeg, &decdeg, &fmag, &jmag, &bmag,
-						&vmag, &rmag, &class) != 9)
+						&vmag, &j2mag, &class) != 9)
 		continue;
-	    if (fmag>lmag && jmag>lmag && bmag>lmag && vmag>lmag && rmag>lmag)
+	    if (fmag>lmag && jmag>lmag && bmag>lmag && vmag>lmag && j2mag>lmag)
 		continue;
 
 	    /* good -- grow list */
@@ -106,7 +108,7 @@
 	    zero_mem ((void *)op, sizeof(ObjF));
 
 	    /* add */
-	    (void) sprintf (op->o_name, "GSC2.3 %.*s", MAXNM-8, name);
+	    (void) sprintf (op->o_name, "GSC2.4 %.*s", MAXNM-8, name);
 	    op->o_type = FIXED;
 	    switch (class) {
 	    case 0: op->f_class = 'S'; break;
@@ -120,12 +122,12 @@
 		set_fmag (op, vmag);
 	    else if (bmag<=lmag)
 		set_fmag (op, bmag);
-	    else if (rmag<=lmag)
-		set_fmag (op, rmag);
 	    else if (fmag<=lmag)
 		set_fmag (op, fmag);
-	    else
+	    else if (jmag<=lmag)
 		set_fmag (op, jmag);
+		else
+		set_fmag (op, j2mag);
 
 	    if (nstars > 0)
 		pm_set (100*nnew++/nstars);
diff -ruN XEphem-4.2.0-orig/libip/wcs.c XEphem-4.2.0/libip/wcs.c
--- XEphem-4.2.0-orig/libip/wcs.c	2024-02-13 08:35:36
+++ XEphem-4.2.0/libip/wcs.c	2025-10-10 06:44:31
@@ -236,6 +236,7 @@
 	FITSRow typestr;
 	double tmp;
 
+	double cd[2][2];
 	if (fip->wcsset)
 	    return (0);
 
@@ -251,10 +252,31 @@
 	if (getRealFITS (fip, "CRVAL2", &fip->yref) < 0) return (-1);
 	if (getRealFITS (fip, "CRPIX1", &fip->xrefpix) < 0) return (-1);
 	if (getRealFITS (fip, "CRPIX2", &fip->yrefpix) < 0) return (-1);
-	if (getRealFITS (fip, "CDELT1", &fip->xinc) < 0) return (-1);
-	if (getRealFITS (fip, "CDELT2", &fip->yinc) < 0) return (-1);
-	if (getRealFITS (fip, "CROTA2", &fip->rot) < 0) return (-1);
 	if (getStringFITS (fip, "CTYPE1", typestr) < 0) return (-1);
+	if (getRealFITS (fip, "CD1_1", &cd[0][0]) < 0) {
+	    /* If CD matrix is not present, revert to CDELT and CROT keywords */
+	    if (getRealFITS (fip, "CDELT1", &fip->xinc) < 0) return (-1);
+	    if (getRealFITS (fip, "CDELT2", &fip->yinc) < 0) return (-1);
+	    if (getRealFITS (fip, "CROTA2", &fip->rot) < 0) return (-1);
+	} else {
+	    if (getRealFITS (fip, "CD1_2", &cd[0][1]) < 0) return (-1);
+	    if (getRealFITS (fip, "CD2_1", &cd[1][0]) < 0) return (-1);
+	    if (getRealFITS (fip, "CD2_2", &cd[1][1]) < 0) return (-1);
+	    /* CD matrix now available, calculate {x,y}inc and rot values
+	    * CD1_1 =  CDELT1 * cos (CROTA2)
+	    * CD1_2 = -CDELT2 * sin (CROTA2)
+	    * CD2_1 =  CDELT1 * sin (CROTA2)
+	    * CD2_2 =  CDELT2 * cos (CROTA2) 
+	    * therefore:
+	    * CROT2 = ATAN2(-CD1_2, CD2_2)
+	    * CDELT1 = CD1_1/acos(CROT2)
+	    * CDELT2 = CD2_2/acos(CROT2)
+	    */
+	    tmp = atan2(-cd[0][1], cd[1][1]);
+	    fip->rot =  raddeg(tmp);
+	    fip->xinc = cd[0][0] / cos(tmp);
+	    fip->yinc = cd[1][1] / cos(tmp);
+	}
 	if (strncmp (typestr, "RA--", 4)) return (-1);
 	strncpy (fip->type, typestr+4, sizeof(fip->type)-1);
 
