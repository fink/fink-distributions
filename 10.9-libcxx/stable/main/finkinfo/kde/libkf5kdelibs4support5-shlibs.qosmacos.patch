diff -ruN kdelibs4support-5.29.0-orig/autotests/kglobaltest.cpp kdelibs4support-5.29.0/autotests/kglobaltest.cpp
--- kdelibs4support-5.29.0-orig/autotests/kglobaltest.cpp	2016-12-10 09:32:28.000000000 -0600
+++ kdelibs4support-5.29.0/autotests/kglobaltest.cpp	2017-01-15 06:40:39.000000000 -0600
@@ -84,7 +84,7 @@
     void emitSigFoo()
     {
         emit sigFoo();
-#ifndef Q_OS_MAC
+#ifndef Q_OS_MACOS
         // Mac currently uses the unix event loop (not glib) which
         // has issues and blocks in nested event loops such as the
         // one triggered by the below. Since this is a limitation
diff -ruN kdelibs4support-5.29.0-orig/src/kdecore/kcmdlineargs.cpp kdelibs4support-5.29.0/src/kdecore/kcmdlineargs.cpp
--- kdelibs4support-5.29.0-orig/src/kdecore/kcmdlineargs.cpp	2016-12-10 09:32:28.000000000 -0600
+++ kdelibs4support-5.29.0/src/kdecore/kcmdlineargs.cpp	2017-01-15 06:40:52.000000000 -0600
@@ -882,7 +882,7 @@
             } else if (option.startsWith("help-")) { // krazy:exclude=strings
                 KCmdLineArgs::usage(option.mid(5));
             }
-#ifdef Q_OS_MAC
+#ifdef Q_OS_MACOS
             // skip the finder -psn_* hint
             else if (option.startsWith("psn_")) { // krazy:exclude=strings
                 continue;
diff -ruN kdelibs4support-5.29.0-orig/src/kdecore/kkernel_mac.cpp kdelibs4support-5.29.0/src/kdecore/kkernel_mac.cpp
--- kdelibs4support-5.29.0-orig/src/kdecore/kkernel_mac.cpp	2016-12-10 09:32:28.000000000 -0600
+++ kdelibs4support-5.29.0/src/kdecore/kkernel_mac.cpp	2017-01-15 08:58:00.000000000 -0600
@@ -19,7 +19,7 @@
 
 #include "kkernel_mac.h"
 
-#ifdef Q_OS_MACX
+#ifdef Q_OS_MACOS
 
 #include <unistd.h>
 #include <string.h>
diff -ruN kdelibs4support-5.29.0-orig/src/kdecore/kkernel_mac.h kdelibs4support-5.29.0/src/kdecore/kkernel_mac.h
--- kdelibs4support-5.29.0-orig/src/kdecore/kkernel_mac.h	2016-12-10 09:32:28.000000000 -0600
+++ kdelibs4support-5.29.0/src/kdecore/kkernel_mac.h	2017-01-15 08:58:24.000000000 -0600
@@ -19,9 +19,9 @@
 #ifndef KKERNEL_MAC_H
 #define KKERNEL_MAC_H
 
-#include <QtCore/qglobal.h> // defines Q_OS_MACX
+#include <QtCore/qglobal.h> // defines Q_OS_MACOS
 
-#ifdef Q_OS_MACX
+#ifdef Q_OS_MACOS
 
 #include <kdelibs4support_export.h>
 #include <QtCore/QString>
@@ -57,5 +57,5 @@
   */
 KDELIBS4SUPPORT_DEPRECATED_EXPORT QString mac_app_filename();
 
-#endif  // Q_OS_MACX
+#endif  // Q_OS_MACOS
 #endif  // KKERNEL_MAC_H
diff -ruN kdelibs4support-5.29.0-orig/src/kdecore/klocale.cpp kdelibs4support-5.29.0/src/kdecore/klocale.cpp
--- kdelibs4support-5.29.0-orig/src/kdecore/klocale.cpp	2016-12-10 09:32:28.000000000 -0600
+++ kdelibs4support-5.29.0/src/kdecore/klocale.cpp	2017-01-15 06:41:21.000000000 -0600
@@ -25,7 +25,7 @@
 #include "klocale.h"
 #if defined Q_OS_WIN
 #include "klocale_win_p.h"
-#elif defined Q_OS_MAC
+#elif defined Q_OS_MACOS
 #include "klocale_mac_p.h"
 #else
 #include "klocale_unix_p.h"
@@ -42,7 +42,7 @@
 KLocale::KLocale(KSharedConfig::Ptr config)
 #if defined Q_OS_WIN
     : d(new KLocaleWindowsPrivate(this, config))
-#elif defined Q_OS_MAC
+#elif defined Q_OS_MACOS
     : d(new KLocaleMacPrivate(this, config))
 #else
     : d(new KLocaleUnixPrivate(this, config))
@@ -53,7 +53,7 @@
 KLocale::KLocale(const QString &language, const QString &country, KConfig *config)
 #if defined Q_OS_WIN
     : d(new KLocaleWindowsPrivate(this, language, country, config))
-#elif defined Q_OS_MAC
+#elif defined Q_OS_MACOS
     : d(new KLocaleMacPrivate(this, language, country, config))
 #else
     : d(new KLocaleUnixPrivate(this, language, country, config))
diff -ruN kdelibs4support-5.29.0-orig/src/kdecore/kstandarddirs.cpp kdelibs4support-5.29.0/src/kdecore/kstandarddirs.cpp
--- kdelibs4support-5.29.0-orig/src/kdecore/kstandarddirs.cpp	2016-12-10 09:32:28.000000000 -0600
+++ kdelibs4support-5.29.0/src/kdecore/kstandarddirs.cpp	2017-01-15 07:02:37.000000000 -0600
@@ -1342,7 +1342,7 @@
     return exePaths;
 }
 
-#ifdef Q_OS_MAC
+#ifdef Q_OS_MACOS
 static QString getBundle(const QString &path, bool ignore)
 {
     //kDebug(180) << "getBundle(" << path << ", " << ignore << ") called";
@@ -1370,7 +1370,7 @@
 
 static QString checkExecutable(const QString &path, bool ignoreExecBit)
 {
-#ifdef Q_OS_MAC
+#ifdef Q_OS_MACOS
     QString bundle = getBundle(path, ignoreExecBit);
     if (!bundle.isEmpty()) {
         //kDebug(180) << "findExe(): returning " << bundle;
@@ -1379,7 +1379,7 @@
 #endif
     QFileInfo info(path);
     QFileInfo orig = info;
-#if defined(Q_OS_DARWIN) || defined(Q_OS_MAC)
+#if defined(Q_OS_DARWIN) || defined(Q_OS_MACOS)
     FILE *file;
     if (file = fopen(orig.absoluteFilePath().toUtf8().constData(), "r")) {
         fclose(file);
@@ -1502,7 +1502,7 @@
         p = (*it) + QLatin1Char('/');
         p += appname;
 
-#ifdef Q_OS_MAC
+#ifdef Q_OS_MACOS
         QString bundle = getBundle(p, (options & IgnoreExecBit));
         if (!bundle.isEmpty()) {
             //kDebug(180) << "findExe(): returning " << bundle;
@@ -1804,7 +1804,7 @@
             localKdeDir += QLatin1Char('/');
         }
     } else {
-#if defined(Q_OS_MAC)
+#if defined(Q_OS_MACOS)
         localKdeDir =  QDir::homePath() + QLatin1String("/Library/Preferences/KDE/");
 #elif defined(Q_OS_WIN)
 #ifndef _WIN32_WCE
@@ -1828,7 +1828,7 @@
     }
 #endif
 
-#ifdef Q_OS_MAC
+#ifdef Q_OS_MACOS
     // Adds the "Contents" directory of the current application bundle to
     // the search path. This way bundled resources can be found.
     QDir bundleDir(mac_app_filename());
diff -ruN kdelibs4support-5.29.0-orig/src/kdeui/k4style.cpp kdelibs4support-5.29.0/src/kdeui/k4style.cpp
--- kdelibs4support-5.29.0-orig/src/kdeui/k4style.cpp	2016-12-10 09:32:28.000000000 -0600
+++ kdelibs4support-5.29.0/src/kdeui/k4style.cpp	2017-01-15 08:56:04.000000000 -0600
@@ -329,7 +329,7 @@
 
 QString K4Style::defaultStyle()
 {
-#if defined(Q_OS_UNIX) && !defined(Q_OS_MAC)
+#if defined(Q_OS_UNIX) && !defined(Q_OS_MACOS)
     return QString("breeze");
 #else
     return QString(); // native style
diff -ruN kdelibs4support-5.29.0-orig/src/kdeui/kapplication.cpp kdelibs4support-5.29.0/src/kdeui/kapplication.cpp
--- kdelibs4support-5.29.0-orig/src/kdeui/kapplication.cpp	2016-12-10 09:32:28.000000000 -0600
+++ kdelibs4support-5.29.0/src/kdeui/kapplication.cpp	2017-01-15 08:56:31.000000000 -0600
@@ -92,7 +92,7 @@
 #include <QX11Info>
 #endif
 
-#ifdef Q_OS_MAC
+#ifdef Q_OS_MACOS
 // ick
 #undef Status
 #include <Carbon/Carbon.h>
@@ -368,7 +368,7 @@
         ::exit(127);
     }
 
-#ifdef Q_OS_MAC
+#ifdef Q_OS_MACOS
     mac_initialize_dbus();
 #endif
 
@@ -481,7 +481,7 @@
                q, SLOT(saveState(QSessionManager&)));
 
 
-#ifdef Q_OS_MAC
+#ifdef Q_OS_MACOS
     // This is a QSystemTrayIcon instead of K* because we can't be sure q is a QWidget
     QSystemTrayIcon *trayIcon; //krazy:exclude=qclasses
     if (QSystemTrayIcon::isSystemTrayAvailable()) { //krazy:exclude=qclasses
diff -ruN kdelibs4support-5.29.0-orig/src/kdeui/kuniqueapplication.cpp kdelibs4support-5.29.0/src/kdeui/kuniqueapplication.cpp
--- kdelibs4support-5.29.0-orig/src/kdeui/kuniqueapplication.cpp	2016-12-10 09:32:28.000000000 -0600
+++ kdelibs4support-5.29.0/src/kdeui/kuniqueapplication.cpp	2017-01-15 08:57:16.000000000 -0600
@@ -59,7 +59,7 @@
 #include <kconfig.h>
 #include "kdebug.h"
 
-#if defined(Q_OS_DARWIN) || defined (Q_OS_MAC)
+#if defined(Q_OS_DARWIN) || defined (Q_OS_MACOS)
 #include <kkernel_mac.h>
 #endif
 
@@ -77,7 +77,7 @@
 {
     KCmdLineOptions kunique_options;
     kunique_options.add("nofork", ki18n("Do not run in the background."));
-#ifdef Q_OS_MAC
+#ifdef Q_OS_MACOS
     kunique_options.add("psn", ki18n("Internally added if launched from Finder"));
 #endif
     KCmdLineArgs::addCmdLineOptions(kunique_options, KLocalizedString(), "kuniqueapp", "kde");
@@ -110,7 +110,7 @@
     s_kuniqueapplication_startCalled = true;
 
     addCmdLineOptions(); // Make sure to add cmd line options
-#if defined(Q_OS_WIN) || defined(Q_OS_MACX)
+#if defined(Q_OS_WIN) || defined(Q_OS_MACOS)
     Private::s_startOwnInstance = true;
 #else
     KCmdLineArgs *args = KCmdLineArgs::parsedArgs("kuniqueapp");
@@ -130,7 +130,7 @@
     bool forceNewProcess = Private::s_multipleInstances || flags & NonUniqueInstance;
 
     if (Private::s_startOwnInstance) {
-#if defined(Q_OS_DARWIN) || defined (Q_OS_MAC)
+#if defined(Q_OS_DARWIN) || defined (Q_OS_MACOS)
         mac_initialize_dbus();
 #endif
 
@@ -156,7 +156,7 @@
         // We'll call newInstance in the constructor. Do nothing here.
         return true;
 
-#if defined(Q_OS_DARWIN) || defined (Q_OS_MAC)
+#if defined(Q_OS_DARWIN) || defined (Q_OS_MACOS)
     } else {
         mac_fork_and_reexec_self();
 #endif
