Package: terminator
Version: 0.97
Revision: 1
Description: Multiple GNOME terminals in one window
License: GPL
Homepage: http://gnometerminator.blogspot.com/p/introduction.html
Maintainer: Monic Polynomial <monipol@users.sourceforge.net>

Source: http://launchpad.net/terminator/trunk/%v/+download/terminator-%v.tar.gz
Source-Checksum: SHA256(9131847023fa22f11cf812f6ceff51b5d66d140b6518ad41d7fa8b0742bfd3f7)

BuildDepends: <<
	gettext-tools,
	intltool40
<<

Depends: <<
	default-icon-theme,
	gconf2 (>= 2.22.0-1),
	gtk+2 (>= 2.18.0-1),
	pygobject2-py27 (>= 2.20.0-1),
	pygtk2-gtk-py27 (>= 2.16.0-1),
	python27,
	vte,
	vte-py27
<<

CompileScript: %p/bin/python2.7 setup.py build
InstallScript: %p/bin/python2.7 setup.py --without-icon-cache install --root %d
PostInstScript: %p/bin/gtk-update-icon-cache -q -f -t %p/share/icons/hicolor
PostRmScript: %p/bin/gtk-update-icon-cache -q -f -t %p/share/icons/hicolor

DocFiles: COPYING ChangeLog README

DescDetail: <<
Terminator is a useful tool for arranging terminals.  It is inspired by
programs such as gnome-multi-term, quadkonsole, etc. in that the main focus is
arranging terminals in grids (tabs is the most common default method, which
Terminator also supports).
<<

DescUsage: <<
When you run Terminator, you will get a terminal in a window, just like almost
every other terminal emulator available. There is no other GUI apart from the
context menu on each terminal, but there is a configuration file which can be
used to control the behaviours and settings of Terminator (see the manpage
"terminator_config"). If you use GNOME then the settings for your default
gnome-terminal profile will be used (you can specify an alternate profile on
the command line).

You can create more terminals by right clicking on one and choosing to split it
vertically or horizontally. You can get rid of a terminal by right clicking on
it and choosing Close. Ctrl-Shift-o and Ctrl-Shift-e will also effect the
splitting.

Ctrl-Shift-n and Ctrl-Shift-p will Shift focus to the next/previous terminal
respectively, and Ctrl-Shift-w will close the current terminal and Ctrl-Shift-q
the current window.

In order to use Alt-arrow to move between terminals, add the following lines to
~/.Xmodmap:

clear Mod1
keycode 66 = Alt_L
keycode 69 = Alt_R
add Mod1 = Alt_L
add Mod1 = Alt_R
<<
