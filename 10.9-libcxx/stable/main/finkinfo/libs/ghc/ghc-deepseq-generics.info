Package: ghc-deepseq-generics
Version: 0.1.1.2
Revision: 1
Source: http://hackage.haskell.org/package/deepseq-generics-%v/deepseq-generics-%v.tar.gz
Source-Checksum: SHA256(839e1d6ead4c45faa4165f0e82aa8a9d1df7a7c1118bfb1787e8268bfa8bfb06)
SourceDirectory: deepseq-generics-%v

Depends: <<
  ghc (>= 7.10.3-1), ghc (<< 7.10.3.1-1)
<<

PatchScript: <<
#https://github.com/hvr/deepseq-generics/issues/2
/usr/bin/sed -i '' -e 's/< 0.4,/< 0.5,/' deepseq-generics.cabal
<<

Shlibs: <<
  @rpath/libHSdeepseq-generics-0.1.1.2-KQS2Zr93xUkD8bcZwwdMmS-ghc7.10.3.dylib 0.0.0 %n (>= 0.1.1.2-1)
<<

CompileScript: <<
runghc Setup.hs configure --prefix=%p --docdir=%p/share/doc/%n
runghc Setup.hs build
runghc Setup.hs haddock
runghc Setup.hs register --gen-script
runghc Setup.hs unregister --gen-script
<<
InstallScript: runghc Setup.hs copy --destdir=%d

DocFiles: LICENSE register.sh unregister.sh

PostInstScript: %p/share/doc/%n/register.sh
PreRmScript: sh %p/share/doc/%n/unregister.sh --force

Description: GHC.Generics-based Control.DeepSeq.rnf
DescDetail: <<
This package provides a GHC.Generics-based
Control.DeepSeq.Generics.genericRnf function which can be used for
providing a rnf implementation. See the documentation for the
genericRnf function in the Control.DeepSeq.Generics module to get
started.

The original idea was pioneered in the generic-deepseq package (see
http://www.haskell.org/pipermail/haskell-cafe/2012-February/099551.html
for more information).

This package differs from the generic-deepseq package by working in
combination with the existing deepseq package as opposed to defining a
conflicting drop-in replacement for deepseq's Control.Deepseq module.

Note: The ability to auto-derive via GHC.Generics has been merged into
deepseq-1.4.0.0. This package is now still useful for writing code
that's also compatible with older deepseq versions not yet providing
GHC.Generics-support.
<<
Homepage: http://hackage.haskell.org/package/deepseq-generics
License: BSD
Maintainer: None <fink-devel@lists.sourceforge.net>
