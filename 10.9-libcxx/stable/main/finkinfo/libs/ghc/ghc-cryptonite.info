Package: ghc-cryptonite
Version: 0.9
Revision: 1
Source: http://hackage.haskell.org/package/cryptonite-%v/cryptonite-%v.tar.gz
Source-Checksum: SHA256(9f50dc254c20e535d0d490dd004765ab080a6a0745966d0a81a80a4c85e842c0)
SourceDirectory: cryptonite-%v

Depends: <<
  ghc (>= 7.10.3-1), ghc (<< 7.10.3.1-1),
  ghc-memory (>= 0.8-1)
<<

Shlibs: <<
  @rpath/libHScryptonite-0.9-2hIDW6tYoJR3VxJeSHiHB7-ghc7.10.3.dylib 0.0.0 %n (>= 0.9-1)
<<

CompileScript: <<
runghc Setup.hs configure --prefix=%p --docdir=%p/share/doc/%n
runghc Setup.hs build
runghc Setup.hs haddock
runghc Setup.hs register --gen-script
runghc Setup.hs unregister --gen-script
<<
InstallScript: runghc Setup.hs copy --destdir=%d

DocFiles: LICENSE CHANGELOG.md README.md register.sh unregister.sh

PostInstScript: %p/share/doc/%n/register.sh
PreRmScript: sh %p/share/doc/%n/unregister.sh --force

Description: Cryptography Primitives sink
DescDetail: <<
A repository of cryptographic primitives.

  * Symmetric ciphers: AES, DES, 3DES, Blowfish, Camellia, RC4, Salsa,
    ChaCha.

  * Hash: SHA1, SHA2, SHA3, MD2, MD4, MD5, Keccak, Skein, Ripemd,
    Tiger, Whirlpool, Blake2

  * MAC: HMAC, Poly1305

  * Assymmetric crypto: DSA, RSA, DH, ECDH, ECDSA, ECC, Curve25519,
    Ed25519

  * Key Derivation Function: PBKDF2, Scrypt

  * Cryptographic Random generation: System Entropy, Deterministic
    Random Generator

  * Data related: Anti-Forensic Information Splitter (AFIS)

If anything cryptographic related is missing from here, submit a pull
request to have it added. This package strive to be a cryptographic
kitchen sink that provides cryptography for everyone.

Evaluate the security related to your requirements before using.
<<
Homepage: http://hackage.haskell.org/package/cryptonite
License: BSD
Maintainer: None <fink-devel@lists.sourceforge.net>
