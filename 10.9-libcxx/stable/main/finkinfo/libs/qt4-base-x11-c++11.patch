diff -Nurd qt-kde-qt-mac.orig/src/corelib/kernel/qobjectdefs.h qt-kde-qt-mac/src/corelib/kernel/qobjectdefs.h
--- qt-kde-qt-mac.orig/src/corelib/kernel/qobjectdefs.h	2011-05-08 23:25:04.000000000 -0400
+++ qt-kde-qt-mac/src/corelib/kernel/qobjectdefs.h	2021-08-30 14:41:17.000000000 -0400
@@ -214,7 +214,7 @@
 #define QTOSTRING_HELPER(s) #s
 #define QTOSTRING(s) QTOSTRING_HELPER(s)
 #ifndef QT_NO_DEBUG
-# define QLOCATION "\0"__FILE__":"QTOSTRING(__LINE__)
+# define QLOCATION "\0" __FILE__ ":" QTOSTRING(__LINE__)
 # define METHOD(a)   qFlagLocation("0"#a QLOCATION)
 # define SLOT(a)     qFlagLocation("1"#a QLOCATION)
 # define SIGNAL(a)   qFlagLocation("2"#a QLOCATION)
diff -Nurd qt-kde-qt-mac.orig/src/corelib/plugin/qplugin.h qt-kde-qt-mac/src/corelib/plugin/qplugin.h
--- qt-kde-qt-mac.orig/src/corelib/plugin/qplugin.h	2011-05-08 23:25:04.000000000 -0400
+++ qt-kde-qt-mac/src/corelib/plugin/qplugin.h	2021-08-30 14:39:29.000000000 -0400
@@ -111,10 +111,10 @@
 #  endif
 #  define Q_PLUGIN_VERIFICATION_DATA \
     static const char qt_plugin_verification_data[] = \
-      "pattern=""QT_PLUGIN_VERIFICATION_DATA""\n" \
-      "version="QT_VERSION_STR"\n" \
-      "debug="QPLUGIN_DEBUG_STR"\n" \
-      "buildkey="QT_BUILD_KEY;
+      "pattern=QT_PLUGIN_VERIFICATION_DATA\n" \
+      "version=" QT_VERSION_STR "\n" \
+      "debug=" QPLUGIN_DEBUG_STR "\n" \
+      "buildkey=" QT_BUILD_KEY;
 
 #  if defined (Q_OS_WIN32) && defined(Q_CC_BOR)
 #     define Q_STANDARD_CALL __stdcall
diff -Nurd qt-kde-qt-mac.orig/src/corelib/thread/qthreadstorage.h qt-kde-qt-mac/src/corelib/thread/qthreadstorage.h
--- qt-kde-qt-mac.orig/src/corelib/thread/qthreadstorage.h	2011-05-08 23:25:04.000000000 -0400
+++ qt-kde-qt-mac/src/corelib/thread/qthreadstorage.h	2021-08-31 23:07:56.000000000 -0400
@@ -91,7 +91,10 @@
 void qThreadStorage_setLocalData(QThreadStorageData &d, T **t)
 { (void) d.set(*t); }
 
-#ifndef QT_NO_PARTIAL_TEMPLATE_SPECIALIZATION
+template <typename T>
+inline
+void qThreadStorage_deleteData(void *d, T **)
+{ delete static_cast<T *>(d); }
 
 // value-based specialization
 template <typename T>
@@ -116,7 +119,11 @@
 void qThreadStorage_setLocalData(QThreadStorageData &d, T *t)
 { (void) d.set(new T(*t)); }
 
-#endif // QT_NO_PARTIAL_TEMPLATE_SPECIALIZATION
+template <typename T>
+inline
+void qThreadStorage_deleteData(void *d, T *)
+{ delete static_cast<T *>(d); }
+
 
 // MOC_SKIP_END
 #endif
@@ -130,7 +137,7 @@
     Q_DISABLE_COPY(QThreadStorage)
 
     static inline void deleteData(void *x)
-    { delete static_cast<T>(x); }
+    { qThreadStorage_deleteData(x, reinterpret_cast<T*>(0)); }
 
 public:
     inline QThreadStorage() : d(deleteData) { }
