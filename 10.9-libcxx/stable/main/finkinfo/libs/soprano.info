Info4: <<
Package: soprano-%type_pkg[soprano]
Version: 2.9.4
Revision: 3
Description: C++ RDF framework
Type: soprano (x11 mac)
License: GPL/LGPL
Maintainer: Benjamin Reed <soprano@fink.raccoonfink.com>
Homepage: http://soprano.sourceforge.net/

Depends: <<
	%N-shlibs (>= %v-%r),
	libiodbc2-shlibs,
	libodbc3-shlibs,
	libraptor2-shlibs (>= 2.0.15-2),
	qt4-base-%type_pkg[soprano]-qtcore-shlibs,
	qt4-base-%type_pkg[soprano]-qtdbus-shlibs,
	redland-shlibs (>= 1.0.17-4)
<<
BuildDepends: <<
	clucene-core (>= 0.9.21b-1007),
	cmake (>= 2.8.2-1),
	dbus1.3-dev (>= 1.2.24-1),
	fink (>= 0.30.0-1),
	fink-package-precedence (>= 0.7-1),
	kde4-buildenv (>= 4.6.0-1),
	libcurl4,
	libiconv,
	libiodbc2,
	libodbc3-dev,
	libraptor2-dev (>= 2.0.15-2),
	librasqal3-dev (>= 0.9.33-201),
	libxml2,
	libxslt,
	pkgconfig (>= 0.23-1),
	redland-dev (>= 1.0.17-4),
	system-java-dev (>= 1.5.0-1),
	qt4-base-%type_pkg[soprano] (>= 4.7.3-1),
	virtuoso (>= 6.1.8-1)
<<
GCC: 4.0

Source: mirror:sourceforge:soprano/soprano-%v.tar.bz2
Source-MD5: 91413e5783efeee0beb747ea4c5c9ef0
Source-Checksum: SHA1(97bd76df4a9f9336358dd9d7175c72b84d4ec6a0)
PatchScript: <<
	#!/bin/sh -ev
	### modelpool.cpp games to only apply that part of patch to X11 variant
	[ "%type_pkg[soprano]" != "x11" ] && cp server/modelpool.cpp server/modelpool.cpp.orig
	%{default_script}
	[ "%type_pkg[soprano]" != "x11" ] && mv server/modelpool.cpp.orig server/modelpool.cpp
	find . -name CMakeLists.txt | xargs perl -pi -e 's,include/Soprano,include/soprano,g'
<<
PatchFile: soprano.patch
PatchFile-MD5: 7830afc8f0a416df233b3bfb409edda6
CompileScript: <<
	#!/bin/sh -ev
	
	export KDE4_PREFIX="%p" KDE4_TYPE="%type_pkg[soprano]" KDE4_INSTALL_PREFIX="%p/opt/soprano/%type_pkg[soprano]"
	. %p/sbin/kde4-buildenv.sh
	
	export CC="$CC -MD" CXX="$CXX -MD"
	mkdir -p build
	pushd build
	cmake $KDE4_CMAKE_ARGS \
		-DCLUCENE_LIBRARY_DIR:PATH="%p/lib" \
		-DIODBC_INCLUDE_DIR:PATH=%p/include \
		-DIODBC_LIBRARIES:PATH=%p/lib/libiodbc.dylib \
	..
	make VERBOSE=1
	popd
	fink-package-precedence --prohibit-bdep %n --depfile-ext=.d .
<<

InstallScript: <<
#!/bin/sh -ev

	pushd build
		make -j1 install/fast DESTDIR="%d"
	popd

	install -d -m 755 %i/bin
	for bin in onto2vocabularyclass sopranocmd sopranod; do
		/bin/mv %i/opt/soprano/%type_pkg[soprano]/bin/$bin %i/bin/$bin-%type_pkg[soprano]
	done

	%p/sbin/normalize-filenames.sh "%i/opt/soprano/%type_pkg[soprano]/include"
	if [ -d "%i/opt/soprano/%type_pkg[soprano]/include/Soprano" ]; then
		/bin/mv "%i/opt/soprano/%type_pkg[soprano]/include/Soprano" "%i/opt/soprano/%type_pkg[soprano]/include/soprano"
	fi
<<
DocFiles: AUTHORS COPYING* ChangeLog INSTALL README TODO
SplitOff: <<
	Package: %N-shlibs
	Description: Shared libraries for Soprano
	Depends: <<
		clucene-core-shlibs (>= 0.9.21b-1007),
		qt4-base-%type_pkg[soprano]-qtcore-shlibs (>= 4.7.3-1),
		qt4-base-%type_pkg[soprano]-qtdbus-shlibs (>= 4.7.3-1),
		qt4-base-%type_pkg[soprano]-qtnetwork-shlibs (>= 4.7.3-1),
		qt4-base-%type_pkg[soprano]-qtxml-shlibs (>= 4.7.3-1),
		system-java (>= 1.5.0-1),
		virtuoso (>= 6.1.8-1)
	<<
	Recommends: %N (>= %v-%r)
	DocFiles: COPYING*
	Files: <<
		opt/soprano/%type_pkg[soprano]/lib/libsoprano.4*.dylib
		opt/soprano/%type_pkg[soprano]/lib/libsopranoclient.1*.dylib
		opt/soprano/%type_pkg[soprano]/lib/libsopranoindex.1*.dylib
		opt/soprano/%type_pkg[soprano]/lib/libsopranoserver.1*.dylib
	<<
	Shlibs: <<
		%p/opt/soprano/%type_pkg[soprano]/lib/libsoprano.4.dylib       4.0.0 %n (>= 2.2.3-7)
		%p/opt/soprano/%type_pkg[soprano]/lib/libsopranoclient.1.dylib 1.0.0 %n (>= 2.2.3-7)
		%p/opt/soprano/%type_pkg[soprano]/lib/libsopranoindex.1.dylib  1.0.0 %n (>= 2.2.3-7)
		%p/opt/soprano/%type_pkg[soprano]/lib/libsopranoserver.1.dylib 1.0.0 %n (>= 2.2.3-7)
	<<
<<
SplitOff2: <<
	Package: %N-dev
	Description: Development headers and libraries for soprano
	Depends: <<
		%N (>= %v-%r),
		%N-shlibs (= %v-%r)
	<<
	Replaces: %N (<< 2.4.0.1-1)
	BuildDependsOnly: true
	Files: <<
		opt/soprano/%type_pkg[soprano]/include
		opt/soprano/%type_pkg[soprano]/lib/*.dylib
		opt/soprano/%type_pkg[soprano]/lib/pkgconfig
		opt/soprano/%type_pkg[soprano]/share/soprano/cmake
	<<
	PreInstScript: <<
/bin/rm -rf "%p/opt/soprano/%type_pkg[soprano]/include/Soprano"
/bin/rm -rf "%p/opt/soprano/%type_pkg[soprano]/include/soprano"
	<<
	PostInstScript: <<
if [ "$1" = "configure" ] && [ ! -f "%p/opt/soprano/%type_pkg[soprano]/include/Soprano/sopranotypes.h" ]; then
	# case-sensitive filesystem, make various build-system stuff happy
	/bin/ln -sf soprano "%p/opt/soprano/%type_pkg[soprano]/include/Soprano"
fi
	<<
<<

PostInstScript: <<
if [ configure = "$1" ]; then
	WEIGHT=100
	if [ "%type_pkg[soprano]" = "x11" ]; then
		WEIGHT=50
	fi
	for bin in onto2vocabularyclass sopranocmd sopranod; do
		update-alternatives --install %p/bin/$bin $bin %p/bin/$bin-%type_pkg[soprano] $WEIGHT
	done
fi
<<
PreRmScript: <<
if [ upgrade != "$1" ]; then
	for bin in onto2vocabularyclass sopranocmd sopranod; do
		update-alternatives --remove $bin %p/bin/$bin-%type_pkg[soprano]
	done
fi
<<

DescDetail: <<
Soprano is an open and pluggable RDF resource framework which is built
on top of QT4.  It provides RDF storage, RDF parsing, serialization,
inference, and full text indexing in a nice C++ API.

The main target of Soprano are desktop applications as it is being
developed as a subproject of Nepomuk, the semantic desktop initiative.
<<
DescPort: <<
nieder: for soprano-2.9.4 , the X11 variant doesn't pass Q_WS_X11 to modelpool.cpp
for unknown reasons.  So #define that explicitly in the file, but only for the
X11 variant.  To avoid varianting a 2nd patch file, we play games unpatching the
file in not-X11.
<<
DescPackaging: <<
Should remove clucene indexer, but this eliminates the shared library libsopranoindex.1.dylib
https://trueg.wordpress.com/2011/09/22/about-strigi-soprano-virtuoso-clucene-and-libstreamanalyzer/
<<
<<

