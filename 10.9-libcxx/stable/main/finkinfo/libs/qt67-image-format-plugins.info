Info4: <<
Package: qt67-%type_pkg[qt]-image-format-plugins
Version: 6.7.2
Revision: 1
Distribution: 12.0, 13.0, 14.0
Description: Qt6 image format plugins (%type_pkg[qt])
Type: qt (mac)
License: LGPL
Maintainer: None <fink-devel@lists.sourceforge.net>
### First version 6.7.0 by Hanspeter Niederstrasser
### Free to upgrade and modify parameters, but please discuss
### first on the fink-devel list

Depends: <<
	qt67-%type_pkg[qt]-qtcore-shlibs (>= %v-1),
	qt67-%type_pkg[qt]-qtgui-shlibs (>= %v-1),
	libjasper7-shlibs,
	libmng2-shlibs,
	libtiff6-shlibs,
	libwebp7-shlibs
<<
BuildDepends: <<
	qt67-%type_pkg[qt]-qtbase-dev-tools (>= %v-1),
	qt67-%type_pkg[qt]-qtbase (>= %v-1),
	cmake,
	fink (>= 0.34.4-1),
	fink-package-precedence,
	libjasper7,
	libjpeg9,
	libmng2,
	libtiff6,
	libwebp7,
	ninja,
	pkgconfig,
	xcode.app (>= 14.1) | xcode (>= 14.1)
<<
BuildConflicts: uuid, libevent1.4, libevent2, libev4
Source: https://download.qt.io/archive/qt/6.7/%v/submodules/qtimageformats-everywhere-src-%v.tar.xz
Source-Checksum: SHA256(e1a1d8785fae67d16ad0a443b01d5f32663a6b68d275f1806ebab257485ce5d6)
PatchScript: <<
	# convenience fix to be able to easily read sourcetree
	chmod 755 .
<<
NoSetCPPFLAGS: true
NoSetCFLAGS: true
NoSetCXXFLAGS: true

GCC: 4.0
CompileScript: <<
	#!/bin/sh -ev
	export QT_FINK_PREFIX=%p/lib/qt67-%type_pkg[qt]
	export PATH=${QT_FINK_PREFIX}/bin:$PATH
	mkdir finkbuild
	pushd finkbuild
		qt-configure-module .. \
			-- \
			-DCMAKE_INSTALL_NAME_DIR=${QT_FINK_PREFIX}/lib \
			--log-level=VERBOSE
		cmake --build . --parallel -v
	popd
	fink-package-precedence --depfile-ext='\.d' --prohibit-bdep=%N .
<<

InstallScript: <<
	#!/bin/sh -ev
	#!/bin/sh -ev
	export QT_FINK_PREFIX=%p/lib/qt67-%type_pkg[qt]

	pushd finkbuild
	DESTDIR=%d cmake --install .
	popd
	#rm -r %d$QT_FINK_PREFIX/lib
<<
#AppBundles: 
DocFiles: LICENSES

Homepage: https://qt-project.org
DescDetail: <<
Qt is a cross-platform application and UI framework with APIs for
C++ programming and Qt Quick for rapid UI creation.

* Intuitive class libraries
* Easy to use and learn
* Produce highly readable, easily maintainable and reusable code
* High runtime performance and small footprint
<<
DescUsage: <<
To compile against this Qt6, you need to make sure that 
"%p/lib/qt67-%type_pkg[qt]/bin" is first in your PATH and that qmake is 
present. Qmake is provided by "qt67-%type_pkg[qt]-qtbase-dev-tools".

For Qt6 projects built using cmake, the tools qt-cmake or
qt-configure-module in the "qt67-%type_pkg[qt]-qtbase-dev-tools" package
will configure your project.

If you need to manually find the headers and libraries, you
need your compiler flags to contain: 

	-F%p/lib/qt67-%type_pkg[qt]/lib

	or this:

	-I%p/lib/qt67-%type_pkg[qt]/include

...and your linker flags to contain:

	-F%p/lib/qt67-%type_pkg[qt]/lib

	or

	-L%p/lib/qt67-%type_pkg[qt]/lib

In this case, it's still a good idea to set your PATH to contain
"%p/lib/qt67-%type_pkg[qt]/bin" as well.
<<
DescPackaging: <<
We follow Ubuntu's lead in using the separate tarballs and separate most
of the packages the same way they do.
<<
<<
# End Info4
