Info3: <<
Package: moosex-nonmoose-pm%type_pkg[perl]
Version: 0.26
Revision: 2
Depends: <<
  test-fatal-pm,
  module-runtime-pm%type_pkg[perl],
  moose-pm%type_pkg[perl],
  moosex-globref-pm%type_pkg[perl],
  moosex-insideout-pm%type_pkg[perl],
  perl%type_pkg[perl]-core,
<<
BuildDepends: <<
  test-unit-lite-pm%type_pkg[perl],
<<
Source: mirror:cpan:authors/id/D/DO/DOY/MooseX-NonMoose-%v.tar.gz
Source-MD5: 8a226451ba312c21a27376741c302f47
Type: perl (5.16.2 5.18.2)
Distribution: <<
	(%type_pkg[perl] = 5162) 10.9,
	(%type_pkg[perl] = 5162) 10.10,
	(%type_pkg[perl] = 5162) 10.11,
	(%type_pkg[perl] = 5162) 10.12
<<
UpdatePOD: true
DocFiles: Changes README
InstallScript: <<
  %{default_script}
  mv %i/share/man %i/lib/perl5/%type_raw[perl]
<<
Description: Easy subclassing of non-Moose classes
DescDetail: <<
MooseX::NonMoose allows for easily subclassing non-Moose classes with
Moose, taking care of the annoying details connected with doing this,
such as setting up proper inheritance from Moose::Object and
installing (and inlining, at make_immutable time) a constructor that
makes sure things like BUILD methods are called. It tries to be as
non-intrusive as possible - when this module is used, inheriting from
non-Moose classes and inheriting from Moose classes should work
identically, aside from the few caveats mentioned below. One of the
goals of this module is that including it in a Moose::Exporter-based
package used across an entire application should be possible, without
interfering with classes that only inherit from Moose modules, or even
classes that don't inherit from anything at all.
<<
License: Artistic
Maintainer: Jesse Alama <jesse.alama@gmail.com>
Homepage: http://search.cpan.org/dist/MooseX-Traits/
<<
