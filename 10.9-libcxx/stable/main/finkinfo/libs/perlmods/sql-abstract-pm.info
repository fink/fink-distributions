Info2: <<
Package: sql-abstract-pm%type_pkg[perl]
Version: 1.84
Revision: 1
Source: mirror:cpan:authors/id/I/IL/ILMARI/SQL-Abstract-%v.tar.gz
Source-MD5: 9c76c34edff83ccc6f3c51a67aa18d61
BuildDepends: <<
	test-deep-pm%type_pkg[perl],
	test-exception-pm,
	test-warn-pm
<<
Depends: <<
	class-accessor-grouped-pm%type_pkg[perl] (>= 0.10005),
	hash-merge-pm%type_pkg[perl],
	getopt-long-descriptive-pm%type_pkg[perl] (>= 0.091),
	moo-pm%type_pkg[perl] (>= 2.000001),
	mro-compat-pm%type_pkg[perl] (>= 0.12),
	perl%type_pkg[perl]-core
<<
Type: perl (5.16.2 5.18.2)
Distribution: <<
	(%type_pkg[perl] = 5162) 10.9,
	(%type_pkg[perl] = 5162) 10.10,
	(%type_pkg[perl] = 5162) 10.11,
	(%type_pkg[perl] = 5162) 10.12
<<
UpdatePOD: true
PatchScript: <<
	tail -n 7 lib/SQL/Abstract.pm > LICENSE
<<
# TestDepends: dbix-class-pm%type_pkg[perl] ... not yet in fink
InstallScript: <<
	%{default_script}
	mv %i/share/man %i/lib/perl5/%type_raw[perl]
<<
DocFiles: Changes LICENSE
Description: Generate SQL from Perl data structures
DescDetail: <<
  This module was inspired by the excellent DBIx::Abstract. However, in
  using that module I found that what I really wanted to do was generate
  SQL, but still retain complete control over my statement handles and use
  the DBI interface. So, I set out to create an abstract SQL generation
  module.
<<
DescPackaging: <<
	Former Maintainer: degraw <degraw@users.sourceforge.net>
<<
License: Artistic/GPL
Maintainer: Daniel Macks <dmacks@netspace.org>
Homepage: http://search.cpan.org/dist/SQL-Abstract
<<
