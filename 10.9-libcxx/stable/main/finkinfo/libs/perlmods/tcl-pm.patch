diff -Nurd Tcl-1.05.orig/Tcl.pm Tcl-1.05/Tcl.pm
--- Tcl-1.05.orig/Tcl.pm	2016-06-28 13:02:41.000000000 -0400
+++ Tcl-1.05/Tcl.pm	2018-04-12 02:24:13.000000000 -0400
@@ -78,7 +78,7 @@
 
 =item $interp->CreateSlave (NAME, SAFE)
 
-Invoke I<Tcl_CreateSlave> on the interpeter.  Name is arbitrary.
+Invoke I<Tcl_CreateSlave> on the interpreter.  Name is arbitrary.
 The safe variable, if true, creates a safe sandbox interpreter.
  See: http://www.tcl.tk/software/plugin/safetcl.html
       http://www.tcl.tk/man/tcl8.4/TclCmd/safe.htm
@@ -130,7 +130,7 @@
 2.  All references to scalars will be substituted with names of Tcl variables
 transformed appropriately.
 
-These first two items allows one to write and expect it to work properly such
+These first two items allow one to write and expect it to work properly such
 code as:
 
   my $r = 'aaaa';
@@ -388,7 +388,7 @@
     $DL_PATH = $ENV{PERL_TCL_DL_PATH} || $ENV{PERL_TCL_DLL} || "";
 }
 
-=ignore
+=for ignore
 sub Tcl::seek_tkkit {
     # print STDERR "wohaaa!\n";
     unless ($DL_PATH) {
diff -Nurd Tcl-1.05.orig/Tcl.xs Tcl-1.05/Tcl.xs
--- Tcl-1.05.orig/Tcl.xs	2016-06-28 12:48:16.000000000 -0400
+++ Tcl-1.05/Tcl.xs	2018-04-12 02:28:50.000000000 -0400
@@ -1056,7 +1056,7 @@
 	/* sv_mortalcopy here prevents stringifying script - necessary ?? */
 	cscript = SvPV(sv_mortalcopy(script), length);
 	if (Tcl_EvalEx(interp, cscript, length, flags) != TCL_OK) {
-	    croak(Tcl_GetStringResult(interp));
+	    croak("%s", Tcl_GetStringResult(interp));
 	}
 	prepare_Tcl_result(aTHX_ interp, "Tcl::Eval");
 	SPAGAIN;
@@ -1119,7 +1119,7 @@
 	PUTBACK;
 	Tcl_ResetResult(interp);
 	if (Tcl_EvalFile(interp, filename) != TCL_OK) {
-	    croak(Tcl_GetStringResult(interp));
+	    croak("%s", Tcl_GetStringResult(interp));
 	}
 	prepare_Tcl_result(aTHX_ interp, "Tcl::EvalFile");
 	SPAGAIN;
@@ -1144,7 +1144,7 @@
 	    {
 		Tcl_ResetResult(interp);
 		if (Tcl_Eval(interp, s) != TCL_OK)
-		    croak(Tcl_GetStringResult(interp));
+		    croak("%s", Tcl_GetStringResult(interp));
 		append = 0;
 	    }
 	}
@@ -1278,7 +1278,7 @@
 	    }
 
 	    if (result != TCL_OK) {
-		croak(Tcl_GetStringResult(interp));
+		croak("%s", Tcl_GetStringResult(interp));
 	    }
 	    prepare_Tcl_result(aTHX_ interp, "Tcl::invoke");
 
@@ -1345,7 +1345,7 @@
 	    }
 
 	    if (result != TCL_OK) {
-		croak(Tcl_GetStringResult(interp));
+		croak("%s", Tcl_GetStringResult(interp));
 	    }
 	    prepare_Tcl_result(aTHX_ interp, "Tcl::icall");
 
@@ -1420,7 +1420,7 @@
     CODE:
 	if (!initialized) { return; }
 	if (tclKit_AppInit(interp) != TCL_OK) {
-	    croak(Tcl_GetStringResult(interp));
+	    croak("%s", Tcl_GetStringResult(interp));
 	}
 
 #ifdef HAVE_DDEINIT
diff -Nurd Tcl-1.05.orig/t/info.t Tcl-1.05/t/info.t
--- Tcl-1.05.orig/t/info.t	2016-06-28 12:48:16.000000000 -0400
+++ Tcl-1.05/t/info.t	2018-04-12 02:23:39.000000000 -0400
@@ -7,17 +7,22 @@
 
 use Tcl;
 use File::Spec::Functions;
+use File::Which;
 
 my $tcl = Tcl->new;
 
 ok($tcl);
+my $interp = $^X;
+if (!file_name_is_absolute($interp)) {
+    $interp = which($interp);
+}
 if ($^O eq 'cygwin') {
     my $cpath = $tcl->Eval("info nameofexecutable");
     $cpath = `cygpath -u '$cpath'`;
     chomp($cpath);
-    ok($cpath, canonpath($^X));
+    ok($cpath, canonpath($interp));
 } else {
-    ok(canonpath($tcl->Eval("info nameofexecutable")), canonpath($^X));
+    ok(canonpath($tcl->Eval("info nameofexecutable")), canonpath($interp));
 }
 ok($tcl->Eval("info exists tcl_platform"), 1);
 
