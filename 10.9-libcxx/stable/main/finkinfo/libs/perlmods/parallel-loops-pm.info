Info3: <<
Package: parallel-loops-pm%type_pkg[perl]
Version: 0.07
Revision: 1
Source: mirror:cpan:authors/id/P/PM/PMORCH/Parallel-Loops-%v.tar.gz
Source-MD5: 4d69657e5a8dce227d75588745f428bc
Type: perl (5.16.2 5.18.2)
Distribution: <<
	(%type_pkg[perl] = 5162) 10.9,
	(%type_pkg[perl] = 5162) 10.10,
	(%type_pkg[perl] = 5162) 10.11,
	(%type_pkg[perl] = 5162) 10.12
<<
UpdatePOD: true
DocFiles: Changes README
InstallScript: <<
  %{default_script}
  mv %i/share/man %i/lib/perl5/%type_raw[perl]
<<
Depends: <<
  parallel-forkmanager-pm%type_pkg[perl],
<<
Description: Parallel loops
DescDetail: <<
Often a loop performs calculations where each iteration of the loop
does not depend on the previous iteration, and the iterations really
could be carried out in any order.

This module allows you to run such loops in parallel using all the
CPUs at your disposal.

Return values are automatically transfered from children to parents
via %hashes or @arrays, that have explicitly been configured for that
sort of sharing via $pl->share(). Hashes will transfer keys that are
set in children (but not cleared or unset), and elements that are
pushed to @arrays in children are pushed to the parent @array too (but
note that the order is not guaranteed to be the same as it would have
been if done all in one process, since there is no way of knowing
which child would finish first!)

If you can see past the slightly awkward syntax, you're basically
getting foreach and while loops that can run in parallel without
having to bother with fork, pipes, signals etc. This is all handled
for you by this module.
<<
License: Artistic
Maintainer: Jesse Alama <jesse.alama@gmail.com>
Homepage: http://search.cpan.org/dist/Parallel-Loops/
<<
