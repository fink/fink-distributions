Info2: <<
Package: perl-tags-pm%type_pkg[perl]
Version: 0.28
Revision: 103
Description: Generate Ctags-style tags for Perl source
License: Artistic
Maintainer: Steve Huff <shuff@vecna.org>
Type: perl (5.16.2 5.18.2)
Distribution: <<
	(%type_pkg[perl] = 5162) 10.9,
	(%type_pkg[perl] = 5162) 10.10,
	(%type_pkg[perl] = 5162) 10.11,
	(%type_pkg[perl] = 5162) 10.12
<<
Source: mirror:cpan:authors/id/O/OS/OSFAMERON/Perl-Tags-%v.tar.gz
Source-MD5: c7db57564db56d3b77488dc0fc0ce7bd
SourceDirectory: Perl-Tags-%v
UpdatePOD: true
DocFiles: README Changes 
BuildDepends: data-dumper-pm%type_pkg[perl]
CompileScript: <<
 PERL_AUTOINSTALL='--skipdeps' %{default_script}
<<
InstallScript: <<
 %{default_script}
 mv %i/share/man %i/lib/perl5/%type_raw[perl]
<<
SplitOff: <<
 Package: %N-bin
 Depends: %N
 Conflicts: %{Ni}5123-bin, %{Ni}5124-bin, %{Ni}5162-bin, %{Ni}5182-bin
 Replaces: %{Ni}5123-bin, %{Ni}5124-bin, %{Ni}5162-bin, %{Ni}5182-bin
 Files: bin
<<
Depends: <<
 module-locate-pm,
 ppi-pm%type_pkg[perl]
<<
DescDetail: <<
 Recursively follows use and require statements, up to a maximum of max_level.

 The implemented tagger, Perl::Tags::Naive, is a more-or-less straight ripoff,
 slightly updated, of the original pltags code, and is rather naive. It should
 be possible to subclass using something like PPI or Text::Balanced, though be
 aware that this is alpha software and the internals are subject to change (so
 get in touch to let me know what you want to do and I'll try to help).

 FEATURES 

 * Recursive, incremental tagging.
 * parses `use_ok`/`require_ok` line from Test::More
<<
DescUsage: <<
 For detailed documentation, `perldoc Perl::Tags`.
<<
Homepage: http://search.cpan.org/dist/Perl-Tags/
<<
