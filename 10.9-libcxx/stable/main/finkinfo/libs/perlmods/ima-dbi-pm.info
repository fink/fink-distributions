Info2: <<
Package: ima-dbi-pm%type_pkg[perl]
Version: 0.34
Revision: 3
###
Depends: dbi-pm%type_pkg[perl] (>= 1.20), class-data-inheritable-pm (>= 0.02), dbix-contextualfetch-pm%type_pkg[perl] (>= 1.00), perl%type_pkg[perl]-core
###
Source: mirror:cpan:authors/id/T/TM/TMTM/Ima-DBI-%v.tar.gz
Source-MD5: 1ccc6eb89ec4beb1b231fc69209b87c6
###
Type: perl (5.16.2 5.18.2)
Distribution: <<
	(%type_pkg[perl] = 5162) 10.9,
	(%type_pkg[perl] = 5162) 10.10,
	(%type_pkg[perl] = 5162) 10.11,
	(%type_pkg[perl] = 5162) 10.12
<<
UpdatePOD: true
###
DocFiles: Changes README INSTALL
InstallScript: <<
  %{default_script}
  mv %i/share/man %i/lib/perl5/%type_raw[perl]
<<
###
Description: Database connection caching and organization
DescDetail: <<
Ima::DBI attempts to organize and facilitate caching and more efficient
use of database connections and statement handles by storing DBI and SQL
information with your class (instead of as seperate objects). This
allows you to pass around just one object without worrying about a trail
of DBI handles behind it.

One of the things I always found annoying about writing large programs
with DBI was making sure that I didn't have duplicate database handles
open. I was also annoyed by the somewhat wasteful nature of the
prepare/execute/finish route I'd tend to go through in my subroutines.
The new DBI->connect_cached and DBI->prepare_cached helped a lot, but I
still had to throw around global datasource, username and password
information.

So, after a while I grew a small library of DBI helper routines and
techniques. Ima::DBI is the culmination of all this, put into a nice(?),
clean(?) class to be inherited from.
<<
###
License: Artistic/GPL
Maintainer: Stephen Butler <stephen.butler@gmail.com>
Homepage: http://search.cpan.org/dist/Ima-DBI
<<
