diff -ruNd tinyxml.orig/CMakeLists.txt tinyxml/CMakeLists.txt
--- tinyxml.orig/CMakeLists.txt	1970-01-01 09:00:00.000000000 +0900
+++ tinyxml/CMakeLists.txt	2015-01-15 14:58:19.000000000 +0900
@@ -0,0 +1,8 @@
+cmake_minimum_required(VERSION 3.1)
+project(TinyXML CXX)
+add_library(tinyxml SHARED tinystr.cpp tinyxml.cpp tinyxmlerror.cpp tinyxmlparser.cpp)
+set_target_properties(tinyxml PROPERTIES VERSION @@VERSION@@ INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib")
+add_executable(xmltest xmltest.cpp tinystr.cpp tinyxml.cpp tinyxmlerror.cpp tinyxmlparser.cpp)
+install(TARGETS tinyxml LIBRARY DESTINATION lib)
+install(FILES tinystr.h tinyxml.h DESTINATION include)
+install(FILES tinyxml.pc DESTINATION lib/pkgconfig)
diff -ruNd tinyxml.orig/tinyxml.cpp tinyxml/tinyxml.cpp
--- tinyxml.orig/tinyxml.cpp	2011-05-14 22:24:57.000000000 -0400
+++ tinyxml/tinyxml.cpp	2021-05-09 18:10:43.000000000 -0400
@@ -57,30 +57,7 @@
 	{
 		unsigned char c = (unsigned char) str[i];
 
-		if (    c == '&' 
-		     && i < ( (int)str.length() - 2 )
-			 && str[i+1] == '#'
-			 && str[i+2] == 'x' )
-		{
-			// Hexadecimal character reference.
-			// Pass through unchanged.
-			// &#xA9;	-- copyright symbol, for example.
-			//
-			// The -1 is a bug fix from Rob Laveaux. It keeps
-			// an overflow from happening if there is no ';'.
-			// There are actually 2 ways to exit this loop -
-			// while fails (error case) and break (semicolon found).
-			// However, there is no mechanism (currently) for
-			// this function to return an error.
-			while ( i<(int)str.length()-1 )
-			{
-				outString->append( str.c_str() + i, 1 );
-				++i;
-				if ( str[i] == ';' )
-					break;
-			}
-		}
-		else if ( c == '&' )
+		if ( c == '&' )
 		{
 			outString->append( entity[0].str, entity[0].strLength );
 			++i;
diff -ruNd tinyxml.orig/tinyxml.pc tinyxml/tinyxml.pc
--- tinyxml.orig/tinyxml.pc	1970-01-01 09:00:00.000000000 +0900
+++ tinyxml/tinyxml.pc	2015-01-10 22:27:51.000000000 +0900
@@ -0,0 +1,10 @@
+prefix=@@PREFIX@@
+exec_prefix=${prefix}
+libdir=${exec_prefix}/lib
+includedir=${prefix}/include
+
+Name: TinyXml
+Description: simple, small, C++ XML parser
+Version: @@VERSION@@
+Libs: -L${libdir} -ltinyxml
+Cflags: -I${includedir}
diff -ruNd tinyxml.orig/xmltest.cpp tinyxml/xmltest.cpp
--- tinyxml.orig/xmltest.cpp	2011-05-14 22:24:57.000000000 -0400
+++ tinyxml/xmltest.cpp	2021-05-09 18:10:43.000000000 -0400
@@ -1366,6 +1366,16 @@
 		}*/
 	}
 
+	#ifdef TIXML_USE_STL
+	{
+		TiXmlDocument xml;
+		xml.Parse("<foo>foo&amp;#xa+bar</foo>");
+		std::string str;
+		str << xml;
+		XmlTest( "Entity escaping", "<foo>foo&amp;#xa+bar</foo>", str.c_str() );
+	}
+	#endif
+
 	/*  1417717 experiment
 	{
 		TiXmlDocument xml;
