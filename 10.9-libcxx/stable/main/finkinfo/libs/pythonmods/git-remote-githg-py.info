# -*- coding: ascii; tab-width: 4 -*-
Info2: <<
Package: git-remote-githg-py%type_pkg[python]
Epoch: 1
Version: 0.3
Revision: 1
Type: python (2.7)
Description: Access hg repos as git remotes
DescDetail: <<
	This is the git-remote-hg helper from git.
	It's renamed to git-remote-githg to avoid conflicting with
	the git-remote-hg package. This one requires only git and hg,
	not hg-git-py.
<<
DescUsage: <<
	Clone a mercurial repo with:
	git clone githg::/path/to/mercurial/repo/
	and then use normal git commands to interact with it.
	
	If you want to switch to hg-git compatibility mode:
	git config --global remote-hg.hg-git-compat true

	git:
	Sensible defaults for git.
	hg bookmarks are exported as git branches, hg branches are
	prefixed with 'branches/', HEAD is a special case.

	hg:
	Emulate hg-git.
	Only hg bookmarks are exported as git branches.
	Commits are modified to preserve hg information and allow
	bidirectionality.
<<
Maintainer: Daniel Johnson <daniel@daniel-johnson.org>
License: GPL
Homepage: https://github.com/fingolfin/git-remote-hg

Source: https://codeload.github.com/fingolfin/git-remote-hg/tar.gz/v%v
SourceRename: git-remote-hg-%v.tar.gz
Source-Checksum: SHA256(5dad3237b79bac2b53e7d3a40621303c1778aed667c963d155713c7d3389f16d)

Depends: <<
	git (>= 1.9.3-1),
	mercurial-py%type_pkg[python] (>= 3.2.1-1),
	python%type_pkg[python]
<<
BuildDepends: fink (>= 0.24.12), asciidoc, asciidoc-a2x

CompileScript: <<
	perl -pi -e 's|/usr/bin/env python2|%p/bin/python%type_raw[python]|' git-remote-hg
	a2x -d manpage -f manpage doc/git-remote-hg.txt
<<

InstallScript: <<
	mkdir -p %i/bin
	mv git-remote-hg %i/bin/git-remote-githg-py%type_pkg[python]
	mkdir -p %i/share/man/man1
	mv doc/git-remote-hg.1 %i/share/man/man1/git-remote-githg-py%type_pkg[python].1
<<

PostInstScript: <<
	update-alternatives --install %p/bin/git-remote-githg git-remote-githg %p/bin/git-remote-githg-py%type_pkg[python] %type_pkg[python] --slave %p/share/man/man1/git-remote-githg-py.1 git-remote-githg-py.1 %p/share/man/man1/git-remote-githg-py%type_pkg[python].1
<<

PreRmScript: <<
	if [ $1 != "upgrade" ]; then
		update-alternatives --remove git-remote-githg %p/bin/git-remote-githg-py%type_pkg[python]
	fi
<<

DocFiles: LICENSE README.asciidoc
<<
