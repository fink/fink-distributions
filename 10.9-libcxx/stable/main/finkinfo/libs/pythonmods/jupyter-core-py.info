# -*- coding: ascii; tab-width: 4; x-counterpart: jupyter-core-py.patch -*-
Info2: <<

Package: jupyter-core-py%type_pkg[python]
Version: 4.4.0
Revision: 1
Maintainer: Derek Homeier <dhomeie@gwdg.de>
License: BSD
Type: python (2.7 3.5 3.6 3.7)
Homepage:https://pypi.org/project/jupyter_core

Source: https://files.pythonhosted.org/packages/source/j/jupyter_core/jupyter_core-%v.tar.gz
Source-MD5: 7829fc07884ed98459e170f217e2a5ba
PatchFile: %{ni}.patch
PatchFile-MD5: bf626da785bafbeb90290252e818bbec

Depends: <<
    python%type_pkg[python]-shlibs,
    traitlets-py%type_pkg[python] (>= 4.2.1-1)
<<
BuildDepends: <<
    python%type_pkg[python],
    setuptools-tng-py%type_pkg[python],
    sphinx-py%type_pkg[python] (>= 1.6.2-1),
    sphinxcontrib-github-alt-py%type_pkg[python]
<<

Description: Web-based interactive environment for Jupyter

DescDetail: <<
The Jupyter Notebook is a web application that allows you to create
and share documents that contain live code, equations, visualizations,
and explanatory text. The Notebook has support for multiple
programming languages, sharing, and interactive widgets.
Call `jupyter -h` for a list of available subcommands.
<<

DescPort: <<
2 test failures on non-implemented command 'witness'
This is not the Notebook/IPython application itself, but a dependency.
<<

DocFiles: README.md CONTRIBUTING.md COPYING.md PKG-INFO docs/_build/html

CompileScript: <<
    %p/bin/python%type_raw[python] setup.py build
    make -C docs LANG=en_US.UTF-8 PYTHONPATH=%b/build/lib PYTHON=%p/bin/python%type_raw[python] SPHINXBUILD=%p/bin/sphinx-build%type_raw[python] html
<<

InfoTest: <<
    TestDepends: <<
        pytest-py%type_pkg[python],
        ipykernel-py%type_pkg[python]
    <<
    TestScript: <<
        #!/bin/bash -ev
        # disabling two tests since PYTHONPATH setting is not forwarded to `Popen('%p/bin/python%type_raw[python]', ...)`
        cd build
        PYTHONPATH=lib %p/bin/pytest-%type_raw[python] ../jupyter_core/tests -k 'not test_not_on_path and not test_path_priority' || exit 2
    <<
    TestSuiteSize: small
<<

InstallScript: <<
    #!/bin/bash -ev
    find build jupyter_core  -name __pycache__ -or -name '*.py[oc]' -exec rm -r {} \;
    %p/bin/python%type_raw[python] setup.py install --root=%d
    for file in %i/bin/*; do
        echo mv ${file}{,-py%type_pkg[python]}
        mv ${file}{,-py%type_pkg[python]}
    done
<<

PostInstScript: <<
    # Remove the old if they exist
    update-alternatives --auto jupyter

    # Now the new setup
    update-alternatives --verbose --install %p/bin/jupyter jupyter %p/bin/jupyter-py%type_pkg[python] %type_pkg[python] \
                        --slave %p/bin/jupyter-migrate jupyter-migrate %p/bin/jupyter-migrate-py%type_pkg[python]
    echo "The scripts 'jupyter' and 'jupyter-migrate' installed in %p/bin/ are"
    echo "symlinks automatically updated by the update-alternatives utility."
    echo "If you install multiple flavours of jupyter-core, the symlinks"
    echo "will point to the higher flavour by default."
    echo "You can inspect the links by running:"
    echo "  update-alternatives --list jupyter"
    echo "  update-alternatives --display jupyter"
<<

PreRmScript: <<
    if [ $1 != "upgrade" ]; then
        update-alternatives --verbose --remove jupyter %p/bin/jupyter-py%type_pkg[python]
    else
        echo "Do not remove during upgrade"
    fi
<<

# Info2
<<
