# -*- coding: ascii; tab-width: 4 -*-
Info2: <<
Package: sortedcontainers-py%type_pkg[python]
Version: 2.4.0
Revision: 1
Distribution: <<
	(%type_pkg[python] = 34 ) 10.9,
	(%type_pkg[python] = 34 ) 10.10,
	(%type_pkg[python] = 34 ) 10.11,
	(%type_pkg[python] = 34 ) 10.12,
	(%type_pkg[python] = 34 ) 10.13,
	(%type_pkg[python] = 34 ) 10.14,
	(%type_pkg[python] = 34 ) 10.14.5,
	(%type_pkg[python] = 34 ) 10.15,
	(%type_pkg[python] = 35 ) 10.9,
	(%type_pkg[python] = 35 ) 10.10,
	(%type_pkg[python] = 35 ) 10.11,
	(%type_pkg[python] = 35 ) 10.12,
	(%type_pkg[python] = 35 ) 10.13,
	(%type_pkg[python] = 35 ) 10.14,
	(%type_pkg[python] = 35 ) 10.14.5,
	(%type_pkg[python] = 35 ) 10.15,
	(%type_pkg[python] = 36 ) 10.9,
	(%type_pkg[python] = 36 ) 10.10,
	(%type_pkg[python] = 36 ) 10.11,
	(%type_pkg[python] = 36 ) 10.12,
	(%type_pkg[python] = 36 ) 10.13,
	(%type_pkg[python] = 36 ) 10.14,
	(%type_pkg[python] = 36 ) 10.14.5,
	(%type_pkg[python] = 36 ) 10.15
<<
Type: python (2.7 3.4 3.5 3.6 3.7 3.8 3.9 3.10)
Description: Sorted Containers (list, dict, set)
License: BSD
# Free to edit and take over
Maintainer: Hanspeter Niederstrasser <nieder@users.sourceforge.net>

Homepage: https://pypi.org/project/sortedcontainers
Source: https://files.pythonhosted.org/packages/source/s/sortedcontainers/sortedcontainers-%v.tar.gz
Source-Checksum: SHA256(25caa5a06cc30b6b83d11423433f65d1f9d76c4c6a0c90e3379eaa43b9bfdb88)

Depends: <<
	python%type_pkg[python]
<<
BuildDepends: setuptools-tng-py%type_pkg[python]

CompileScript: %p/bin/python%type_raw[python] setup.py build

InstallScript: <<
	%p/bin/python%type_raw[python] setup.py install --root=%d
<<
DocFiles: LICENSE README.rst
DescDetail: <<
Python's standard library is great until you need a sorted collections
type. Many will attest that you can get really far without one, but the
moment you really need a sorted list, sorted dict, or sorted set, you're
faced with a dozen different implementations, most using C-extensions
without great documentation and benchmarking.

In Python, we can do better. And we can do it in pure-Python!
<<
<<
