# -*- coding: ascii; tab-width: 4 -*-
Info2: <<
Package: semanticversion-py%type_pkg[python]
Version: 2.6.0
Revision: 1
Distribution: <<
	(%type_pkg[python] = 34 ) 10.9,
	(%type_pkg[python] = 34 ) 10.10,
	(%type_pkg[python] = 34 ) 10.11,
	(%type_pkg[python] = 34 ) 10.12,
	(%type_pkg[python] = 34 ) 10.13,
	(%type_pkg[python] = 34 ) 10.14,
	(%type_pkg[python] = 34 ) 10.14.5,
	(%type_pkg[python] = 34 ) 10.15,
	(%type_pkg[python] = 35 ) 10.9,
	(%type_pkg[python] = 35 ) 10.10,
	(%type_pkg[python] = 35 ) 10.11,
	(%type_pkg[python] = 35 ) 10.12,
	(%type_pkg[python] = 35 ) 10.13,
	(%type_pkg[python] = 35 ) 10.14,
	(%type_pkg[python] = 35 ) 10.14.5,
	(%type_pkg[python] = 35 ) 10.15,
	(%type_pkg[python] = 36 ) 10.9,
	(%type_pkg[python] = 36 ) 10.10,
	(%type_pkg[python] = 36 ) 10.11,
	(%type_pkg[python] = 36 ) 10.12,
	(%type_pkg[python] = 36 ) 10.13,
	(%type_pkg[python] = 36 ) 10.14,
	(%type_pkg[python] = 36 ) 10.14.5,
	(%type_pkg[python] = 36 ) 10.15
<<
Type: python (2.7 3.4 3.5 3.6 3.7)

Description: Python library implementing the SemVer scheme
DescDetail: <<
This small python library provides a few tools to handle 'SemVer' in Python.
It follows strictly the 2.0.0 version of the SemVer scheme. Use as

import semantic_version
v = semantic_version.Version('0.1.1-rc1')
<<
Maintainer: Derek Homeier <dhomeie@gwdg.de>
License: OSI-Approved
Homepage: https://pypi.org/project/semantic_version

#Source: https://files.pythonhosted.org/packages/source/s/semantic_version/semantic_version-%v.tar.gz
#Source-Checksum: SHA256(2a4328680073e9b243667b201119772aefc5fc63ae32398d6afafff07c4f54c0)
# Sources with tests/
Source: https://github.com/rbarrois/python-semanticversion/archive/v%v.tar.gz
Source-Checksum: SHA256(110d9c75dc9670a188ab820503c6b40ea4ab3f1450a0aee5a90a24fd60aef358)
SourceRename: semanticversion-%v.tar.gz
SourceDirectory: python-semanticversion-%v

Depends: python%type_pkg[python]
BuildDepends: fink (>= 0.24.12), setuptools-tng-py%type_pkg[python]
Enhances: django-py%type_pkg[python]

PatchScript: perl -pi.bak -e 's/(    def test_serialization)/    \@unittest.skipUnless(django.VERSION[0] < 2, "Field._get_val_from_obj removed in Django20")\n$1/;' tests/test_django.py

CompileScript: %p/bin/python%type_raw[python] setup.py build

InfoTest: <<
    TestDepends: django-py%type_pkg[python]
    TestScript: %p/bin/python%type_raw[python] setup.py test || exit 2
<<

InstallScript: %p/bin/python%type_raw[python] setup.py install --root=%d

DescPort:<<
Django support should work with 1.11 and 2.1, but two tests would fail against
2.x with call to deprecated method.
<<

DocFiles: CREDITS LICENSE README.rst ChangeLog docs/reference.rst docs/django.rst
# Info2
<<
