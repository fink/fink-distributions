Info2: <<

Package: markupsafe-py%type_pkg[python]
Version: 1.1.1

Revision: 1
Homepage: https://pypi.org/project/MarkupSafe
Maintainer: None <fink-devel@lists.sourceforge.net>
Type: python (2.7 3.4 3.5 3.6 3.7 3.8)
Depends: python%type_pkg[python], beaker-py%type_pkg[python]
BuildDepends: setuptools-tng-py%type_pkg[python]

Source: https://files.pythonhosted.org/packages/source/M/MarkupSafe/MarkupSafe-%v.tar.gz
Source-Checksum: SHA256(29872e92839765e546828bb7754a68c418d927cd064fd4708fab9fe9c8bb116b)

CompileScript: <<
  python%type_raw[python] setup.py build 
<<
InfoTest: <<
	TestDepends: <<
		pytest-py%type_pkg[python]
	<<
	TestScript: <<
		PYTHONPATH=$(ls -d %b/build/lib.macosx-*-%type_raw[python]) %p/bin/python%type_raw[python] -B -m pytest || exit 2
	<<
<<
InstallScript: <<
  python%type_raw[python] setup.py install --root=%d
<<

DocFiles: <<
  CHANGES.rst
  LICENSE.rst
  README.rst
<<

License: BSD
Description: XML/HTML/XHTML Markup safe string
DescDetail: <<
Implements a unicode subclass that supports HTML strings.

If you want to make an object unicode that is not yet unicode but
don't want to lose the taint information, you can use the soft_unicode
function.

Objects can customize their HTML markup equivalent by overriding the
__html__ function.

Since MarkupSafe 0.10 there is now also a separate escape function
called escape_silent that returns an empty string for None for
consistency with other systems that return empty strings for None when
escaping (for instance Pylons' webhelpers).

If you also want to use this for the escape method of the Markup
object, you can create your own subclass.
<<
DescPackaging: <<
Previous maintainer: Kurt Schwehr <goatbar@users.sourceforge.net>
<<

# Info2
<<
