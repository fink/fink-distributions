# -*- coding: ascii; tab-width: 4 -*-
Info2: <<
Package: dexml-py%type_pkg[python]
Version: 0.5.1
Revision: 1
Distribution: <<
	(%type_pkg[python] = 34 ) 10.9,
	(%type_pkg[python] = 34 ) 10.10,
	(%type_pkg[python] = 34 ) 10.11,
	(%type_pkg[python] = 34 ) 10.12,
	(%type_pkg[python] = 34 ) 10.13,
	(%type_pkg[python] = 34 ) 10.14,
	(%type_pkg[python] = 34 ) 10.14.5,
	(%type_pkg[python] = 34 ) 10.15,
	(%type_pkg[python] = 35 ) 10.9,
	(%type_pkg[python] = 35 ) 10.10,
	(%type_pkg[python] = 35 ) 10.11,
	(%type_pkg[python] = 35 ) 10.12,
	(%type_pkg[python] = 35 ) 10.13,
	(%type_pkg[python] = 35 ) 10.14,
	(%type_pkg[python] = 35 ) 10.14.5,
	(%type_pkg[python] = 35 ) 10.15,
	(%type_pkg[python] = 36 ) 10.9,
	(%type_pkg[python] = 36 ) 10.10,
	(%type_pkg[python] = 36 ) 10.11,
	(%type_pkg[python] = 36 ) 10.12,
	(%type_pkg[python] = 36 ) 10.13,
	(%type_pkg[python] = 36 ) 10.14,
	(%type_pkg[python] = 36 ) 10.14.5,
	(%type_pkg[python] = 36 ) 10.15
<<

Type: python (2.7 3.4 3.5 3.6 3.7 3.8)

Description: Object-XML mapper for Python
DescDetail: <<
	The dexml module takes the obvious mapping between XML tags and Python
	objects and lets you capture that as cleanly as possible. Loosely
	inspired by Django's ORM, you write simple class definitions to define
	the expected structure of your XML document.
<<
Maintainer: Daniel Johnson <daniel@daniel-johnson.org>
License: BSD
Homepage: https://pypi.org/project/dexml

Source: https://files.pythonhosted.org/packages/source/d/dexml/dexml-%v.tar.gz
Source-Checksum: SHA256(6ba83883ead5cc74ce8198daecc657b60bf9cdb3887b484a92dcde55c10e2cdf)

Depends: python%type_pkg[python]
BuildDepends: fink (>= 0.24.12), setuptools-tng-py%type_pkg[python]

PatchScript: <<
	#!/bin/bash -ev
	if [ "%type_pkg[python]" -ge "30" ]; then
		perl -pi -e "s/u'/'/; s/ParseError: /dexml.ParseError: /" dexml/__init__.py
	fi
<<

CompileScript: %p/bin/python%type_raw[python] setup.py build

InfoTest: <<
	TestScript: <<
		#!/bin/bash -ev
		%p/bin/python%type_raw[python] setup.py test || exit 2
		# Clear out .pyc files since they hardcode the build dir.
		# Python >=3.2 puts them in __pycache__.
		rm -rf build/lib/dexml/*.pyc build/lib/dexml/__pycache__
	<<
<<

InstallScript: %p/bin/python%type_raw[python] setup.py install --root=%d

DocFiles: ChangeLog.txt LICENSE.txt PKG-INFO README.rst
<<
