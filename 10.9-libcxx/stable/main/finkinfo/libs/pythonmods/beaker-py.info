Info2: <<

Package: beaker-py%type_pkg[python]
Version: 1.11.0

Revision: 1
Homepage: https://pypi.org/project/Beaker/
Maintainer: None <fink-devel@lists.sourceforge.net>
Type: python (2.7 3.4 3.5 3.6 3.7 3.8)
Depends: python%type_pkg[python]
BuildDepends: setuptools-tng-py%type_pkg[python]

Source: https://files.pythonhosted.org/packages/source/B/Beaker/Beaker-%v.tar.gz
Source-Checksum: SHA256(ad5d1c05027ee3be3a482ea39f8cb70339b41e5d6ace0cb861382754076d187e)

CompileScript: <<
  #!/bin/bash -ev
  python%type_raw[python] setup.py build 
<<

InstallScript: <<
  #!/bin/bash -ev
  python%type_raw[python] setup.py install --root=%d
<<

DocFiles: <<
  PKG-INFO
  README.rst
<<

License: BSD
Description: Session and cachine with WSGI middleware
DescDetail: <<
As a general caching library, Beaker can handle storing for various
times any Python object that can be pickled with optional back-ends on
a fine-grained basis.

Beaker was built largely on the code from MyghtyUtils, then refactored
and extended with database support.

Beaker includes Cache and Session WSGI middleware to ease integration
with WSGI capable frameworks, and is automatically used by Pylons.

* Multiple reader/single writer lock system to avoid duplicate
  simultaneous cache creation
* Cache back-ends include dbm, file, memory, memcached, and database
  (Using SQLAlchemy for multiple-db vendor support)
* Signed cookie's to prevent session hijacking/spoofing
* Cookie-only sessions to remove the need for a db or file backend
  (ideal for clustered systems)
* Extensible Container object to support new back-ends
* Cache's can be divided into namespaces (to represent templates,
  objects, etc.) then keyed for different copies
* Create functions for automatic call-backs to create new cache copies
  after expiration
* Fine-grained toggling of back-ends, keys, and expiration per Cache
  object
<<
DescPackaging: <<
Previous maintainer: Kurt Schwehr <goatbar@users.sourceforge.net>
<<

# Info2
<<
