# -*- coding: ascii; tab-width: 4 -*-
Info4: <<

Package: virtualenv-py%type_pkg[python]
Version: 16.7.5

Revision: 1
Homepage: https://virtualenv.pypa.io/
Maintainer: None <fink-devel@lists.sourceforge.net>
Type: python (2.7 3.4 3.5 3.6 3.7 3.8)

Depends: python%type_pkg[python], setuptools-tng-py%type_pkg[python]
BuildDepends: setuptools-tng-py%type_pkg[python], pip-py%type_pkg[python]

Source: https://files.pythonhosted.org/packages/source/v/virtualenv/virtualenv-%v.tar.gz
Source-Checksum: SHA256(f78d81b62d3147396ac33fc9d77579ddc42cc2a98dd9ea38886f616b33bc7fb2)

CompileScript: <<
  #!/bin/bash -ev
  python%type_raw[python] setup.py build 
<<

InstallScript: <<
  #!/bin/bash -ev
  python%type_raw[python] setup.py install --root=%d
  mv %i/bin/virtualenv %i/bin/virtualenv-py%type_pkg[python]
<<

PostInstScript: <<
  # Add --verbose to update-alternatives for debugging
  update-alternatives --verbose --install %p/bin/virtualenv virtualenv-py %p/bin/virtualenv-py%type_pkg[python] %type_pkg[python] 
<<

PreRmScript: <<
  if [ $1 != "upgrade" ]; then
    update-alternatives --verbose --remove virtualenv-py %p/bin/virtualenv-py%type_pkg[python]
  fi
<<

DocFiles: README.rst AUTHORS.txt LICENSE.txt docs

License: OSI-Approved
Description: Virtual Python Environment builder
DescDetail: <<
virtualenv is a tool to create isolated Python environments.

The basic problem being addressed is one of dependencies and versions,
and indirectly permissions. Imagine you have an application that needs
version 1 of LibFoo, but another application requires version 2. How
can you use both these applications? If you install everything into
/usr/lib/python2.7/site-packages (or whatever your platform's standard
location is), it's easy to end up in a situation where you
unintentionally upgrade an application that shouldn't be upgraded.

Or more generally, what if you want to install an application and
leave it be? If an application works, any change in its libraries or
the versions of those libraries can break the application.

Also, what if you can't install packages into the global site-packages
directory? For instance, on a shared host.

In all these cases, virtualenv can help you. It creates an environment
that has its own installation directories, that doesn't share
libraries with other virtualenv environments (and optionally doesn't
access the globally installed libraries either).
<<
DescPackaging: <<
Previous maintainer: Kurt Schwehr <goatbar@users.sourceforge.net>
<<

# Info4
<<
