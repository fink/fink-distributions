# -*- coding: ascii; tab-width: 4 -*-
Info2: <<
Package: gast-py%type_pkg[python]
Version: 0.5.3
Revision: 1
Type: python (2.7 3.6 3.7 3.8 3.9 3.10)
Description: AST that abstracts the Python version

DescDetail: <<
A generic AST to represent Python2 and Python3's Abstract Syntax Tree (AST).
GAST provides a compatibility layer between the AST of various Python versions,
as produced by ast.parse from the standard ast module.

Basic Usage

>>> import ast, gast
>>> code = open('file.py').read()
>>> tree = ast.parse(code)
>>> gtree = gast.ast_to_gast(tree)
>>> ... # process gtree
>>> tree = gast.gast_to_ast(gtree)
>>> ... # do stuff specific to tree

API

gast provides the same API as the ast module. All functions and classes from
the ast module are also available in the gast module, and work accordingly on
the gast tree.

Three notable exceptions:

1. gast.parse directly produces a GAST node. It's equivalent to running
   gast.ast_to_gast on the output of ast.parse.
2. gast.dump dumps the gast common representation, not the original one.
3. gast.gast_to_ast and gast.ast_to_gast can be used to convert
   from one ast to the other, back and forth.
<<

Maintainer: Derek Homeier <dhomeie@gwdg.de>
License: BSD
Homepage: https://github.com/serge-sans-paille/gast/

Source: https://files.pythonhosted.org/packages/source/g/gast/gast-%v.tar.gz
Source-Checksum: SHA256(cfbea25820e653af9c7d1807f659ce0a0a9c64f2439421a7bba4f0983f532dea)

Depends: python%type_pkg[python]

BuildDepends: fink (>= 0.24.12), setuptools-tng-py%type_pkg[python]

CompileScript: %p/bin/python%type_raw[python] setup.py build

# Missing test dep
#InfoTest: <<
#  TestDepends: pytest-py%type_pkg[python], astunparse-py%type_pkg[python]
#  TestScript: %p/bin/python%type_raw[python] -Bm pytest || exit 2
#<<

InstallScript: <<
  %p/bin/python%type_raw[python] setup.py install --root=%d
<<

DocFiles: README.rst LICENSE PKG-INFO

# Info2
<<
