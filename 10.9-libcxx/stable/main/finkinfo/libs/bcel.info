Package: bcel
Version: 5.2
Revision: 34
Description: Byte Code Engineering Library
Type: java
License: BSD
Maintainer: Benjamin Reed <bcel@fink.raccoonfink.com>

Depends: <<
	jakarta-regexp,
	system-java (>= 1.7-1)
<<
BuildDepends: <<
	ant-base (>= 1.8.1-1),
	fink (>= 0.30.2-1),
	fink-mirrors (>= 0.22.1.1-1),
	jakarta-regexp,
	system-java-dev (>= 1.7-1)
<<

Source: mirror:apache:jakarta/%n/source/%n-%v-src.tar.gz
Source-MD5: 905b7e718e30e7ca726530ecf106e532
SourceDirectory: %n-%v
PatchScript: <<
	#!/bin/sh -ev
	perl -pi -e 's,<javac,<javac target="1.7" source="1.7",g' build.xml
	# fix unmappable characters
	for FILE in StackMap Utility StackMapEntry; do
		/usr/bin/iconv -f ISO-8859-1 -t UTF-8 src/java/org/apache/bcel/classfile/$FILE.java > src/java/org/apache/bcel/classfile/$FILE.java.new
		mv src/java/org/apache/bcel/classfile/$FILE.java{.new,}
	done
	for FILE in ObjectType ReferenceType ReturnaddressType; do
		/usr/bin/iconv -f ISO-8859-1 -t UTF-8 src/java/org/apache/bcel/generic/$FILE.java > src/java/org/apache/bcel/generic/$FILE.java.new
		mv src/java/org/apache/bcel/generic/$FILE.java{.new,}
	done
	for FILE in Class2HTML; do
		/usr/bin/iconv -f ISO-8859-1 -t UTF-8 src/java/org/apache/bcel/util/$FILE.java > src/java/org/apache/bcel/util/$FILE.java.new
		mv src/java/org/apache/bcel/util/$FILE.java{.new,}
	done
	for FILE in GraphicalVerifier statics/Pass2Verifier structurals/InstConstraintVisitor; do
		/usr/bin/iconv -f ISO-8859-1 -t UTF-8 src/java/org/apache/bcel/verifier/$FILE.java > src/java/org/apache/bcel/verifier/$FILE.java.new
		mv src/java/org/apache/bcel/verifier/$FILE.java{.new,}
	done
<<

CompileScript: <<
	#!/bin/sh -ex
	mkdir examples
	touch manifest.txt
	ant dist -Dnoget=true
<<

InstallScript: <<
	install -d -m 755 %i/share/doc/%N
	mv dist/docs/* %i/share/doc/%N/
<<
JarFiles: dist/*.jar
DocFiles: dist/*.txt

Homepage: http://jakarta.apache.org/bcel/
DescDetail: <<
The Byte Code Engineering Library is intended to give
users a convenient possibility to analyze, create, and
manipulate (binary) Java class files (those ending
with .class).  Classes are represented by objects
which contain all the symbolic information of the
given class: methods, fields and byte code
instructions, in particular.
<<

