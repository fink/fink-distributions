Package: node-uglify-js
Version: 3.12.8
Revision: 1.1
###
#	pandoc, Can't be installed on arm64 yet
BuildDepends: <<
	fink (>= 0.32),
	brotli,
	help2man,
	gzip,
	nodejs
<<
Suggests: <<
        node-acorn
<<
Conflicts: <<
	node-uglify
<<
Replaces: <<
	node-uglify
<<
###
Source: mirror:debian:/pool/main/u/uglify-js/uglify-js_%v.orig.tar.gz
Source-Checksum: SHA256(f88b59540f57b1eb29a7776883e64c631d60598421ede81efdce6e47dce64c4e)
SourceDirectory: UglifyJS-%v
Source2: mirror:debian:pool/main/u/uglify-js/uglify-js_%v-1.debian.tar.xz
Source2-Checksum: SHA256(1cf939014b906b5c20968f1cd23cb44c2cd953abdaf22154b73dd0c9b517c6e7)
Source2ExtractDir: UglifyJS-%v
###
DocFiles: README.md LICENSE CONTRIBUTING.md
###
CompileScript: <<
mkdir -p debian/js
node bin/uglifyjs --self \
	--mangle \
	--beautify "preamble='// @license magnet:?xt=urn:btih:87f119ba0b429ba17a44b4bffcab33165ebdacc0&dn=freebsd.txt BSD-2-Clause'" --comments /Copyright/ \
	--output debian/js/uglify.js
printf '\n// @license-end\n' >> debian/js/uglify.js
node bin/uglifyjs --self \
	--source-map "base='%b',url='uglify.min.js.map'" \
	--compress --mangle \
	--output debian/js/uglify.min.js
find debian/js -name '*.min.js' -or -name '*.min.js.map' \
	-exec gzip --force --keep -11 -- {} + \
	-exec brotli --force --keep --best --suffix=.brotli -- {} +
NODE_PATH=lib help2man \
	--name="JavaScript parser, mangler/compressor and beautifier toolkit" \
	--no-info \
	--output=debian/uglifyjs.1 \
	bin/uglifyjs
<<
# No tests as it will cause a circdep
#InfoTest: <<
#	TestDepends: <<
#		mocha,
#		node-semver
#	<<
#	TestScript: <<
#NODE_PATH=lib node test/mocha.js \
#	$(if $(DEB_SUITE_EXP),|| true) || exit 2
#	<<
#<<
InstallScript: <<
install -d -m0755 %i/share/nodejs/uglify-js
install -m0644 package.json %i/share/nodejs/uglify-js/
cp -R lib %i/share/nodejs/uglify-js/
cp -R tools %i/share/nodejs/uglify-js/
<<
###
SplitOff: <<
	Package: uglifyjs
	Depends: <<
		%N (= %v-%r),
		nodejs
	<<
	Suggests: <<
		node-acorn
	<<
	Provides: <<
		uglifyjs
	<<
	Conflicts: <<
		node-uglify
	<<
	InstallScript: <<
install -d -m0755 %i/share/nodejs/uglify-js
cp -R bin %i/share/nodejs/uglify-js/

install -d -m0755 %i/bin
ln -s %p/share/nodejs/uglify-js/bin/uglifyjs %i/bin/uglifyjs

install -d -m0755 %i/share/man/man1
install -m0644 debian/uglifyjs.1 %i/share/man/man1/
	<<
	Description: JS parser, mangler/compressor and beautifier
	DescDetail: <<
UglifyJS is a JavaScript compressor/minifier written in JavaScript. It
also contains tools that allow one to automate working with JavaScript
code:
.
 * A parser which produces an abstract syntax tree (AST) from
   JavaScript code.
 * A code generator which outputs JavaScript code from an AST, also
   providing the option to get a source map.
 * A compressor (optimizer) - it uses the transformer API to optimize
   an AST into a smaller one.
 * A mangler - reduce names of local variables to (usually)
   single-letters.
 * A scope analyzer, which is a tool that augments the AST with
   information about where variables are defined/referenced etc.
 * A tree walker - a simple API allowing you to do something on every
   node in the AST.
 * A tree transformer - another API intended to transform the tree.
.
All the above utilities and APIs are defined in ~6500 lines of code
(except for the effective generation of the source-map, which is
handled by the source-map module). Compared to alternatives, UglifyJS
is pretty small.
.
This package provides the command-line tool uglifyjs.
	<<
<<
SplitOff2: <<
	Package: libjs-uglify-js
	Recommends: <<
		javascript-common
	<<
	InstallScript: <<
install -d -m0755 %i/share/javascript/uglify-js
cp -R debian/js/* %i/share/javascript/uglify-js/
	<<
	Description: JS parser, mangler/compressor and beautifier
	DescDetail: <<
UglifyJS is a JavaScript compressor/minifier written in JavaScript. It
also contains tools that allow one to automate working with JavaScript
code:
.
 * A parser which produces an abstract syntax tree (AST) from
   JavaScript code.
 * A code generator which outputs JavaScript code from an AST, also
   providing the option to get a source map.
 * A compressor (optimizer) - it uses the transformer API to optimize
   an AST into a smaller one.
 * A mangler - reduce names of local variables to (usually)
   single-letters.
 * A scope analyzer, which is a tool that augments the AST with
   information about where variables are defined/referenced etc.
 * A tree walker - a simple API allowing you to do something on every
   node in the AST.
 * A tree transformer - another API intended to transform the tree.
.
All the above utilities and APIs are defined in ~6500 lines of code
(except for the effective generation of the source-map, which is
handled by the source-map module). Compared to alternatives, UglifyJS
is pretty small.
.
This package provides UglifyJS library directly usable in web browsers.
	<<
<<
###
Description: JS parser, mangler/compressor and beautifier
DescDetail: <<
UglifyJS is a JavaScript compressor/minifier written in JavaScript. It
also contains tools that allow one to automate working with JavaScript
code:
.
 * A parser which produces an abstract syntax tree (AST) from
   JavaScript code.
 * A code generator which outputs JavaScript code from an AST, also
   providing the option to get a source map.
 * A compressor (optimizer) - it uses the transformer API to optimize
   an AST into a smaller one.
 * A mangler - reduce names of local variables to (usually)
   single-letters.
 * A scope analyzer, which is a tool that augments the AST with
   information about where variables are defined/referenced etc.
 * A tree walker - a simple API allowing you to do something on every
   node in the AST.
 * A tree transformer - another API intended to transform the tree.
.
All the above utilities and APIs are defined in ~6500 lines of code
(except for the effective generation of the source-map, which is
handled by the source-map module). Compared to alternatives, UglifyJS
is pretty small.
<<
###
License: BSD
Homepage: https://github.com/mishoo/UglifyJS
Maintainer: Justin F. Hallett <thesin@users.sourceforge.net>
