Package: node-wcwidth.js
Version: 1.0.0
Revision: 1.1.1
###
BuildDepends: <<
	fink (>= 0.32)
<<
Depends: <<
	node-defaults,
	nodejs
<<
###
Source: mirror:debian:/pool/main/n/%n/%n_%v.orig.tar.gz
Source-Checksum: SHA256(1cb07e3eed952004782178c73f3bf5334e821d2c0b0fedc8dac12d9e894dcdd2)
SourceDirectory: wcwidth.js-%v
Source2: mirror:debian:pool/main/n/%n/%n_%v-1.1.debian.tar.xz
Source2-Checksum: SHA256(db2848d3d103eee6fd2619e964b4f3227ddc9d63ac8e7ccc6d74e16a264114e7)
Source2ExtractDir: wcwidth.js-%v
###
DocFiles: README.md LICENSE.md
###
CompileScript: <<
echo
<<
# No tests as it will cause a circdep
#InfoTest: <<
#	TestDepends: <<
#		node-tape
#	<<
#	TestScript: <<
#tape test/*.js || exit 2
#	<<
#<<
InstallScript: <<
install -d -m0755 %i/share/nodejs/wcwidth.js
install -m0644 index.js %i/share/nodejs/wcwidth.js/
install -m0644 combining.js %i/share/nodejs/wcwidth.js/
install -m0644 package.json %i/share/nodejs/wcwidth.js/
<<
###
Description: Javascript porting of C's wcwidth()
DescDetail: <<
wcwidth.js is a simple javascript porting of wcwidth()
implemented in C by Markus Kuhn.
.
wcwidth() and its string version, wcswidth() are defined by
IEEE Std 1002.1-2001, a.k.a. POSIX.1-2001, and return the
number of columns used to represent a wide character and
string on fixed-width output devices like terminals.
Markus's implementation assumes wide characters to be
encoded in ISO 10646, which is almost true for JavaScript;
almost because JavaScript uses UCS-2 and has problems
with surrogate pairs. wcwidth.js converts surrogate pairs
to Unicode code points to handle them correctly.
.
Node.js is an event-based server-side JavaScript engine.
<<
###
License: Public Domain
Homepage: http://code.woong.org/wcwidth.js
Maintainer: Justin F. Hallett <thesin@users.sourceforge.net>
