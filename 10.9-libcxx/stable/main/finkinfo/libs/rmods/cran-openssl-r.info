Info2: <<

Package: cran-openssl-r%type_pkg[rversion]
Distribution: <<
	(%type_pkg[rversion] = 31 ) 10.9,
	(%type_pkg[rversion] = 31 ) 10.10,
	(%type_pkg[rversion] = 31 ) 10.11,
	(%type_pkg[rversion] = 31 ) 10.12,
	(%type_pkg[rversion] = 32 ) 10.9,
	(%type_pkg[rversion] = 32 ) 10.10,
	(%type_pkg[rversion] = 32 ) 10.11,
	(%type_pkg[rversion] = 32 ) 10.12
<<
Type: rversion (3.4 3.3 3.2 3.1)
Version: 0.9.6
Revision: 1
Description: Encryption, Signatures and Certificates
Homepage: http://cran.r-project.org/web/packages/openssl/index.html
License: BSD
Maintainer: None <fink-devel@lists.sourceforge.net>
Source: http://cran.r-project.org/src/contrib/openssl_%v.tar.gz
Source-MD5: 7ef137929d9dd07db690d35db242ba4b
SourceDirectory: openssl
Depends: <<
	fink (>= 0.27.2),
	r-base%type_pkg[rversion]
<<
BuildDepends: <<
	fink (>= 0.27.2),
	r-base%type_pkg[rversion]-dev
<<
CompileScript: <<
  #!/bin/sh -ev
  export TMPDIR=%b/tmp
  BIN_R=%p/Library/Frameworks/R.framework/Versions/%type_raw[rversion]/Resources/bin/R
  
  pushd ..
  $BIN_R --verbose CMD build --no-build-vignettes openssl
<<
InstallScript: <<
  #!/bin/sh -ev
  BIN_R=%p/Library/Frameworks/R.framework/Versions/%type_raw[rversion]/Resources/bin/R
  
  mkdir -p %i/lib/R/%type_raw[rversion]/site-library
  pushd %b/.. && $BIN_R --verbose CMD INSTALL --library=%i/lib/R/%type_raw[rversion]/site-library openssl
  if (( $(echo "%type_raw[rversion] > 3.3" |bc -l) )); then
	  install_name_tool -id %p/lib/R/%type_raw[rversion]/site-library/openssl/libs/openssl.so %i/lib/R/%type_raw[rversion]/site-library/openssl/libs/openssl.so
  else
	  install_name_tool -id %p/lib/R/%type_raw[rversion]/site-library/openssl/libs/openssl.dylib %i/lib/R/%type_raw[rversion]/site-library/openssl/libs/openssl.dylib
  fi
<<
Shlibs: <<
  ( %type_raw[rversion] >= 3.4 ) %p/lib/R/%type_raw[rversion]/site-library/openssl/libs/openssl.so 0.0.0 %n (>=0.9.6-1)
  ( %type_raw[rversion] << 3.4 ) %p/lib/R/%type_raw[rversion]/site-library/openssl/libs/openssl.dylib 0.0.0 %n (>=0.9.6-1)
<<
DescDetail: <<
Bindings to OpenSSL libssl and libcrypto, plus custom SSH 
pubkey parsers. Supports RSA, DSA and EC curves P-256, 
P-384 and P-521. Cryptographic signatures can either be 
created and verified manually or via x509 certificates. 
AES can be used in cbc, ctr or gcm mode for symmetric 
encryption; RSA for asymmetric (public key) encryption or 
EC for Diffie Hellman. High-level envelope functions combine 
RSA and AES for encrypting arbitrary sized data. Other 
utilities include key generators, hash functions (md5, 
sha1, sha256, etc), base64 encoder, a secure random 
number generator, and 'bignum' math methods for manually 
performing crypto calculations on large multibyte integers.
<<

<<
