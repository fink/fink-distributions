Info2: <<

Package: cran-evtree-r%type_pkg[rversion]
Distribution: <<
	(%type_pkg[rversion] = 31 ) 10.9,
	(%type_pkg[rversion] = 31 ) 10.10,
	(%type_pkg[rversion] = 31 ) 10.11,
	(%type_pkg[rversion] = 31 ) 10.12,
	(%type_pkg[rversion] = 32 ) 10.9,
	(%type_pkg[rversion] = 32 ) 10.10,
	(%type_pkg[rversion] = 32 ) 10.11,
	(%type_pkg[rversion] = 32 ) 10.12
<<
Type: rversion (3.4 3.3 3.2 3.1)
Version: 1.0-5
Revision: 1
Description: Evolutionary Learning
Homepage: https://cran.r-project.org/web/packages/evtree/index.html
License: GPL
Maintainer: None <fink-devel@lists.sourceforge.net>
Source: https://cran.r-project.org/src/contrib/evtree_%v.tar.gz
Source-MD5: cfb63e5259dec0df57492bf11871b912
SourceDirectory: evtree
Depends: <<
	r-base%type_pkg[rversion],
	cran-partykit-r%type_pkg[rversion],
	libgettext8-shlibs
<<
BuildDepends: <<
	fink (>= 0.27.2),
	r-base%type_pkg[rversion]-dev,
	libgettext8-dev
<<
CompileScript: <<
  #!/bin/bash -ev
  export TMPDIR=%b/tmp
  BIN_R=%p/Library/Frameworks/R.framework/Versions/%type_raw[rversion]/Resources/bin/R
  
  pushd ..
  $BIN_R --verbose CMD build --no-build-vignettes evtree
<<
InstallScript: <<
  #!/bin/sh -ev
  BIN_R=%p/Library/Frameworks/R.framework/Versions/%type_raw[rversion]/Resources/bin/R
  
  mkdir -p %i/lib/R/%type_raw[rversion]/site-library
  pushd %b/.. && $BIN_R --verbose CMD INSTALL --library=%i/lib/R/%type_raw[rversion]/site-library evtree
  if [ "%type_num[rversion]" -lt "34" ]; then
	  install_name_tool -id %p/lib/R/%type_raw[rversion]/site-library/evtree/libs/evtree.dylib %i/lib/R/%type_raw[rversion]/site-library/evtree/libs/evtree.dylib
  else
	  install_name_tool -id %p/lib/R/%type_raw[rversion]/site-library/evtree/libs/evtree.so %i/lib/R/%type_raw[rversion]/site-library/evtree/libs/evtree.so
  fi
<<
Shlibs: <<
  ( %type_raw[rversion] >= 3.4 ) %p/lib/R/%type_raw[rversion]/site-library/evtree/libs/evtree.so 0.0.0 %n (>= 1.0-0-1)
  ( %type_raw[rversion] << 3.4 ) %p/lib/R/%type_raw[rversion]/site-library/evtree/libs/evtree.dylib 0.0.0 %n (>= 1.0-0-1)
<<
DescDetail: <<
Commonly used classification and regression tree methods like the
CART algorithm are recursive partitioning methods that build the
model in a forward stepwise search. Although this approach is known
to be an efficient heuristic, the results of recursive tree methods
are only locally optimal, as splits are chosen to maximize homogeneity
at the next step only. An alternative way to search over the parameter
space of trees is to use global optimization methods like evolutionary
algorithms. The evtree package implements an evolutionary algorithm
for learning globally optimal classification and regression trees in R.
CPU and memory-intensive tasks are fully computed in C++ while the
partykit package is leveraged to represent the resulting trees in R,
providing unified infrastructure for summaries, visualizations, and
predictions.
<<
DescPackaging: <<
  R (>= 2.11.0)
<<

<<
