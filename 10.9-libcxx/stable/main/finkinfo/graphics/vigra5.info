Info3: <<
Package: vigra5
# 1.11.0 bumps libN to 11
Version: 1.10.0
Revision: 6
Description: Computer Vision Library
License: OSI-Approved
### free to update and take over
Maintainer: Hanspeter Niederstrasser <nieder@users.sourceforge.net>
Depends: %N-shlibs (= %v-%r)
Conflicts: vigra, vigra4, vigra5, vigra11
Replaces: vigra, vigra4, vigra5, vigra11
BuildDepends: <<
	boost1.68-python27,
	cmake,
	doxygen,
	fftw3,
	fink-buildenv-modules,
	fink-package-precedence,
	hdf5-cpp.200.v1.10,
	hdf5.200.v1.10,
	ilmbase24-dev,
	libjpeg9,
	libopenexr24-dev,
	libpng16,
	libtiff5,
	numpy-py27 (>= 1.10.0-1),
	python27,
	sphinx-py27,
	szip
<<
BuildDependsOnly: True
Source: https://github.com/ukoethe/vigra/releases/download/Version-1-10-0/vigra-%v-src-with-docu.tar.gz
Source-Checksum: SHA256(42d4a361b0bb52fbfdae7e76000698be04dabba77be3f4248d369139fe96a099)
SourceDirectory: vigra-%v
PatchFile: %n.patch
PatchFile-MD5: ba200351051e3b5bad12d762675eba31
SetCC: cc -MD
SetCXX: c++ -MD
SetCXXFLAGS: -ftemplate-depth-1024 -std=c++11
GCC: 4.0
CompileScript: <<
	#!/bin/sh -ev
	. %p/sbin/fink-buildenv-cmake.sh
	mkdir -p finkbuild
	pushd finkbuild
	cmake \
		$FINK_CMAKE_ARGS \
		-DCMAKE_INCLUDE_PATH=%p/include \
		-DCMAKE_LIBRARY_PATH=%p/lib \
		-DPYTHON_EXECUTABLE:FILEPATH=%p/bin/python2.7 \
		-DPYTHON_INCLUDE_PATH:PATH=%p/include/python2.7 \
		-DPYTHON_LIBRARIES:FILEPATH=%p/lib/python2.7/config/libpython2.7.dylib \
		-DWITH_OPENEXR:BOOL=TRUE \
		-DBUILD_SHARED_LIBS=ON \
		-DDOCINSTALL:STRING=share/doc \
		-DWITH_VIGRANUMPY=ON \
		-DBoost_DIR=%p/opt/boost-1_68/include \
		-DBoost_INCLUDE_DIR=%p/opt/boost-1_68/include \
		-DBoost_PYTHON_LIBRARY_RELEASE:FILEPATH=%p/opt/boost-1_68/lib/libboost_python27-mt.dylib \
		-DHDF5_INCLUDE_DIR=%p/opt/hdf5.v1.10/include \
		-DHDF5_CORE_LIBRARY:FILEPATH=%p/opt/hdf5.v1.10/lib/libhdf5.200.dylib \
		-DHDF5_HL_LIBRARY:FILEPATH=%p/opt/hdf5.v1.10/lib/libhdf5_hl.200.dylib \
		..
	make
	popd
	fink-package-precedence --prohibit-bdep=%n --depfile-ext='\.d' .
<<
# make check fails with Xcode >= 6/clang3.5
# http://llvm.org/bugs/show_bug.cgi?id=21083
InfoTest: <<
	TestDepends: <<
		nose-py27
	<<
	TestScript: <<
		#!/bin/sh -ev
		. %p/sbin/fink-buildenv-helper.sh
		# This version-test is broken (string comparison) so
		# testing is activated on xcode-10 and above, but the
		# tests pass for dmacks on 10.13/xcode10.1.
		if [[ "$XCODE_VERSION" <  "6.0" ]]; then
			pushd finkbuild
			make check || exit 2
			make test || exit 2
			popd
			fink-package-precedence --prohibit-bdep=%n --depfile-ext='\.d' .
		else
			echo "Tests disabled for Xcode >= 6.0"
			echo "http://llvm.org/bugs/show_bug.cgi?id=21083"
		fi
	<<
<<
InstallScript: <<
	#!/bin/sh -ev
	pushd finkbuild
	make DESTDIR=%d install
	mv %i/share/doc/vigra %i/share/doc/vigra-%v
	mv %i/share/doc/vigranumpy %i/share/doc/vigranumpy-%v
	popd
<<
DocFiles: LICENSE.txt README.md
SplitOff: <<
	Package: %N-doc
	Files: <<
		share/doc/vigra-%v
		share/doc/vigranumpy-%v
	<<
	Description: Documentation for vigra libraries
<<
SplitOff2: <<
	Package: %N-shlibs
	Depends: <<
		hdf5.200.v1.10-shlibs,
		ilmbase24-shlibs,
		libjpeg9-shlibs,
		libopenexr24-shlibs,
		libpng16-shlibs,
		libtiff5-shlibs,
		szip-shlibs
	<<
	Files: <<
		lib/libvigraimpex.5.1.10.0.dylib
		lib/libvigraimpex.5.dylib
	<<
	Shlibs: %p/lib/libvigraimpex.5.dylib 5.0.0 %n (>= 1.10.0-1)
	Description: Shared libraries for vigra package
	DocFiles: LICENSE.txt README.md
<<
SplitOff3: <<
	Package: vigra-py27
	Depends: <<
		%N-shlibs (= %v-%r),
		boost1.68-python27-shlibs,
		fftw3-shlibs,
		hdf5.200.v1.10-shlibs,
		ilmbase24-shlibs,
		libjpeg9-shlibs,
		libopenexr24-shlibs,
		libpng16-shlibs,
		libtiff5-shlibs,
		numpy-py27 (>= 1.10.0-1),
		python27,
		szip-shlibs
	<<
	Files: <<
		lib/python2.7
	<<
	Description: Python binding for vigra package
	DocFiles: LICENSE.txt README.md
<<
Homepage: http://kogs-www.informatik.uni-hamburg.de/~koethe/vigra/
DescDetail: <<
VIGRA stands for "Vision with Generic Algorithms". It's a novel computer
vision library that puts its main emphasize on customizable algorithms
and data structures. By using template techniques similar to those in
the C++  Standard Template Library, you can easily adapt any VIGRA
component to the needs of your application, without thereby giving up
execution speed.
<<
DescPackaging: <<
Based on David Fang's vigra-1.8, which was based on Ben Hines'
vigra (1.4).

Only packaged python27 vigra-py as I could find no way to just build 
the python module by itself.
<<
DescPort: <<
On Xcode 5 and up, vigranumpy/src/core/accumulator.cxx fails with 
"recursive template instantiation exceeded maximum depth of 128", so bump 
template-depth to a higher number.
https://trac.macports.org/ticket/40634

Adapt patch from #414 which doesn't apply cleanly to 1.10.0
https://github.com/ukoethe/vigra/issues/414

dmacks: adapt patches for compat with newer numpy
https://github.com/ukoethe/vigra/commit/ca2246798fed70e8a7bd0994f22ee9f857e9aba0

dmacks: add -std=c++11 to allow dep-upgrade to openexr24

dmacks: fix weird quoting bug in cmake test for hdf5
<<
<<
