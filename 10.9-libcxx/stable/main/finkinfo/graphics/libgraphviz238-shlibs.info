Info3: <<
Package: libgraphviz238%type_pkg[var]-shlibs
Type: var (. -nox), ruby (2.6), guile (2.2)
Version: 2.49.3
# FTBFS (ocaml/swig): https://gitlab.com/graphviz/graphviz/-/issues/2128
# ...so ocaml disabled for now
Revision: 1
License: OSI-Approved
# License: Common Public License 1.0
Maintainer: David Fang <fangism@users.sourceforge.net>
Homepage: http://www.graphviz.org/
Conflicts: <<
	libgraphviz238-shlibs,
	libgraphviz238-nox-shlibs
<<
Replaces: <<
	graphviz,
	graphviz-nox,
	libgraphviz238-shlibs,
	libgraphviz238-nox-shlibs,
	libgraphviz238-dev (<= 2.46.0-1),
	libgraphviz238-nox-dev (<= 2.46.0-1)
<<
Source: https://gitlab.com/api/v4/projects/4207231/packages/generic/graphviz-releases/%v/graphviz-%v.tar.xz
Source-Checksum: SHA256(512b02bfad8e0148f50c1cd0d3a92a46e8ba61b32e4911ec10f008afc0e1cf7e)
PatchFile: %{ni}.patch
PatchFile-MD5: 346843a54a35a6b29bd97616c78ad65b
PatchScript: <<
	#!/bin/sh -ev
	# named for libversion (compatibility with -shlibs pkg naming)
	sed -e 's|@FINKPREFIX@|%p|g' -e 's|@PKGVERSION@|graphviz-2.38|g' < %{PatchFile} | patch -p1
	# Fix multiword linker flags (don't bother with autotools
	# template files--configure.ac and Makefile.am)
	sed -i.orig -e '/OCAML/s|/usr|%p|g' \
	  -e '/framework/s|-\(framework\) |-Wl,-\1,|g' \
	  configure
	for f in `grep -lr -e "-framework " macosx plugin | grep -v \.am` ; do
	  sed -i.orig -e '/framework/s|-\(framework\) |-Wl,-\1,|g' $f
	done

	# 10.9 and below only. Remove once we drop 10.9 support
	darwin_vers=`uname -r | cut -d. -f1`
	test "$darwin_vers" -le 13 ||
	sed -i.orig -e '/#include <CGGLContext\.h>/d' plugin/quartz/gvloadimage_quartz.c
	# Hardify php5 vs php7 detection (10.12 and down)
	test "$darwin_vers" -le 16 && perl -pi -e 's|-php7|-php5|g' configure
	# Don't inherit -l flags that aren't needed
	perl -pi -e 's/PHP_LIBS=.*//' configure

	# No /usr/lib/tclConfig.sh on 10.13; this is portable
	# to all 10.x:
	SDK_PATH="$(xcrun --sdk macosx --show-sdk-path)"
	perl -pi -e "s|\\$\\{TCLSH_EXEC_PREFIX\\}/lib/tclConfig.sh|${SDK_PATH}/System/Library/Frameworks/Tcl.framework/tclConfig.sh|g" configure

	# assure consistent results even if newer librsvg is avail
	perl -pi -e 's/(librsvg-2.0 >=) 2\.36\.0/${1} 99999.FORCE.NONDETECT/g' configure

	# make sure everything is linked and symbols resolved
	find . -name Makefile.in | xargs perl -pi -e 's/\@WITH_WIN32_TRUE\@// if /-no-undefined/'
	# which is why we also patch (in %n.patch):
	#  * plugin/gtk/Makefile.in: pass X11 flags (not propagated by
	#    cairo-xlib)
	#  * plugin/ming/*: graphviz-ming.patch from pld-linux
	#  * a ton of other Makefile.in

	# pkg-config spaghetti for guile hard-codes checks for 2.0 and
	# 1.8 even though it accepts anything newer. Fix for our
	# preferred.
	perl -pi -e 's/guile-2.0/guile-2.2/' configure

	# Patch configure to see BigSur and beyond (Darwin20/21)
	perl -pi.bak2 -e 's|darwin\[91|darwin[912|g; s|	10.\*\)|	1[012].*)|g' configure
<<
GCC: 4.0
Depends: <<
	(%type_raw[var] = .) atk1-shlibs (>= 1.32.0-1),
	(%type_raw[var] = .) cairo-shlibs (>= 1.12.14-1),
	(%type_raw[var] = .) freeglut2-shlibs, 
	(%type_raw[var] = .) gd3-shlibs,
	(%type_raw[var] = .) glib2-shlibs (>= 2.22.0-1),
	(%type_raw[var] = .) gtk+2-shlibs (>= 2.18.0-1),
	(%type_raw[var] = .) gts75-shlibs, 
	(%type_raw[var] = .) libgettext8-shlibs,
	(%type_raw[var] = .) librsvg2-shlibs (>= 2.26.0-1),
	(%type_raw[var] = .) pango1-xft2-ft219-shlibs (>= 1.24.5-4),
	(%type_raw[var] = .) x11, 
	expat1-shlibs (>= 2.0.0-1),
	fontconfig2-shlibs (>= 2.10.0-1),
	freetype219-shlibs (>= 2.10.2-1),
	gc-shlibs,
	guile%type_pkg[guile]-shlibs,
	libann-shlibs,
	libming1-shlibs,
	libpng16-shlibs,
	libtool2-shlibs, 
	libwebp7-shlibs,
	lua53-shlibs,
	poppler8-glib-shlibs,
	ruby%type_pkg[ruby]-shlibs
<<
BuildDepends: <<
	(%type_raw[var] = .) atk1 (>= 1.32.0-1),
	(%type_raw[var] = .) cairo (>= 1.12.14-1),
	(%type_raw[var] = .) freeglut2, 
	(%type_raw[var] = .) gd3-bin,
	(%type_raw[var] = .) gd3 (>= 2.3.3-1),
	(%type_raw[var] = .) gettext-tools,
	(%type_raw[var] = .) glib2-dev (>= 2.22.0-1), 
	(%type_raw[var] = .) gtk+2-dev (>= 2.18.0-1),
	(%type_raw[var] = .) gts75, 
	(%type_raw[var] = .) libgettext8-dev (>= 0.14.5-1),
	(%type_raw[var] = .) libglade2 (>= 2.6.4-4),
	(%type_raw[var] = .) librsvg2 (>= 2.26.0-1),
	(%type_raw[var] = .) pango1-xft2-ft219-dev (>= 1.24.5-4),
	(%type_raw[var] = .) x11-dev, 
	expat1 (>= 2.0.0-1), 
	fink (>= 0.32),
	fink-package-precedence,
	fontconfig2-dev (>= 2.10.0-1),
	freetype219 (>= 2.10.2-1),
	gawk (>= 3.1.2-12), 
	gc,
	gmp5, 
	guile%type_pkg[guile]-dev,
	guile%type_pkg[guile],
	libann-dev,
	libming1-dev,
	libpng16,
	libtool2,
	libwebp7,
	lua53-dev,
	lua53,
#	ocaml (>= 4.12.0-1),
	pkgconfig (>= 0.20-1),
	poppler8-glib,
	ruby%type_pkg[ruby]-dev,
	swig4 (>= 4.0.2-1),
	system-java,
	system-tcltk-dev
<<
# ocaml < 4.12.0 has .h that conflicts with newer xcode
# gd3 2.3.2 has a ton of stray Requires.private in .pc
# swig < 4.0.2 has const mismatches vs ocaml >= 4.09.0
# dmacks: no idea why both variants give "Error: attempt to add
# non-widget child..." but X11's (even two-level) works.
BuildConflicts: libxt, libxt-flat
ConfigureParams: <<
	--libdir=%p/lib/graphviz-2.38 \
	--mandir=%p/share/man \
	--disable-static \
	--with-included-ltdl=no \
	--with-ltdl-include=%p/include \
	--with-ltdl-lib=%p/lib \
	--with-extraincludedir=%p/include \
	--with-extralibdir=%p/lib \
	--with-tcl=/usr/bin/tclsh \
	--with-tclsh=/usr/bin/tclsh \
	--with-wish=/usr/bin/wish \
	--without-lasi \
	--without-ghostscript \
	--without-gtkgl \
	--without-devil \
	--with-ming \
	--with-quartz \
	--disable-go \
	--without-visio \
	LUA=lua53 \
	(%type_raw[var] = .) --with-x \
	(%type_raw[var] = .) --with-rsvg \
	(%type_raw[var] = .) --with-libgd \
	(%type_raw[var] = .) --with-gts \
	(%type_raw[var] = .) --with-glut \
	(%type_raw[var] = .) --with-gtkglext1 \
	(%type_raw[var] = .) --with-smyrna \
	(%type_raw[var] = -nox) --without-x \
	(%type_raw[var] = -nox) --without-gtk \
	(%type_raw[var] = -nox) --without-gdk \
	(%type_raw[var] = -nox) --without-gdk-pixbuf \
	(%type_raw[var] = -nox) --without-glade \
	(%type_raw[var] = -nox) --without-pangocairo \
	(%type_raw[var] = -nox) --without-rsvg \
	(%type_raw[var] = -nox) --without-libgd \
	(%type_raw[var] = -nox) --without-gts \
	(%type_raw[var] = -nox) --without-glut \
	(%type_raw[var] = -nox) --without-gtkglext1 \
	(%type_raw[var] = -nox) --without-smyrna \
	--disable-r \
	--disable-perl \
	--disable-python \
	--disable-python2 \
	--disable-python3 \
	GUILE=%p/bin/guile-%type_raw[guile] \
	GUILE_CONFIG=%p/bin/guile-%type_raw[guile]-config \
	--disable-ocaml \
	RUBY=%p/bin/ruby-%type_raw[ruby] \
	RUBY_CFLAGS="-I%p/include/ruby-%type_raw[ruby] -I%p/include/ruby-%type_raw[ruby]/%m-darwin" \
	RUBY_LIBS=-lruby.%type_raw[ruby]
<<
# (%type_raw[var] = -nox) --with-mylibgd \
# other possible configure params:
# LDFLAGS=-L%p/lib/ocaml
# OCAML_LIBS=-L%p/lib/ocaml
#SetLDFLAGS -Wl,-framework,CoreServices
CompileScript: <<
	#!/bin/sh -ev

	# handle java
	JAVA_VERSION=`javac -version  2>&1 >/dev/null | cut -d ' ' -f 2`
	JAVA_RELEASE=`javac -version  2>&1 >/dev/null | cut -d ' ' -f 2 | cut -d. -f1-2`
	echo $JAVA_RELEASE
        case "$JAVA_RELEASE" in
	1.6 )
		java_ldflags="-Wl,-framework,JavaVM"
		java_cppflags="-I/System/Library/Frameworks/JavaVM.framework/Versions/A/Headers"
	;;
	1.[78] )
		java_ldflags="-L/Library/Java/JavaVirtualMachines/jdk$JAVA_VERSION.jdk/Contents/Home/lib"
		java_cppflags="-I/Library/Java/JavaVirtualMachines/jdk$JAVA_VERSION.jdk/Contents/Home/include"
	;;
	*) ;;
	esac

	export LDFLAGS="$LDFLAGS $java_ldflags"
	export CPPFLAGS="$CPPFLAGS $java_cppflags $cg_cppflags"

	./configure %c

	# TK_XINCLUDES needed for 10.8
	# Tcl/Tk dropped on 2.40
	#sed -i.orig -e '/framework/s|-\(framework\) |-Wl,-\1,|g' \
	#	-e "/TK_XINCLUDES/s|\"\"|\"-I$X11_ROOT/include\"|" config.status
	#./config.status

	make V=1
	#QUARTZ_CFLAGS=-I/System/Library/Frameworks/CoreGraphics.framework/Headers
	fink-package-precedence --prohibit-bdep=%n238-dev,%n238-nox-dev . || :
<<
InfoTest: <<
	TestDepends: fink-package-precedence
	TestConfigureParams: --enable-dependency-tracking
	TestScript: <<
		#!/bin/sh -ev
 		echo "rtest.sh looks intended for post-install checking"
		# cd rtest && ./rtest.sh -v || exit 2
		# fink-package-precedence --prohibit-bdep=%n238-dev,%n238-nox-dev .
	<<
	TestSuiteSize: small
<<
InstallScript: <<
	#!/bin/sh -ev
	make DESTDIR=%d install
	# remove links in /usr
	# These are at least sane for php and tcl because we use
	# Apple's interps, but lua should be in %p because we use
	# fink's interp. See
	# https://gitlab.com/graphviz/graphviz/-/issues/2152
	rm -rf %d/usr
	rm -rf %d/Library
	#mkdir -p %i/lib/perl5/darwin-thread-multi-2level/%n
	#ln -s %p/lib/%n/perl/gv.pm %i/lib/perl5/darwin-thread-multi-2level/%n
	mkdir -p %i/share/doc/%n 
	mv %i/share/graphviz/doc/* %i/share/doc/%n 
	mv %i/share/graphviz/{demo,graphs} %i/share/doc/%n
	rm -rf %i/share/graphviz/doc
	# mkdir -p %i/lib/ruby/%type_pkg[ruby]/%n
	# didn't find any .rb files?
	# not bothering with %p/lib/php
	# move pkgconfig into location
	mv %i/lib/graphviz-2.38/pkgconfig %i/lib/pkgconfig
<<
Shlibs: <<
	!%p/lib/graphviz-2.38/graphviz/libgvplugin_core.6.dylib
	!%p/lib/graphviz-2.38/graphviz/libgvplugin_dot_layout.6.dylib
	(%type_raw[var] = .) !%p/lib/graphviz-2.38/graphviz/libgvplugin_gd.6.dylib
	(%type_raw[var] = .) !%p/lib/graphviz-2.38/graphviz/libgvplugin_gdk.6.dylib
	(%type_raw[var] = .) !%p/lib/graphviz-2.38/graphviz/libgvplugin_gtk.6.dylib
	!%p/lib/graphviz-2.38/graphviz/libgvplugin_ming.6.dylib
	!%p/lib/graphviz-2.38/graphviz/libgvplugin_neato_layout.6.dylib
	(%type_raw[var] = .) !%p/lib/graphviz-2.38/graphviz/libgvplugin_pango.6.dylib
	(%type_raw[var] = .) !%p/lib/graphviz-2.38/graphviz/libgvplugin_poppler.6.dylib
	!%p/lib/graphviz-2.38/graphviz/libgvplugin_quartz.6.dylib
	(%type_raw[var] = .) !%p/lib/graphviz-2.38/graphviz/libgvplugin_rsvg.6.dylib
	!%p/lib/graphviz-2.38/graphviz/libgvplugin_webp.6.dylib
	(%type_raw[var] = .) !%p/lib/graphviz-2.38/graphviz/libgvplugin_xlib.6.dylib
	(%type_raw[var] = .) !%p/lib/graphviz-2.38/graphviz/tcl/libgdtclft.0.dylib
	!%p/lib/graphviz-2.38/graphviz/tcl/libtcldot.0.dylib
	!%p/lib/graphviz-2.38/graphviz/tcl/libtcldot_builtin.0.dylib
	!%p/lib/graphviz-2.38/graphviz/tcl/libtclplan.0.dylib
	%p/lib/graphviz-2.38/libcgraph.6.dylib 7.0.0 %n (>= 2.38.0-1)
	%p/lib/graphviz-2.38/libcdt.5.dylib 6.0.0 %n (>= 2.38.0-1)
	%p/lib/graphviz-2.38/libgvc.6.dylib 7.0.0 %n (>= 2.38.0-1)
	%p/lib/graphviz-2.38/libpathplan.4.dylib 5.0.0 %n (>= 2.38.0-1)
	%p/lib/graphviz-2.38/libgvpr.2.dylib 3.0.0 %n (>= 2.38.0-1)
	%p/lib/graphviz-2.38/libxdot.4.dylib 5.0.0 %n (>= 2.38.0-1)
	%p/lib/graphviz-2.38/liblab_gamut.1.dylib 2.0.0 %n (>= 2.40.1-1)
<<
# rtest/rtest.sh is intended as a installcheck-time script
SplitOff: <<
	Package: graphviz%type_pkg[var]
	Conflicts: <<
		graphviz,
		graphviz-nox
	<<
	Replaces: <<
		graphviz,
		graphviz-nox,
		libgraphvis238-shlibs,
		libgraphviz238-nox-shlibs
	<<
	Depends: libgraphviz238%type_pkg[var]-shlibs (= %v-%r)
	#  no Depends beyond those that the -shlibs has
	Files: <<
		bin
		share/graphviz
		share/man/man1
		share/man/man7
	<<
	Description: Graph visualization software (binaries)
	DescPackaging: <<
		There are some other lib/graphviz-2.38 directories that are empty
		at package-time: R/ io/ java/ ocaml/ python{23,24,25}/ sharp/.
		Don't know what these are about...
	<<
	DocFiles: AUTHORS COPYING ChangeLog INSTALL NEWS README
	PostInstScript: <<
		# configure the plugins upon install
		%p/bin/dot -c
	<<
<<
SplitOff2: <<
	Package: libgraphviz238%type_pkg[var]-dev
	BuildDependsOnly: true
	Depends: libgraphviz238%type_pkg[var]-shlibs (= %v-%r)
	Conflicts: <<
		libgraphviz238-dev,
		libgraphviz238-nox-dev,
		graphviz (<< 2.18-2),
		graphviz-dev,
		graphviz-nox-dev,
		libgraphviz238-dev,
		libgraphviz238-nox-dev
	<<
	Replaces: <<
		libgraphviz238-dev,
		libgraphviz238-nox-dev,
		graphviz (<< 2.18-2),
		graphviz-dev,
		graphviz-nox-dev,
		libgraphviz238-dev,
		libgraphviz238-nox-dev
	<<
	Description: Development files for graphviz
	Files: <<
		include
		lib/graphviz-2.38/*.la
		lib/graphviz-2.38/graphviz/*.la
		lib/pkgconfig
		lib/graphviz-2.38/libcdt.dylib
		lib/graphviz-2.38/libcgraph.dylib
		lib/graphviz-2.38/libgvc.dylib
		lib/graphviz-2.38/libgvpr.dylib
		lib/graphviz-2.38/libpathplan.dylib
		lib/graphviz-2.38/libxdot.dylib
		lib/graphviz-2.38/liblab_gamut.dylib
		share/man/man3/*.3
	<<
	DocFiles: AUTHORS COPYING ChangeLog INSTALL NEWS README
<<
PostRmScript: rm -f %p/lib/graphviz-2.38/graphviz/config*
DocFiles: AUTHORS COPYING ChangeLog INSTALL NEWS README
# there are more doc files
Description: Graph visualization software (shared libs)
DescDetail: <<
graphviz is a set of graph drawing tools for Unix or MS-Windows 
(win32), including a web service interface (webdot). Graph drawing 
addresses the problem of visualizing structural information by 
constructing geometric representations of abstract graphs and 
networks. Automatic generation of graph drawings has important 
applications in key technologies such as database design, software 
engineering, VLSI and network design and visual interfaces in other 
domains.
.
License: Common Public License 1.0
.
Many thanks to Jeroen Scheerder <Jeroen.Scheerder@phil.uu.nl> for
pointing me in the right directions.
.
Former maintainer(s):
Thomas Kotzian <thomas.kotzian@gmx.at>
Matthias Neeracher <neeracher@mac.com>
<<
DescPackaging: <<
postinstall 'dot -c' updates config file with list of built plugins.
Links with libtool2's libltdl.dylib, therefore need build-depend on libtool2 
even though libltdl/ already includes ltdl.h
Blindly added deps for guile, lua, ocaml, 
though some may result in optional plug-ins.
Not sure what to do about perl/python yet...
	--dmacks disabled because they would need to be lang-versioned
Other deps not listed: zlib-1.2.3 (system's)
also checked in configure: gtkgl+ (disabled unless smyrna is required).

* Thanks to Peter Dyballa for adding ocaml support 
and using the system's Tcl and Ruby.
Ruby headers can be found in /usr/lib/ruby or /System/Library/Frameworks.
 ...switched back to fink's ruby for portability among 10.* distributions
    * fink's ruby*-dev don't have "ruby.pc" and ruby-2.5.pc exports
      lots of superfluous -l (needless BuildDepends), so we just
      hardcode the flags.
Prevent plug-in (.so) links from being installed in system paths outside of %p.
* Tried to get --with-quartz to work, Peter Dyballa made some progress on this.
Adding lighter -nox variant with fewer dependencies, having stripped out
all of gnome, gtk, and glib, and pangocairo (many thanks to fink-core
team for guidance).
* Rendering libraries, such as rsvg, have been removed for -nox.

TODO: separate out extension language plug-ins

Splitoff structure changed from original graphviz.info:
The primary package now contains the shared libraries, 
so the binary splitoff can upgrade the previous version.

Permission granted by Google to contribute packaging.

The plugins are runtime-loadable modules (dlopen), so they are fully
in the runtime package (not .la in -dev)...".dylib" is a misnomer.

As of 2.49.3, lefty is omitted. But see related packaging issue:
https://gitlab.com/graphviz/graphviz/-/issues/2153
<<
<<
