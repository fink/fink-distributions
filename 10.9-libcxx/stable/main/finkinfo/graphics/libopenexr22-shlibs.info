Package: libopenexr22-shlibs
# 2.2.1 changes libN
Version: 2.2.0
Revision: 5
Description: Shared libraries for OpenEXR
License: BSD
Maintainer: David Fang <fangism@users.sourceforge.net>
Depends: <<
	ilmbase12-shlibs
<<
BuildDepends: <<
	fink-package-precedence,
	flag-sort,
	ilmbase12
<<

Source: http://download.savannah.nongnu.org/releases/openexr/openexr-%v.tar.gz
Source-Checksum: SHA256(36a012f6c43213f840ce29a8b182700f6cf6b214bea0d5735594136b44914231)
PatchScript: <<
	perl -pi -e "s|-Wno-long-double||g" configure
	# disable use of -rpath
	# fix Makefiles for examples and tests
	sed -i.orig  -e '/^LDADD =/s|-L||g' \
		-e '/^LDADD =/s|IlmImf[a-z]*|&/lib&.la|g' IlmImfExamples/Makefile.in IlmImfTest/Makefile.in
	perl -pi -e 's|-L\$\(top_builddir\)/IlmImf \@ILMBASE_LIBS\@ -lIlmImf|\$\(top_builddir\)/IlmImf/libIlmImf.la \@ILMBASE_LIBS\@|g' IlmImfUtil/Makefile.in 
<<
# flag-sort and NoSetLDFLAGS to prevent compiling/linking against own installed library
SetCC: flag-sort -r gcc
SetCXX: flag-sort -r g++
NoSetLDFLAGS: true
ConfigureParams: <<
	--enable-shared \
	--disable-static \
	--enable-imfexamples \
	--disable-osx-universal-binaries
<<

GCC: 4.0
CompileScript: <<
	#!/bin/sh -ev
	%{default_script}
	fink-package-precedence --prohibit-bdep=libopenexr22,libopenexr24-dev,libopenexr30-dev .
<<
InfoTest: <<
	TestSource: https://raw.githubusercontent.com/AcademySoftwareFoundation/openexr/RB-2.2/OpenEXR/IlmImfTest/comp_dwaa_v1.exr
	TestSource-Checksum: SHA256(2625da5943c9ed15f8ea7af992ee65021a09f4f50f8ba1c5c6d7bc433c87c66d)
	TestSource2: https://raw.githubusercontent.com/AcademySoftwareFoundation/openexr/RB-2.2/OpenEXR/IlmImfTest/comp_dwaa_v2.exr
	TestSource2-Checksum: SHA256(a2b2dfabc95698f35d1924149a9799ed3c5a6cee3e547a9116250917bd5e9aa3)
	TestSource3: https://raw.githubusercontent.com/AcademySoftwareFoundation/openexr/RB-2.2/OpenEXR/IlmImfTest/comp_dwab_v1.exr
	TestSource3-Checksum: SHA256(0dd4c31f1e0f7136f87173590f83b36ba6da9b0f54c8d2d560e442ec9fe67b22)
	TestSource4: https://raw.githubusercontent.com/AcademySoftwareFoundation/openexr/RB-2.2/OpenEXR/IlmImfTest/comp_dwab_v2.exr
	TestSource4-Checksum: SHA256(20cb8cea5c7c3520eafa3be3bd8c6e55b0bce0e7ac1586bc943f61189d481bfa)
	TestScript: <<
		#!/bin/sh -ev
		for f in dwaa_v1 dwaa_v2 dwab_v1 dwab_v2
		do
			mv ../comp_$f.exr IlmImfTest
		done
		make -k check || exit 2
	<<
<<
InstallScript: <<
	#!/bin/sh -ev
	make -j1 install DESTDIR="%d"
	perl -pi -e "s, \-L%b/IlmImf,,g" %i/lib/libIlmImfUtil.la
	# relocate documentation, doesn't conflict with older version
	install -d -m 755 %i/share/doc/libopenexr22
	mv %i/share/doc/OpenEXR-%v/* %i/share/doc/libopenexr22/
	rmdir %i/share/doc/OpenEXR-%v
<<
Shlibs: <<
	%p/lib/libIlmImf-2_2.22.dylib 23.0.0 %n (>= 2.2.0-1)
	%p/lib/libIlmImfUtil-2_2.22.dylib 23.0.0 %n (>= 2.2.0-1)
<<
DocFiles: AUTHORS COPYING ChangeLog INSTALL LICENSE NEWS README*
SplitOff: <<
	Package: libopenexr22
	Description: Development files for OpenEXR
	Depends: %N (= %v-%r)
	Conflicts: <<
		libopenexr22,
		libopenexr24-dev,
		libopenexr30-dev
	<<
	Replaces: <<
		libopenexr22,
		libopenexr24-dev,
		libopenexr30-dev
	<<
	DocFiles: AUTHORS COPYING ChangeLog INSTALL LICENSE NEWS README* doc/*.pdf
	BuildDependsOnly: true
	Files: <<
		include
		lib/pkgconfig
		lib/libIlmImf.{dylib,la}
		lib/libIlmImfUtil.{dylib,la}
		share/aclocal
		share/doc/libopenexr22
	<<
<<
SplitOff2: <<
	Package: openexr
	Description: High dynamic-range (HDR) image file tools
	Depends: <<
		%N (>= %v-%r),
		ilmbase12-shlibs
	<<
	Files: bin
	DocFiles: AUTHORS COPYING ChangeLog INSTALL LICENSE NEWS README*
<<

Homepage: https://www.openexr.com/
DescDetail: <<
OpenEXR is a high dynamic-range (HDR) image file format
developed by Industrial Light & Magic for use in computer
imaging applications.

OpenEXR is used by ILM on all motion pictures currently
in production.  The first movies to employ OpenEXR were
Harry Potter and the Sorcerers Stone, Men in Black II,
Gangs of New York, and Signs. Since then, OpenEXR has
become ILM's main image file format.

OpenEXR's features include:

* Higher dynamic range and color precision than existing
  8- and 10-bit image file formats.
* Support for 16-bit floating-point, 32-bit floating-point,
  and 32-bit integer pixels.  The 16-bit floating-point
  format, called "half", is compatible with the half data
  type in NVIDIA's Cg graphics language and is supported
  natively on their new GeForce FX and Quadro FX 3D
  graphics solutions.
* Multiple lossless image compression algorithms.  Some of
  the included codecs can achieve 2:1 lossless compression
  ratios on images with film grain.
* Extensibility.  New compression codecs and image types
  can easily be added by extending the C++ classes
  included in the OpenEXR software distribution.  New
  image attributes (strings, vectors, integers, etc.) can
  be added to OpenEXR image headers without affecting
  backward compatibility with existing OpenEXR
  applications.
<<
DescPackaging: <<
Previous Maintainer: Benjamin Reed <openexr@fink.raccoonfink.com>
<<
