Package: opencv3.2-shlibs
Version: 3.2.0
Revision: 3
Description: Open Source Computer Vision Library
License: BSD
Maintainer: Hanspeter Niederstrasser <nieder@users.sourceforge.net>
Depends: <<
	bzip2-shlibs,
	glib2-shlibs (>= 2.22.0-1),
	gst-plugins-base-0.10-shlibs,
	gstreamer-0.10-shlibs,
	ilmbase12-shlibs,
	libavcodec58-4.0-shlibs,
	libavformat58-4.0-shlibs,
	libavutil56-4.0-shlibs,
	libexif12-shlibs,
	libgettext8-shlibs,
	libgphoto2.6-shlibs,
	libjasper.1-shlibs,
	libjpeg9-shlibs,
	libopenexr22-shlibs,
	libpng16-shlibs,
	libswresample3-4.0-shlibs,
	libswscale5-4.0-shlibs,
	libtiff5-shlibs,
	libwebp7-shlibs,
	libxml2-shlibs,
	macosx (>= 10.7),
	numpy-py27,
	numpy-py36,
	python27-shlibs,
	python36-shlibs
<<
BuildDepends: <<
	bzip2-dev,
	cmake (>= 2.8),
	eigen3,
	fink (>= 0.30.0),
	fink-buildenv-modules,
	fink-package-precedence,
	glib2-dev (>= 2.22.0-2),
	gst-plugins-base-0.10-dev,
	gstreamer-0.10-dev,
	ilmbase12,
	libavcodec58-4.0-dev,
	libavformat58-4.0-dev,
	libavutil56-4.0-dev,
	libexif12,
	libgettext8-dev,
	libgphoto2.6,
	libiconv-dev,
	libjasper.1,
	libjpeg9,
	libopenexr22,
	libpng16,
	libswresample3-4.0-dev,
	libswscale5-4.0-dev,
	libtiff5,
	libwebp7,
	libxml2,
	pkgconfig (>= 0.23),
	python27,
	python36
<<
Source: mirror:sourceforge:opencvlibrary/opencv-unix/%v/opencv-%v.zip
Source-Checksum: SHA1(7a7d2eb8cf617f58d610d856e531f3d92b89bc42)
Source2: https://raw.githubusercontent.com/opencv/opencv_3rdparty/81a676001ca8075ada498583e4166079e5744668/ippicv/ippicv_macosx_20151201.tgz
Source2-MD5: 4ff1fde9a7cfdfe7250bfcd8334e0f2f
Source2ExtractDir: opencv-%v/3rdparty/ippicv

PatchFile: %n.patch
PatchFile-MD5: f8b4769154886ab55d243f5d5f877731
# https://github.com/opencv/opencv/pull/10011
PatchFile2: %n-ffmpeg4.patch
PatchFile2-MD5: 4c70811d20ec471c1c4e973219cb67f8
PatchScript: <<
	### ippicv_macosx_yyyymmdd.tgz needs to exist or cmake tries to download it.
	# hash is MD5 of dummy tarball and needs to be changed in downlader.cmake
	mkdir -p 3rdparty/ippicv/downloads/macosx-d41d8cd98f00b204e9800998ecf8427e
	touch 3rdparty/ippicv/downloads/macosx-d41d8cd98f00b204e9800998ecf8427e/ippicv_macosx_20151201.tgz
	# copy contents to finkbuild dir
	# can't extract straight here because extraction is done as root and we need this directory to be writeable by build.
	mkdir -p finkbuild/3rdparty
	cp -Rp 3rdparty/ippicv finkbuild/3rdparty
	# master patch
	sed -e 's|@FINK_PREFIX@|%p|g;' -e 's|@FFMPEG_VER@|4.0|g' < %{PatchFile} | patch -p1
	# avresample vs swresample
	perl -pi -e 's|avresample|swresample|g' CMakeLists.txt cmake/OpenCVFindLibsVideo.cmake
	patch -p1 < %{PatchFile2}
<<
SetCXXFLAGS: -MD
GCC: 4.0
CompileScript: <<
	#!/bin/sh -ev
	mkdir -p finkbuild
	cd finkbuild
	. %p/sbin/fink-buildenv-cmake.sh
	export PKG_CONFIG_PATH=%p/lib/ffmpeg-4.0/lib/pkgconfig:%p/lib/glib-2.0/pkgconfig-strict:$PKG_CONFIG_PATH
	cmake \
		$FINK_CMAKE_ARGS \
		-DBUILD_EXAMPLES=ON \
		-DINSTALL_C_EXAMPLES=ON \
		-DINSTALL_PYTHON_EXAMPLES=ON \
		-DPYTHON_EXECUTABLE=%p/bin/python2.7 \
		-DPYTHON_LIBRARY=%p/lib/python2.7/config/libpython2.7.dylib \
		-DPYTHON_INCLUDE_DIR=%p/include/python2.7 \
		-DPYTHON_PACKAGES_PATH=%p/lib/python2.7/site-packages \
		-DPYTHON3_EXECUTABLE=%p/bin/python3.6 \
		-DPYTHON3_INCLUDE_DIR=%p/include/python3.6m \
		-DPYTHON3_LIBRARY=%p/lib/python3.6/config-3.6m/libpython3.6m.dylib \
		-DPYTHON3_PACKAGES_PATH=%p/lib/python3.6/site-packages \
		-DBZIP2_LIBRARIES:FILEPATH=%p/lib/libbz2.dylib \
		-DWITH_EIGEN=ON \
		-DEIGEN_INCLUDE_PATH=%p/include/eigen3 \
		-DWITH_CUDA=OFF \
		-DWITH_1394=OFF \
		-DWITH_FFMPEG=ON \
		-DWITH_OPENEXR=ON \
		-DWITH_OPENNI=OFF \
		-DWITH_QT=OFF \
		-DBUILD_DOCS=OFF \
		-DBUILD_EXAMPLES=ON \
		-DWITH_GPHOTO2=ON \
		-DWITH_GSTREAMER=OFF \
		-DWITH_GSTREAMER_0_10=ON \
		-DBUILD_JASPER=OFF \
		-DBUILD_JPEG=OFF \
		-DWITH_MATLAB=OFF \
		-DWITH_OPENCL=ON \
		-DBUILD_OPENEXR=OFF \
		-DBUILD_PNG=OFF \
		-DBUILD_TIFF=OFF \
		-DWITH_V4L=OFF \
		-DWITH_VTK=OFF \
		-DBUILD_ZLIB=OFF \
		-DBUILD_opencv_java=OFF \
		-DLAPACK_INCLUDE_DIR="Accelerate" \
		-DLAPACK_LIBRARIES="-Wl,-framework,Accelerate" \
		-DLAPACK_CBLAS_H="cblas.h" \
		-DLAPACK_LAPACKE_H="lapacke.h" \
		-DLAPACK_IMPL="Apple" \
		-DOPENCV_ICV_PACKAGE_DOWNLOADED=d41d8cd98f00b204e9800998ecf8427e \
	..
	make
	fink-package-precedence --depfile-ext='\.d' ..
<<
InstallScript: <<
	#!/bin/sh -ev
	cd finkbuild
	make install/fast DESTDIR=%d
	### Remove Libs.private, which would need fixing to -Wl,-framework syntax
	perl -ni -e 'print unless /Libs.private:/' %i/lib/pkgconfig/opencv.pc
<<
Shlibs: <<
	%p/lib/libopencv_calib3d.3.2.dylib 3.2.0 %n (>= 3.2.0-1)
	%p/lib/libopencv_core.3.2.dylib 3.2.0 %n (>= 3.2.0-1)
	%p/lib/libopencv_features2d.3.2.dylib 3.2.0 %n (>= 3.2.0-1)
	%p/lib/libopencv_flann.3.2.dylib 3.2.0 %n (>= 3.2.0-1)
	%p/lib/libopencv_highgui.3.2.dylib 3.2.0 %n (>= 3.2.0-1)
	%p/lib/libopencv_imgcodecs.3.2.dylib 3.2.0 %n (>= 3.2.0-1)
	%p/lib/libopencv_imgproc.3.2.dylib 3.2.0 %n (>= 3.2.0-1)
	%p/lib/libopencv_ml.3.2.dylib 3.2.0 %n (>= 3.2.0-1)
	%p/lib/libopencv_objdetect.3.2.dylib 3.2.0 %n (>= 3.2.0-1)
	%p/lib/libopencv_photo.3.2.dylib 3.2.0 %n (>= 3.2.0-1)
	%p/lib/libopencv_shape.3.2.dylib 3.2.0 %n (>= 3.2.0-1)
	%p/lib/libopencv_stitching.3.2.dylib 3.2.0 %n (>= 3.2.0-1)
	%p/lib/libopencv_superres.3.2.dylib 3.2.0 %n (>= 3.2.0-1)
	%p/lib/libopencv_video.3.2.dylib 3.2.0 %n (>= 3.2.0-1)
	%p/lib/libopencv_videoio.3.2.dylib 3.2.0 %n (>= 3.2.0-1)
	%p/lib/libopencv_videostab.3.2.dylib 3.2.0 %n (>= 3.2.0-1)
<<
DocFiles: LICENSE README.md
Splitoff: <<
	Package: opencv
	Depends: <<
		opencv3.2-shlibs (>= %v-%r),
		python27-shlibs,
		python36-shlibs
	<<
	Description: Open Source Computer Vision executables
	Replaces: opencv-shlibs (<= 2.3.1-3)
	DocFiles: LICENSE README.md
	Files: <<
		bin
		lib/python2.7
		lib/python3.6
	<<
<<
SplitOff2: <<
	Package: opencv3.2-dev
	Depends: <<
		opencv3.2-shlibs (= %v-%r)
	<<
	Conflicts: opencv-dev, opencv2.4-dev, opencv3.0-dev
	Replaces: opencv-dev, opencv2.4-dev, opencv3.0-dev
	BuildDependsOnly: true
	Description: Development files for opencv
	DocFiles: LICENSE README.md
	Files: <<
		include
		lib/libopencv_{calib3d,core,features2d,flann,highgui,imgcodecs,imgproc,ml,objdetect,photo,shape,stitching,superres,video,videoio,videostab}.dylib
		lib/pkgconfig
		share/OpenCV
	<<
<<
Homepage: http://opencv.org/
DescDetail: <<
OpenCV (Open Source Computer Vision) is a library of programming 
functions for real time computer vision.

OpenCV has C++, C, Python and soon Java interfaces running on 
Windows, Linux, Android and Mac. The library has >2500 optimized 
algorithms (see figure below). It is used around the world, has 
>2.5M downloads and >40K people in the user group. Uses range from 
interactive art, to mine inspection, stitching maps on the web on 
through advanced robotics.
<<
DescPort: <<
Turn off Java bindings because it generates dylib with the full version
in the file name: libopencv_java244.dylib
Also, doesn't use either -install_name or -c_v correctly. Can reactivate
when those are working.

Explicitly turn off rebuilding docs since it requires TexLive.

Brain dead ffmpeg detection
More than just /opt
cmake/OpenCVFindLibsVideo.cmake

Point to our fake ippicv downloaded file (real one is in %p/src)
3rdparty/ippicv/downloader.cmake
OPENCV_ICV_PACKAGE_HASH is the MD5 of the dummy tarball

Harden finding Accelerate framework and OpenEXR.
<<
