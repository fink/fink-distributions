diff -Nurd fontforge-786294cf32e6385e278a4afdd02a6a2eac519dc9.orig/m4/fontforge_config_x_libraries.m4 fontforge-786294cf32e6385e278a4afdd02a6a2eac519dc9/m4/fontforge_config_x_libraries.m4
--- fontforge-786294cf32e6385e278a4afdd02a6a2eac519dc9.orig/m4/fontforge_config_x_libraries.m4	2019-06-09 03:13:36
+++ fontforge-786294cf32e6385e278a4afdd02a6a2eac519dc9/m4/fontforge_config_x_libraries.m4	2025-10-12 23:23:41
@@ -5,7 +5,11 @@
 AC_DEFUN([FONTFORGE_CONFIG_X_LIBRARIES],
 [
 if test x"${i_do_have_x}" = xyes; then
-   AC_SEARCH_LIBS([XOpenDisplay],[X11])
+   FONTFORGE_SEARCH_LIBS([XOpenDisplay],[X11],
+                  ,
+                  ,
+                  [$X_LIBS $X_PRE_LIBS $X_EXTRA_LIBS])
+#   AC_SEARCH_LIBS([XOpenDisplay],[X11])
    if test x"${gww_iscygwin}" = xyes; then
       dnl Although present on my cygwin system the Xi library does not load
       dnl and crashes gdb if we attempt to use it.
diff -Nurd fontforge-786294cf32e6385e278a4afdd02a6a2eac519dc9.orig/m4/fontforge_platform_specifics.m4 fontforge-786294cf32e6385e278a4afdd02a6a2eac519dc9/m4/fontforge_platform_specifics.m4
--- fontforge-786294cf32e6385e278a4afdd02a6a2eac519dc9.orig/m4/fontforge_platform_specifics.m4	2019-06-09 03:13:36
+++ fontforge-786294cf32e6385e278a4afdd02a6a2eac519dc9/m4/fontforge_platform_specifics.m4	2025-10-12 23:03:00
@@ -8,7 +8,7 @@
 
 m4_define([default_SDK],[/])
 m4_define([default_CARBON],[System/Library/Frameworks/Carbon.framework/Carbon])
-m4_define([default_COCOA],[/System/Library/Frameworks/Cocoa.framework/Cocoa])
+m4_define([default_COCOA],[System/Library/Frameworks/Cocoa.framework/Cocoa])
 m4_define([default_CORESERVICES],[System/Library/Frameworks/CoreServices.framework/CoreServices])
 
 AS_CASE([$host],
@@ -31,44 +31,12 @@
       dnl but when macport/fink overwrite a standard lib, I still want the standard
       dnl  library to be found (otherwise only portable to machines with macports/fink)
 
-      if test "$CPPFLAGS" \!= "" >/dev/null ; then
        TrustUser="yes"
-      elif test -d /sw/include >/dev/null ; then
-       CPPFLAGS="$CPPFLAGS -I /sw/include"
-       gww_extraincludes="/sw/include"
-      elif test -d /opt/local/include >/dev/null ; then
-       CPPFLAGS="$CPPFLAGS -I /opt/local/include"
-       gww_extraincludes="/opt/local/include";
-      fi
-      if test "$oldLDFLAGS" \!= "" >/dev/null ; then
-       TrustUser="yes"
-      elif test -d /sw/lib >/dev/null ; then
-       LDFLAGS="$LDFLAGS -L/sw/lib"
-       gww_rpath="-rpath /sw/lib"
-      elif test -d /opt/local/lib >/dev/null ; then
-       LDFLAGS="$LDFLAGS -L/opt/local/lib"
-       gww_rpath="-rpath /opt/local/lib"
-      fi
 
-      AC_ARG_VAR([SDK],[(Macintosh only) path to software development kit; defaults to ]default_SDK)
-      AC_ARG_VAR([CARBON],[(Macintosh only) path to Carbon; defaults to SDK/]default_CARBON)
-      AC_ARG_VAR([COCOA],[(Macintosh only) path to Cocoa; defaults to SDK/]default_COCOA)
-      AC_ARG_VAR([CORESERVICES],[(Macintosh only) path to CoreServices; defaults to SDK/]default_CORESERVICES)
-
-      test x"${SDK}" = x && SDK="default_SDK"
-      if test x"${SDK}" = x"/"; then
-         derooted_SDK=""
-      else
-         derooted_SDK="${SDK}"
-      fi
-      test x"${CARBON}" = x && CARBON="${derooted_SDK}/default_CARBON"
-      test x"${COCOA}" = x && CARBON="${derooted_SDK}/default_COCOA"
-      test x"${CORESERVICES}" = x && CORESERVICES="${derooted_SDK}/default_CORESERVICES"
-
       if test x"${cross_compiling}" != xyes; then
-         test x"${CORESERVICES}" != x && LIBS="-Wl,${CORESERVICES} ${LIBS}"
-         test x"${CARBON}" != x && LIBS="-Wl,${CARBON} ${LIBS}"
-         test x"${COCOA}" != x && LIBS="-Wl,${COCOA} ${LIBS}"
+         test x"${CORESERVICES}" != x && LIBS="-framework CoreServices ${LIBS}"
+         test x"${CARBON}" != x && LIBS="-framework Carbon ${LIBS}"
+         test x"${COCOA}" != x && LIBS="-framework Cocoa ${LIBS}"
          # I would like to be able to just leave the framework as a
          # filename. But if I do that, libtool eats it and gcc doesn't
          # get it and ld doesn't get it and we get undefined symbols.
