diff -Nurd fontforge-20160404.orig/configure.ac fontforge-20160404/configure.ac
--- fontforge-20160404.orig/configure.ac	2016-04-04 19:56:57.000000000 -0400
+++ fontforge-20160404/configure.ac	2021-05-29 14:15:37.000000000 -0400
@@ -192,6 +192,7 @@
 AC_PROG_MAKE_SET
 AC_PROG_MKDIR_P
 AC_PROG_SED
+AC_PROG_OBJC
 
 #--------------------------------------------------------------------------
 # Required for building FontForge package, plus we use PKG_CHECK_MODULES in
@@ -487,6 +488,7 @@
    *-freebsd* | *-openbsd*)
       ;;
    *-apple-darwin*)
+	  my_lib_ldflags="${my_lib_ldflags} -no-undefined"
       ;;
    *mingw*)
       dnl Explicitly export all symbols on Windows, since FontForge lacks an export table
diff -Nurd fontforge-20160404.orig/fontforgeexe/Makefile.am fontforge-20160404/fontforgeexe/Makefile.am
--- fontforge-20160404.orig/fontforgeexe/Makefile.am	2016-04-04 19:56:57.000000000 -0400
+++ fontforge-20160404/fontforgeexe/Makefile.am	2021-05-29 16:28:09.000000000 -0400
@@ -45,10 +45,6 @@
 
 #--------------------------------------------------------------------------
 
-macobjective.o: macobjective.m
-	clang -I../inc -I../osx/FontForge.app/Contents/Frameworks/Breakpad.framework/Headers \
-            -g -arch x86_64 -arch i386 \
-            -c "${srcdir}/macobjective.m" -o macobjective.o
 
 
 #--------------------------------------------------------------------------
@@ -133,7 +129,7 @@
 	scstylesui.c searchview.c sftextfield.c showatt.c simplifydlg.c	        \
 	splashimage.c startui.c statemachine.c tilepath.c transform.c	        \
 	ttfinstrsui.c uiutil.c windowmenu.c justifydlg.c deltaui.c		\
-	usermenu.c macobjective.h                                               \
+	usermenu.c                                                              \
 	collabclientui.c collabclientui.h                                       \
 	sfundo.c wordlistparser.c wordlistparser.h fontforgeexe.h
 
@@ -143,16 +139,22 @@
 
 endif !GRAPHICAL_USER_INTERFACE
 
-if MACINTOSH
-MACFFEXE_LIBADD=macobjective.o
-endif MACINTOSH
 
 libfontforgeexe_la_CPPFLAGS = $(AM_CPPFLAGS) $(LIBZMQ_CFLAGS) $(GTK2_CFLAGS)
-libfontforgeexe_la_LIBADD = $(LTDLDEPS) $(LIBADD) $(GUILIBADD) $(MACFFEXE_LIBADD) $(MY_LIBS) $(GTK2_LIBS) $(top_builddir)/fontforge/libfontforge.la $(BREAKPAD_LIBADD)
+libfontforgeexe_la_LIBADD = $(LTDLDEPS) $(LIBADD) $(GUILIBADD) $(MACFFEXE_LIBADD) $(MY_LIBS) $(GTK2_LIBS) $(top_builddir)/fontforge/libfontforge.la
 
 libfontforgeexe_la_LDFLAGS = $(MY_CFLAGS) -version-info $(LIBFONTFORGEEXE_VERSION) \
 	${MY_LIB_LDFLAGS}
 
+if MACINTOSH
+CLEANFILES = libfontforgeexe_objc.la
+noinst_LTLIBRARIES = libfontforgeexe_objc.la
+libfontforgeexe_objc_la_SOURCES = macobjective.h macobjective.m
+libfontforgeexe_objc_la_CPPFLAGS = "-I$(top_builddir)/inc" "-I$(top_srcdir)/inc"
+libfontforgeexe_la_LIBADD += libfontforgeexe_objc.la
+libfontforgeexe_la_LDFLAGS += -Wl,-framework,Carbon
+endif MACINTOSH
+
 if LIBZMQ
 libfontforgeexe_la_LIBADD += $(top_builddir)/collab/libzmqcollab.la $(LIBZMQ_LIBS)
 endif
@@ -160,8 +162,8 @@
 #--------------------------------------------------------------------------
 
 EXTRA_DIST = fontimage.pe fontlint.pe sfddiff.pe	\
-	fontimage.1 fontlint.1 sfddiff.1		\
-	acorn2sfd.c darwinsetup.in macobjective.m
+e	fontimage.1 fontlint.1 sfddiff.1		\
+	acorn2sfd.c darwinsetup.in
 # MacFontForgeApp.zip
 MOSTLYCLEANFILES = fontimage fontlint sfddiff
 DISTCLEANFILES = $(MOSTLYCLEANFILES)
diff -Nurd fontforge-20160404.orig/fontforgeexe/startui.c fontforge-20160404/fontforgeexe/startui.c
--- fontforge-20160404.orig/fontforgeexe/startui.c	2016-04-04 19:56:57.000000000 -0400
+++ fontforge-20160404/fontforgeexe/startui.c	2021-05-29 06:37:18.000000000 -0400
@@ -513,23 +513,23 @@
 
     err     = AEInstallEventHandler(kCoreEventClass, kAEOpenApplication,
                 NewAEEventHandlerUPP(OpenApplicationAE), 0, false);
-    require_noerr(err, CantInstallAppleEventHandler);
+    __Require_noErr(err, CantInstallAppleEventHandler);
 
     err     = AEInstallEventHandler(kCoreEventClass, kAEReopenApplication,
                 NewAEEventHandlerUPP(ReopenApplicationAE), 0, false);
-    require_noerr(err, CantInstallAppleEventHandler);
+    __Require_noErr(err, CantInstallAppleEventHandler);
 
     err     = AEInstallEventHandler(kCoreEventClass, kAEOpenDocuments,
                 NewAEEventHandlerUPP(OpenDocumentsAE), 0, false);
-    require_noerr(err, CantInstallAppleEventHandler);
+    __Require_noErr(err, CantInstallAppleEventHandler);
 
     err     = AEInstallEventHandler(kCoreEventClass, kAEQuitApplication,
                 NewAEEventHandlerUPP(QuitApplicationAE), 0, false);
-    require_noerr(err, CantInstallAppleEventHandler);
+    __Require_noErr(err, CantInstallAppleEventHandler);
 
     err     = AEInstallEventHandler(kCoreEventClass, kAEShowPreferences,
                 NewAEEventHandlerUPP(ShowPreferencesAE), 0, false);
-    require_noerr(err, CantInstallAppleEventHandler);
+    __Require_noErr(err, CantInstallAppleEventHandler);
 
  /* some debugging code, for now */
  if ( getenv("HOME")!=NULL ) {
diff -Nurd fontforge-20160404.orig/m4/fontforge_platform_specifics.m4 fontforge-20160404/m4/fontforge_platform_specifics.m4
--- fontforge-20160404.orig/m4/fontforge_platform_specifics.m4	2016-04-04 19:56:57.000000000 -0400
+++ fontforge-20160404/m4/fontforge_platform_specifics.m4	2021-05-29 06:41:13.000000000 -0400
@@ -23,7 +23,7 @@
        MACAPP=""
       fi
 
-      RAW_COMPILE_PLATFORM_CFLAGS=" $CFLAGS -arch x86_64 -arch i386 "
+      RAW_COMPILE_PLATFORM_CFLAGS=$CFLAGS
       AC_SUBST([RAW_COMPILE_PLATFORM_CFLAGS])
 
       dnl fink puts stuff under /sw
@@ -31,24 +31,7 @@
       dnl but when macport/fink overwrite a standard lib, I still want the standard
       dnl  library to be found (otherwise only portable to machines with macports/fink)
 
-      if test "$CPPFLAGS" \!= "" >/dev/null ; then
        TrustUser="yes"
-      elif test -d /sw/include >/dev/null ; then
-       CPPFLAGS="$CPPFLAGS -I /sw/include"
-       gww_extraincludes="/sw/include"
-      elif test -d /opt/local/include >/dev/null ; then
-       CPPFLAGS="$CPPFLAGS -I /opt/local/include"
-       gww_extraincludes="/opt/local/include";
-      fi
-      if test "$oldLDFLAGS" \!= "" >/dev/null ; then
-       TrustUser="yes"
-      elif test -d /sw/lib >/dev/null ; then
-       LDFLAGS="$LDFLAGS -L/sw/lib"
-       gww_rpath="-rpath /sw/lib"
-      elif test -d /opt/local/lib >/dev/null ; then
-       LDFLAGS="$LDFLAGS -L/opt/local/lib"
-       gww_rpath="-rpath /opt/local/lib"
-      fi
 
       AC_ARG_VAR([SDK],[(Macintosh only) path to software development kit; defaults to ]default_SDK)
       AC_ARG_VAR([CARBON],[(Macintosh only) path to Carbon; defaults to SDK/]default_CARBON)
