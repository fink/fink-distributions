diff -Nurd inkscape-0.48.5.orig/configure.ac inkscape-0.48.5/configure.ac
--- inkscape-0.48.5.orig/configure.ac	2014-06-20 16:29:03.000000000 -0400
+++ inkscape-0.48.5/configure.ac	2022-01-07 15:38:48.000000000 -0500
@@ -231,28 +231,28 @@
 				  break], [gc_ok=no], [$gc_libs])
 		    break],
                  [gc_ok=no])
-if test "x$gc_ok" = "xyes" && test "x$cross_compiling" = "xno" ; then 
-	AC_MSG_CHECKING([libgc version 6.4+])
-	AC_RUN_IFELSE(
-		[AC_LANG_SOURCE([[
-			#ifdef HAVE_GC_GC_H
-			# include <gc/gc.h>
-			#else
-			# include <gc.h>
-			#endif
-			#include <stdio.h>
-			extern unsigned GC_version;
-			int main(void){
-				unsigned min = ((6 << 16) | (4 << 8) | 0);
-				printf("%d.%d.%d ",GC_version >> 16, (GC_version >> 8) & 0xFF, GC_version & 0xFF);
-				if (GC_version>=min) return 0;
-				return 1;
-			}]])],
-		[gc_ok=yes],
-		[gc_ok=no]
-	)
-	AC_MSG_RESULT([$gc_ok])
-fi
+dnl if test "x$gc_ok" = "xyes" && test "x$cross_compiling" = "xno" ; then
+dnl 	AC_MSG_CHECKING([libgc version 6.4+])
+dnl 	AC_RUN_IFELSE(
+dnl 		[AC_LANG_SOURCE([[
+dnl 			#ifdef HAVE_GC_GC_H
+dnl 			# include <gc/gc.h>
+dnl 			#else
+dnl 			# include <gc.h>
+dnl 			#endif
+dnl 			#include <stdio.h>
+dnl 			extern unsigned GC_version;
+dnl 			int main(void){
+dnl 				unsigned min = ((6 << 16) | (4 << 8) | 0);
+dnl 				printf("%d.%d.%d ",GC_version >> 16, (GC_version >> 8) & 0xFF, GC_version & 0xFF);
+dnl 				if (GC_version>=min) return 0;
+dnl 				return 1;
+dnl 			}]])],
+dnl 		[gc_ok=yes],
+dnl 		[gc_ok=no]
+dnl 	)
+dnl 	AC_MSG_RESULT([$gc_ok])
+dnl fi
 if test "x$gc_ok" != "xyes"; then
 	AC_MSG_ERROR([libgc (the Boehm Conservative Collector) 6.4+, is needed to compile inkscape -- http://www.hpl.hp.com/personal/Hans_Boehm/gc])
 fi
@@ -593,6 +593,11 @@
 	AC_DEFINE(POPPLER_EVEN_NEWER_COLOR_SPACE_API, 1, [Use even newer color space API from Poppler >= 0.26.0])
 fi
 
+PKG_CHECK_MODULES(POPPLER_EVEN_NEWER_NEW_COLOR_SPACE_API, poppler >= 0.29.0, popplernewernewcolorspaceapi=yes, popplernewernewcolorspaceapi=no)
+if test "x$popplernewernewcolorspaceapi" = "xyes"; then
+	AC_DEFINE(POPPLER_EVEN_NEWER_NEW_COLOR_SPACE_API, 1, [Use even newer new color space API from Poppler >= 0.29.0])
+fi
+
 # Poppler's b604a008 commit changes this
 AC_MSG_CHECKING([whether Poppler's GfxPatch no longer uses GfxColor])
 popplergfxcolor="no"
diff -Nurd inkscape-0.48.5.orig/src/document.h inkscape-0.48.5/src/document.h
--- inkscape-0.48.5.orig/src/document.h	2013-06-11 19:09:06.000000000 -0400
+++ inkscape-0.48.5/src/document.h	2022-01-07 15:38:48.000000000 -0500
@@ -19,7 +19,7 @@
 #include <gtk/gtk.h>
 #include <stddef.h>
 #include <sigc++/sigc++.h>
-#include <sigc++/class_slot.h>
+//#include <sigc++/class_slot.h>
 
 #include "libcroco/cr-cascade.h"
 #include <2geom/forward.h>
diff -Nurd -x'*~' inkscape-0.48.5.orig/src/ege-select-one-action.cpp inkscape-0.48.5/src/ege-select-one-action.cpp
--- inkscape-0.48.5.orig/src/ege-select-one-action.cpp	2011-07-14 17:43:01.000000000 -0400
+++ inkscape-0.48.5/src/ege-select-one-action.cpp	2014-07-09 23:48:25.000000000 -0400
@@ -757,7 +757,7 @@
             GtkWidget *normal = (act->private_data->selectionMode == SELECTION_OPEN) ?
                 gtk_combo_box_entry_new_with_model( act->private_data->model, act->private_data->labelColumn ) :
                 gtk_combo_box_new_with_model( act->private_data->model );
-            if ((act->private_data->selectionMode == SELECTION_OPEN)) {
+            if (act->private_data->selectionMode == SELECTION_OPEN) {
                 GtkWidget *child = gtk_bin_get_child( GTK_BIN(normal) );
                 if (GTK_IS_ENTRY(child)) {
                     int maxUsed = scan_max_width( act->private_data->model, act->private_data->labelColumn );
diff -Nurd inkscape-0.48.5.orig/src/extension/internal/pdfinput/pdf-parser.cpp inkscape-0.48.5/src/extension/internal/pdfinput/pdf-parser.cpp
--- inkscape-0.48.5.orig/src/extension/internal/pdfinput/pdf-parser.cpp	2014-06-09 09:24:41.000000000 -0400
+++ inkscape-0.48.5/src/extension/internal/pdfinput/pdf-parser.cpp	2022-01-07 15:38:48.000000000 -0500
@@ -860,7 +860,9 @@
 	  blendingColorSpace = NULL;
 	  isolated = knockout = gFalse;
 	  if (!obj4.dictLookup(const_cast<char*>("CS"), &obj5)->isNull()) {
-#if defined(POPPLER_EVEN_NEWER_COLOR_SPACE_API)
+#if defined(POPPLER_EVEN_NEWER_NEW_COLOR_SPACE_API)
+	    blendingColorSpace = GfxColorSpace::parse(NULL, &obj5, NULL, NULL);
+#elif defined(POPPLER_EVEN_NEWER_COLOR_SPACE_API)
 	    blendingColorSpace = GfxColorSpace::parse(&obj5, NULL, NULL);
 #elif defined(POPPLER_NEW_COLOR_SPACE_API) || defined(POPPLER_NEW_ERRORAPI)
 	    blendingColorSpace = GfxColorSpace::parse(&obj5, NULL);
@@ -1085,7 +1087,13 @@
 
   state->setFillPattern(NULL);
   res->lookupColorSpace(args[0].getName(), &obj);
-#if defined(POPPLER_EVEN_NEWER_COLOR_SPACE_API)
+#if defined(POPPLER_EVEN_NEWER_NEW_COLOR_SPACE_API)
+  if (obj.isNull()) {
+    colorSpace = GfxColorSpace::parse(NULL, &args[0], NULL, NULL);
+  } else {
+    colorSpace = GfxColorSpace::parse(NULL, &obj, NULL, NULL);
+  }
+#elif defined(POPPLER_EVEN_NEWER_COLOR_SPACE_API)
   if (obj.isNull()) {
     colorSpace = GfxColorSpace::parse(&args[0], NULL, NULL);
   } else {
@@ -1126,7 +1134,13 @@
 
   state->setStrokePattern(NULL);
   res->lookupColorSpace(args[0].getName(), &obj);
-#if defined(POPPLER_EVEN_NEWER_COLOR_SPACE_API)
+#if defined(POPPLER_EVEN_NEWER_NEW_COLOR_SPACE_API)
+  if (obj.isNull()) {
+    colorSpace = GfxColorSpace::parse(NULL, &args[0], NULL, NULL);
+  } else {
+    colorSpace = GfxColorSpace::parse(NULL, &obj, NULL, NULL);
+  }
+#elif defined(POPPLER_EVEN_NEWER_COLOR_SPACE_API)
   if (obj.isNull()) {
     colorSpace = GfxColorSpace::parse(&args[0], NULL, NULL);
   } else {
@@ -1740,6 +1754,10 @@
   if (!(shading = res->lookupShading(args[0].getName(), NULL, NULL))) {
     return;
   }
+#elif defined(POPPLER_EVEN_NEWER_COLOR_SPACE_API)
+  if (!(shading = res->lookupShading(args[0].getName(), NULL, NULL))) {
+    return;
+  }
 #elif defined(POPPLER_NEW_COLOR_SPACE_API) || defined(POPPLER_NEW_ERRORAPI)
   if (!(shading = res->lookupShading(args[0].getName(), NULL))) {
     return;
@@ -2756,7 +2774,9 @@
       }
     }
     if (!obj1.isNull()) {
-#if defined(POPPLER_EVEN_NEWER_COLOR_SPACE_API)
+#if defined(POPPLER_EVEN_NEWER_NEW_COLOR_SPACE_API)
+            colorSpace = GfxColorSpace::parse(NULL, &obj1, NULL, NULL);
+#elif defined(POPPLER_EVEN_NEWER_COLOR_SPACE_API)
             colorSpace = GfxColorSpace::parse(&obj1, NULL, NULL);
 #elif defined(POPPLER_NEW_COLOR_SPACE_API) || defined(POPPLER_NEW_ERRORAPI)
       colorSpace = GfxColorSpace::parse(&obj1, NULL);
@@ -2847,7 +2867,9 @@
 	  obj2.free();
 	}
       }
-#if defined(POPPLER_EVEN_NEWER_COLOR_SPACE_API)
+#if defined(POPPLER_EVEN_NEWER_NEW_COLOR_SPACE_API)
+            GfxColorSpace *maskColorSpace = GfxColorSpace::parse(NULL, &obj1, NULL, NULL);
+#elif defined(POPPLER_EVEN_NEWER_COLOR_SPACE_API)
             GfxColorSpace *maskColorSpace = GfxColorSpace::parse(&obj1, NULL, NULL);
 #elif defined(POPPLER_NEW_COLOR_SPACE_API) || defined(POPPLER_NEW_ERRORAPI)
       maskColorSpace = GfxColorSpace::parse(&obj1, NULL);
@@ -3040,7 +3062,9 @@
     if (obj1.dictLookup(const_cast<char*>("S"), &obj2)->isName(const_cast<char*>("Transparency"))) {
       transpGroup = gTrue;
       if (!obj1.dictLookup(const_cast<char*>("CS"), &obj3)->isNull()) {
-#if defined(POPPLER_EVEN_NEWER_COLOR_SPACE_API)
+#if defined(POPPLER_EVEN_NEWER_NEW_COLOR_SPACE_API)
+	blendingColorSpace = GfxColorSpace::parse(NULL, &obj3, NULL, NULL);
+#elif defined(POPPLER_EVEN_NEWER_COLOR_SPACE_API)
 	blendingColorSpace = GfxColorSpace::parse(&obj3, NULL, NULL);
 #elif defined(POPPLER_NEW_COLOR_SPACE_API) || defined(POPPLER_NEW_ERRORAPI)
 	blendingColorSpace = GfxColorSpace::parse(&obj3, NULL);
diff -Nurd -x'*~' inkscape-0.48.5.orig/src/extension/system.cpp inkscape-0.48.5/src/extension/system.cpp
--- inkscape-0.48.5.orig/src/extension/system.cpp	2014-02-27 22:16:22.000000000 -0500
+++ inkscape-0.48.5/src/extension/system.cpp	2014-07-10 00:35:54.000000000 -0400
@@ -612,10 +612,14 @@
         case FILE_SAVE_METHOD_INKSCAPE_SVG:
             extension = SP_MODULE_KEY_OUTPUT_SVG_INKSCAPE;
             break;
+        case FILE_SAVE_METHOD_EXPORT:
+            /// \todo no default extension set for Export? defaults to SP_MODULE_KEY_OUTPUT_SVG_INKSCAPE is ok?
+            break;
     }
 
-    if(extension.empty())
+    if(extension.empty()) {
         extension = SP_MODULE_KEY_OUTPUT_SVG_INKSCAPE;
+    }
 
     return extension;
 }
@@ -649,13 +653,19 @@
                 // leave this as a choice to the user.
                 path = prefs->getString("/dialogs/save_as/path");
             }
+            break;
+        case FILE_SAVE_METHOD_EXPORT:
+            /// \todo no default path set for Export? 
+            // defaults to g_get_home_dir()
+            break;
     }
 
-    if(path.empty())
+    if(path.empty()) {
         path = g_get_home_dir(); // Is this the most sensible solution? Note that we should avoid
                                  // g_get_current_dir because this leads to problems on OS X where
                                  // Inkscape opens the dialog inside application bundle when it is
                                  // invoked for the first teim.
+    }
 
     return path;
 }
@@ -672,6 +682,7 @@
             prefs->setString("/dialogs/save_copy/default", extension);
             break;
         case FILE_SAVE_METHOD_INKSCAPE_SVG:
+        case FILE_SAVE_METHOD_EXPORT:
             // do nothing
             break;
     }
@@ -689,6 +700,7 @@
             prefs->setString("/dialogs/save_copy/path", path);
             break;
         case FILE_SAVE_METHOD_INKSCAPE_SVG:
+        case FILE_SAVE_METHOD_EXPORT:
             // do nothing
             break;
     }
diff -Nurd -x'*~' inkscape-0.48.5.orig/src/io/inkjar.cpp inkscape-0.48.5/src/io/inkjar.cpp
--- inkscape-0.48.5.orig/src/io/inkjar.cpp	2014-02-27 22:16:22.000000000 -0500
+++ inkscape-0.48.5/src/io/inkjar.cpp	2017-09-21 00:09:49.000000000 -0400
@@ -107,7 +107,7 @@
 
 bool JarFile::open()
 {
-    if ((fd = fopen(_filename, O_RDONLY)) < 0) {
+    if (!(fd = fopen(_filename, "r"))) {
 	fprintf(stderr, "open failed.\n");
 	return false;
     }
@@ -119,7 +119,7 @@
 
 bool JarFile::close()
 {
-    if (fd >= 0 && !fclose(fd)) {
+    if (fd && !fclose(fd)) {
 	inflateEnd(&_zs);
 	return true;
     }
diff -Nurd -x'*~' inkscape-0.48.5.orig/src/libavoid/connector.cpp inkscape-0.48.5/src/libavoid/connector.cpp
--- inkscape-0.48.5.orig/src/libavoid/connector.cpp	2010-09-01 15:56:34.000000000 -0400
+++ inkscape-0.48.5/src/libavoid/connector.cpp	2017-09-21 00:09:49.000000000 -0400
@@ -878,7 +878,7 @@
             {
                 // Check for consecutive points on opposite 
                 // corners of two touching shapes.
-                COLA_ASSERT(abs(i->pathNext->id.objID - i->id.objID) != 2);
+                COLA_ASSERT(fabs(i->pathNext->id.objID - i->id.objID) != 2);
             }
         }
     }
diff -Nurd -x'*~' inkscape-0.48.5.orig/src/libavoid/vpsc.cpp inkscape-0.48.5/src/libavoid/vpsc.cpp
--- inkscape-0.48.5.orig/src/libavoid/vpsc.cpp	2010-09-01 15:56:34.000000000 -0400
+++ inkscape-0.48.5/src/libavoid/vpsc.cpp	2014-07-10 00:51:01.000000000 -0400
@@ -422,7 +422,7 @@
     // downwards.  There is always at least 1 element in the
     // vector because of search.
     // TODO check this logic and add parens:
-    if((deletePoint != end) && ((minSlack < ZERO_UPPERBOUND) && !v->active || v->equality)) {
+    if((deletePoint != end) && (((minSlack < ZERO_UPPERBOUND) && !v->active) || v->equality)) {
         *deletePoint = l[l.size()-1];
         l.resize(l.size()-1);
     }
diff -Nurd -x'*~' inkscape-0.48.5.orig/src/libcola/gradient_projection.cpp inkscape-0.48.5/src/libcola/gradient_projection.cpp
--- inkscape-0.48.5.orig/src/libcola/gradient_projection.cpp	2010-09-01 15:56:34.000000000 -0400
+++ inkscape-0.48.5/src/libcola/gradient_projection.cpp	2017-09-21 00:09:49.000000000 -0400
@@ -6,7 +6,7 @@
  * Tim Dwyer, 2006
  **********************************************************/
 
-#include <math.h>
+#include <cmath>
 #include <stdlib.h>
 #include <time.h>
 #include <stdio.h>
diff -Nurd -x'*~' inkscape-0.48.5.orig/src/libcola/straightener.cpp inkscape-0.48.5/src/libcola/straightener.cpp
--- inkscape-0.48.5.orig/src/libcola/straightener.cpp	2010-09-01 15:56:34.000000000 -0400
+++ inkscape-0.48.5/src/libcola/straightener.cpp	2014-07-10 00:55:47.000000000 -0400
@@ -108,7 +108,7 @@
     int compare_events(const void *a, const void *b) {
         Event *ea=*(Event**)a;
         Event *eb=*(Event**)b;
-        if(ea->v!=NULL&&ea->v==eb->v||ea->e!=NULL&&ea->e==eb->e) {
+        if((ea->v!=NULL&&ea->v==eb->v)||(ea->e!=NULL&&ea->e==eb->e)) {
             // when comparing opening and closing from object
             // open must come first
             if(ea->type==Open) return -1;
@@ -263,8 +263,8 @@
                         // node is on an edge
                         Edge *edge=(*i)->edge;
                         if(!edge->isEnd(v->id)
-                                &&(l!=NULL&&!edge->isEnd(l->id)||l==NULL)
-                                &&(r!=NULL&&!edge->isEnd(r->id)||r==NULL)) {
+			        &&((l!=NULL&&!edge->isEnd(l->id))||l==NULL)
+			        &&((r!=NULL&&!edge->isEnd(r->id))||r==NULL)) {
                             if(lastNode!=NULL) {
                                 //printf("  Rule A: Constraint: v%d +g <= v%d\n",lastNode->id,(*i)->id);
                                 cs.push_back(createConstraint(lastNode,*i,dim));
diff -Nurd -x'*~' inkscape-0.48.5.orig/src/libcroco/cr-parser.c inkscape-0.48.5/src/libcroco/cr-parser.c
--- inkscape-0.48.5.orig/src/libcroco/cr-parser.c	2010-09-01 15:56:34.000000000 -0400
+++ inkscape-0.48.5/src/libcroco/cr-parser.c	2014-07-10 00:49:43.000000000 -0400
@@ -2408,14 +2408,14 @@
                                                  import_string,
                                                  NULL, &location) ;
 
-                                        if ((PRIVATE (a_this)->sac_handler->resolve_import == TRUE)) {
+                                        if (PRIVATE (a_this)->sac_handler->resolve_import == TRUE) {
                                                 /*
                                                  *TODO: resolve the
                                                  *import rule.
                                                  */
                                         }
 
-                                        if ((PRIVATE (a_this)->sac_handler->import_style_result)) {
+                                        if (PRIVATE (a_this)->sac_handler->import_style_result) {
                                                 PRIVATE (a_this)->sac_handler->import_style_result
                                                         (PRIVATE (a_this)->sac_handler,
                                                          media_list, import_string,
diff -Nurd -x'*~' inkscape-0.48.5.orig/src/libvpsc/block.cpp inkscape-0.48.5/src/libvpsc/block.cpp
--- inkscape-0.48.5.orig/src/libvpsc/block.cpp	2010-09-01 15:56:34.000000000 -0400
+++ inkscape-0.48.5/src/libvpsc/block.cpp	2014-07-10 00:56:40.000000000 -0400
@@ -72,7 +72,7 @@
 		for (Cit j=cs->begin();j!=cs->end();++j) {
 			Constraint *c=*j;
 			c->timeStamp=blockTimeCtr;
-			if (c->left->block != this && in || c->right->block != this && !in) {
+			if ((c->left->block != this && in) || (c->right->block != this && !in)) {
 				h->insert(c);
 			}
 		}
diff -Nurd -x'*~' inkscape-0.48.5.orig/src/libvpsc/generate-constraints.cpp inkscape-0.48.5/src/libvpsc/generate-constraints.cpp
--- inkscape-0.48.5.orig/src/libvpsc/generate-constraints.cpp	2010-09-01 15:56:34.000000000 -0400
+++ inkscape-0.48.5/src/libvpsc/generate-constraints.cpp	2017-09-21 00:09:49.000000000 -0400
@@ -13,6 +13,7 @@
 #include <set>
 #include <cassert>
 #include <cstdlib>
+#include <cmath>
 #include "generate-constraints.h"
 #include "constraint.h"
 
diff -Nurd -x'*~' inkscape-0.48.5.orig/src/livarot/ShapeMisc.cpp inkscape-0.48.5/src/livarot/ShapeMisc.cpp
--- inkscape-0.48.5.orig/src/livarot/ShapeMisc.cpp	2010-09-01 15:56:34.000000000 -0400
+++ inkscape-0.48.5/src/livarot/ShapeMisc.cpp	2014-07-10 00:58:32.000000000 -0400
@@ -406,7 +406,7 @@
     if (startBord >= 0)
     {
       // parcours en profondeur pour mettre les leF et riF a leurs valeurs
-      swdData[startBord].misc = (void *) (1+nbNest);
+      swdData[startBord].misc = (void *)(intptr_t)(1 + nbNest);
       //printf("part de %d\n",startBord);
       int curBord = startBord;
       bool back = false;
@@ -507,7 +507,7 @@
               startBord=nb;
             }
           }
-          swdData[nb].misc = (void *) (1+nbNest);
+          swdData[nb].misc = (void *)(intptr_t)(1 + nbNest);
           swdData[nb].ind = searchInd++;
           swdData[nb].precParc = curBord;
           swdData[curBord].suivParc = nb;
diff -Nurd -x'*~' inkscape-0.48.5.orig/src/live_effects/lpe-ruler.cpp inkscape-0.48.5/src/live_effects/lpe-ruler.cpp
--- inkscape-0.48.5.orig/src/live_effects/lpe-ruler.cpp	2010-09-01 15:56:34.000000000 -0400
+++ inkscape-0.48.5/src/live_effects/lpe-ruler.cpp	2014-07-10 00:17:57.000000000 -0400
@@ -152,10 +152,10 @@
             t_cuts.push_back(roots[v][0]);
     }
     //draw the marks
-    for (unsigned i=0; i<t_cuts.size(); i++){
+    for (size_t i = 0; i < t_cuts.size(); i++) {
         Point A = pwd2_in(t_cuts[i]);
         Point n = rot90(unit_vector(speed(t_cuts[i])))*sign;
-        if ((i % mminterval) == i_shift) {
+        if (static_cast<int>(i % mminterval) == i_shift) {
             output.concat (ruler_mark(A, n, MARK_MAJOR));
         } else {
             output.concat (ruler_mark(A, n, MARK_MINOR));
diff -Nurd -x'*~' inkscape-0.48.5.orig/src/live_effects/spiro.cpp inkscape-0.48.5/src/live_effects/spiro.cpp
--- inkscape-0.48.5.orig/src/live_effects/spiro.cpp	2010-09-01 15:56:34.000000000 -0400
+++ inkscape-0.48.5/src/live_effects/spiro.cpp	2014-07-10 00:14:34.000000000 -0400
@@ -823,7 +823,7 @@
     double bend = fabs(ks[0]) + fabs(.5 * ks[1]) + fabs(.125 * ks[2]) +
 	fabs((1./48) * ks[3]);
 
-    if (!bend > 1e-8) {
+    if (!(bend > 1e-8)) {
 	bezctx_lineto(bc, x1, y1);
     } else {
 	double seg_ch = hypot(x1 - x0, y1 - y0);
diff -Nurd -x'*~' inkscape-0.48.5.orig/src/main.cpp inkscape-0.48.5/src/main.cpp
--- inkscape-0.48.5.orig/src/main.cpp	2014-04-15 14:07:51.000000000 -0400
+++ inkscape-0.48.5/src/main.cpp	2014-07-10 00:03:51.000000000 -0400
@@ -1343,7 +1343,7 @@
     if (sp_export_area) {
         /* Try to parse area (given in SVG pixels) */
         gdouble x0,y0,x1,y1;
-        if (!sscanf(sp_export_area, "%lg:%lg:%lg:%lg", &x0, &y0, &x1, &y1) == 4) {
+        if (sscanf(sp_export_area, "%lg:%lg:%lg:%lg", &x0, &y0, &x1, &y1) != 4) {
             g_warning("Cannot parse export area '%s'; use 'x0:y0:x1:y1'. Nothing exported.", sp_export_area);
             return;
         }
diff -Nurd -x'*~' inkscape-0.48.5.orig/src/object-snapper.cpp inkscape-0.48.5/src/object-snapper.cpp
--- inkscape-0.48.5.orig/src/object-snapper.cpp	2010-09-01 15:56:34.000000000 -0400
+++ inkscape-0.48.5/src/object-snapper.cpp	2018-07-12 23:25:23.000000000 -0400
@@ -561,7 +561,7 @@
                         // When it's within snapping range, then return it
                         // (within snapping range == between p_min_on_cl and p_max_on_cl == 0 < ta < 1)
                         Geom::Coord dist = Geom::L2(_snapmanager->getDesktop()->dt2doc(p_proj_on_cl) - p_inters);
-                        SnappedPoint s(_snapmanager->getDesktop()->doc2dt(p_inters), p.getSourceType(), p.getSourceNum(), k->target_type, dist, getSnapperTolerance(), getSnapperAlwaysSnap(), true, k->target_bbox);
+                        SnappedPoint s(_snapmanager->getDesktop()->doc2dt(p_inters), p.getSourceType(), p.getSourceNum(), k->target_type, dist, getSnapperTolerance(), getSnapperAlwaysSnap(), true, false, k->target_bbox);
                         sc.points.push_back(s);
                     }
                 }
diff -Nurd -x'*~' inkscape-0.48.5.orig/src/sp-gradient-spread.h inkscape-0.48.5/src/sp-gradient-spread.h
--- inkscape-0.48.5.orig/src/sp-gradient-spread.h	2010-09-01 15:56:34.000000000 -0400
+++ inkscape-0.48.5/src/sp-gradient-spread.h	2014-07-10 00:21:22.000000000 -0400
@@ -4,7 +4,8 @@
 enum SPGradientSpread {
     SP_GRADIENT_SPREAD_PAD,
     SP_GRADIENT_SPREAD_REFLECT,
-    SP_GRADIENT_SPREAD_REPEAT
+    SP_GRADIENT_SPREAD_REPEAT,
+    SP_GRADIENT_SPREAD_UNDEFINED = INT_MAX
 };
 
 
diff -Nurd -x'*~' inkscape-0.48.5.orig/src/ui/dialog/layer-properties.cpp inkscape-0.48.5/src/ui/dialog/layer-properties.cpp
--- inkscape-0.48.5.orig/src/ui/dialog/layer-properties.cpp	2010-09-01 15:56:34.000000000 -0400
+++ inkscape-0.48.5/src/ui/dialog/layer-properties.cpp	2019-10-23 09:58:29.000000000 -0400
@@ -119,7 +119,7 @@
     destroy_();
     Glib::signal_idle().connect(
         sigc::bind_return(
-            sigc::bind(sigc::ptr_fun(&::operator delete), this),
+            sigc::bind(sigc::ptr_fun<void*, void>(&::operator delete), this),
             false 
         )
     );
diff -Nurd -x'*~' inkscape-0.48.5.orig/src/ui/widget/spin-slider.cpp inkscape-0.48.5/src/ui/widget/spin-slider.cpp
--- inkscape-0.48.5.orig/src/ui/widget/spin-slider.cpp	2012-01-31 19:26:45.000000000 -0500
+++ inkscape-0.48.5/src/ui/widget/spin-slider.cpp	2014-07-10 00:43:15.000000000 -0400
@@ -152,7 +152,7 @@
         gchar** toks = g_strsplit(val, " ", 2);
 
         if(toks) {
-            double v1, v2;
+            double v1 = 0.0, v2 = 0.0;
             if(toks[0])
                 v1 = v2 = Glib::Ascii::strtod(toks[0]);
             if(toks[1])
diff -Nurd -x'*~' inkscape-0.48.5.orig/src/ui/widget/style-swatch.cpp inkscape-0.48.5/src/ui/widget/style-swatch.cpp
--- inkscape-0.48.5.orig/src/ui/widget/style-swatch.cpp	2010-09-01 15:56:34.000000000 -0400
+++ inkscape-0.48.5/src/ui/widget/style-swatch.cpp	2014-07-10 00:45:51.000000000 -0400
@@ -105,13 +105,13 @@
 
 StyleSwatch::StyleSwatch(SPCSSAttr *css, gchar const *main_tip)
     :
-      _desktop(NULL),
-      _verb_t(NULL),
-      _css(NULL),
-      _tool_obs(NULL),
-      _style_obs(NULL),
+      _desktop(0),
+      _verb_t(0),
+      _css(0),
+      _tool_obs(0),
+      _style_obs(0),
       _table(2, 6),
-      _sw_unit(NULL),
+      _sw_unit(0),
       _tooltips ()
 {
     _label[SS_FILL].set_markup(_("Fill:"));
diff -Nurd -x'*~' inkscape-0.48.5.orig/src/widgets/gradient-toolbar.cpp inkscape-0.48.5/src/widgets/gradient-toolbar.cpp
--- inkscape-0.48.5.orig/src/widgets/gradient-toolbar.cpp	2010-09-01 15:56:34.000000000 -0400
+++ inkscape-0.48.5/src/widgets/gradient-toolbar.cpp	2014-07-10 01:00:58.000000000 -0400
@@ -296,7 +296,7 @@
                 }
             }
             if (spread != spr_selected) {
-                if (spr_selected != INT_MAX) {
+                if (spr_selected != SP_GRADIENT_SPREAD_UNDEFINED) {
                     spr_multi = true;
                 } else {
                     spr_selected = spread;
@@ -329,7 +329,7 @@
                     }
                 }
                 if (spread != spr_selected) {
-                    if (spr_selected != INT_MAX) {
+                    if (spr_selected != SP_GRADIENT_SPREAD_UNDEFINED) {
                         spr_multi = true;
                     } else {
                         spr_selected = spread;
@@ -355,7 +355,7 @@
                     }
                 }
                 if (spread != spr_selected) {
-                    if (spr_selected != INT_MAX) {
+                    if (spr_selected != SP_GRADIENT_SPREAD_UNDEFINED) {
                         spr_multi = true;
                     } else {
                         spr_selected = spread;
diff -Nurd -x'*~' inkscape-0.48.5.orig/src/widgets/sp-attribute-widget.cpp inkscape-0.48.5/src/widgets/sp-attribute-widget.cpp
--- inkscape-0.48.5.orig/src/widgets/sp-attribute-widget.cpp	2011-07-14 17:43:01.000000000 -0400
+++ inkscape-0.48.5/src/widgets/sp-attribute-widget.cpp	2014-07-10 00:24:59.000000000 -0400
@@ -310,7 +310,7 @@
                                       SPAttributeWidget *spaw )
 {
 
-    if (flags && SP_OBJECT_MODIFIED_FLAG) {
+    if (flags & SP_OBJECT_MODIFIED_FLAG) {
 
         const gchar *val, *text;
         val = SP_OBJECT_REPR (spaw->src.object)->attribute(spaw->attribute);
@@ -710,7 +710,7 @@
                                      guint flags,
                                      SPAttributeTable *spat )
 {
-    if (flags && SP_OBJECT_MODIFIED_FLAG)
+    if (flags & SP_OBJECT_MODIFIED_FLAG)
     {
         gint i;
         for (i = 0; i < spat->num_attr; i++) {
