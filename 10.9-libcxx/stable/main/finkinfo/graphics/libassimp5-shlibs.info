Package: libassimp5-shlibs
Version: 5.2.3
Revision: 1
Description: Open Asset Import library for 3d models
License: OSI-Approved
Maintainer: None <fink-devel@lists.sourceforge.net>

Source: https://github.com/assimp/assimp/archive/v%v.tar.gz
Source-Checksum: SHA256(b20fc41af171f6d8f1f45d4621f18e6934ab7264e71c37cd72fd9832509af2a8)
SourceRename: assimp-%v.tar.gz
SourceDirectory: assimp-%v

# zlib search includes looking for zziplib13-dev::zzip-zlib-config, but ends up using system-zlib
BuildDepends: <<
	cmake,
	fink-package-precedence,
	pkgconfig
<<
PatchFile: %n.patch
PatchFile-MD5: 7b5d525ad08dceddc68dc399ccd64a62
GCC: 4.0
CompileScript: <<
#!/bin/sh -ev
	mkdir finkbuild
	pushd finkbuild
	cmake \
		-DCMAKE_INSTALL_PREFIX="%p" \
		-DCMAKE_INSTALL_NAME_DIR="%p/lib" \
		-DCMAKE_CXX_FLAGS="-MD" \
		-DASSIMP_BUILD_ASSIMP_TOOLS:BOOL=ON \
		-DASSIMP_BUILD_TESTS:BOOL=ON \
		-LAH \
		..
	make VERBOSE=1
	popd

	# can't use more-standard '\.d' because have some bindings
	# source/templates that use that extension
	fink-package-precedence --depfile-ext='\.cpp.*\.d','\.cc.*\.d' --prohibit-bdep=libassimp5-dev .
<<
InfoTest: <<
	TestScript: cd finkbuild; bin/unit || exit 2
<<

InstallScript: <<
#!/bin/sh -ev
	cd finkbuild
	make install DESTDIR=%d
<<
Shlibs: %p/lib/libassimp.5.dylib 5.0.0 %n (>= 5.2.3-1)
DocFiles: CHANGES CREDITS LICENSE Readme.md

SplitOff: <<
	Package: libassimp5-dev
	Depends: <<
		%N (= %v-%r)
	<<
	BuildDependsOnly: true
	Conflicts: <<
		libassimp,
		libassimp4-dev,
		libassimp5-dev,
		libassimp6-dev
	<<
	Replaces: <<
		libassimp,
		libassimp4-dev,
		libassimp5-dev,
		libassimp6-dev
	<<
	Files: <<
		bin
		include
		lib/cmake
		lib/libassimp.dylib
		lib/pkgconfig
	<<
	DocFiles: CHANGES CREDITS LICENSE Readme.md
<<
Homepage: https://www.assimp.org/
DescDetail: <<
The Asset-Importer-Lib (in short assimp) is a library to load and
process geometric scenes from various 3D-Dataformats. It is mostly
tailored at typical game scenarios by supporting a node hierarchy,
static or skinned meshes, materials, bone animations and potential
texture data. But also some 3D-printing- and CAD-format are supported.
<<
