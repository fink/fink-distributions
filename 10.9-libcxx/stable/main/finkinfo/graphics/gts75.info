Package: gts75
Version: 0.7.6
Revision: 3
Description: GNU triangulated surface library
Source: mirror:sourceforge:gts/gts-%v.tar.gz
DocFiles: AUTHORS COPYING ChangeLog NEWS README THANKS TODO
Maintainer: Daniel Macks <dmacks@netspace.org>
HomePage: http://gts.sourceforge.net/
License: LGPL
BuildDepends: <<
	fink-package-precedence,
	glib2-dev (>= 2.22.0-1),
	netpbm11,
	pkgconfig (>= 0.23)
<<
Depends: %n-shlibs (= %v-%r)
Conflicts: gts
Replaces: gts
BuildDependsOnly: True
Source-Checksum: SHA256(059c3e13e3e3b796d775ec9f96abdce8f2b3b5144df8514eda0cc12e13e8b81e)
PatchScript: perl -pi -e 's/-version-info/-no-undefined -version-info/' src/Makefile.in
ConfigureParams: --enable-dependency-tracking --disable-static PKG_CONFIG_PATH="%p/lib/glib-2.0/pkgconfig-strict:$PKG_CONFIG_PATH"
CompileScript: <<
	%{default_script}
	fink-package-precedence --prohibit-bdep=%n .
<<
SplitOff: <<
    Package: %N-shlibs
    Depends: glib2-shlibs (>= 2.20.0-1)
    Files: lib/libgts-0.7.5.*
    Shlibs: %p/lib/libgts-0.7.5.dylib 6.0.0 %n (>= 0.7.6-1)
    DocFiles: AUTHORS COPYING ChangeLog NEWS README THANKS TODO
<<
SplitOff2: <<
    Package: gts-bin
    Depends: <<
	%N-shlibs (>= %v-%r),
	glib2-shlibs (>= 2.22.0-1),
	netpbm11-shlibs
    <<
    Files: <<
        bin/delaunay
	bin/gts2dxf
	bin/gts2oogl
	bin/gts2stl
	bin/gtscheck
	bin/gtscompare
	bin/gtstemplate
	bin/stl2gts
	bin/transform
	bin/happrox
    <<
    DocFiles: AUTHORS COPYING ChangeLog NEWS README THANKS TODO
<<
DescDetail: <<
    GTS stands for the GNU Triangulated Surface Library. It is an
    Open Source Free Software Library intended to provide a set of
    useful functions to deal with 3D surfaces meshed with interconnected
    triangles. The source code is available free of charge under
    the Free Software LGPL license.

    The code is written entirely in C with an object-oriented
    approach based mostly on the design of GTK+. Careful attention
    is paid to performance related issues as the initial goal of
    GTS is to provide a simple and efficient library to scientists
    dealing with 3D computational surface meshes.

    A brief summary of its main features:
	* Simple object-oriented structure giving easy access to
	    topological properties.
	* 2D dynamic Delaunay and constrained Delaunay triangulations.
	* Robust geometric predicates (orientation, in circle) using
	    fast adaptive floating point arithmetic (adapted from the
	    fine work of Jonathan R. Shewchuk).
	* Robust set operations on surfaces (union, intersection,
	    difference).
	* Surface refinement and coarsening (multiresolution models).
	* Dynamic view-independent continuous level-of-detail.
	* Preliminary support for view-dependent level-of-detail.
	* Bounding-boxes trees and Kd-trees for efficient point
	    location and collision/intersection detection.
	* Graph operations: traversal, graph partitioning.
	* Metric operations (area, volume, curvature ...).
	* Triangle strips generation for fast rendering.
<<
