Info2: <<
Package: lazarus%type_pkg[uitype]
Type: uitype (-aqua -cocoa -gtk2 -qt4 -qt5)
Version: 2.0.12
Revision: 1
License: GPL/LGPL
Distribution: <<
  10.9, 10.10, 10.11, 10.12, 10.13, 10.14,
  (%type_pkg[uitype] != -aqua) 10.15,
  (%type_pkg[uitype] != -aqua) 11.0,
  (%type_pkg[uitype] != -aqua) 11.1,
  (%type_pkg[uitype] != -aqua) 11.2,
  (%type_pkg[uitype] != -aqua) 11.3
<<

Recommends: fpc-doc, lazarus-doc, apple-gdb, gdb

Source: mirror:sourceforge:lazarus/lazarus-%v.tar.gz
Source-Checksum: SHA256(ba6cef7f823a2d28166229982efc926039d42313c40e22fe0c6776c13d0015b2)

SourceDirectory: lazarus

Depends: <<
  fpc (>= 3.2.2),
  fpc-sources (>= 3.2.2),
  fpc-cross-i386-darwin (>= 3.2.2),
  (%type_pkg[uitype] = -gtk2) gtk+2-shlibs,
  (%type_pkg[uitype] = -gtk2) glib2-shlibs,
  (%type_pkg[uitype] = -gtk2) cairo-shlibs,
  (%type_pkg[uitype] = -qt4)  qt4pas (>= 2.5-4),
  (%type_pkg[uitype] = -qt5)  qt5pas (>= 2.0.12)
<<
 
Builddepends: <<
  (%type_pkg[uitype] = -gtk2) gtk+2,
  (%type_pkg[uitype] = -gtk2) gtk+2-dev,
  (%type_pkg[uitype] = -gtk2) glib2-dev,
  (%type_pkg[uitype] = -gtk2) cairo,
  (%type_pkg[uitype] = -qt4)  qt4pas     (>= 2.5-4),
  (%type_pkg[uitype] = -qt4)  qt4pas-dev (>= 2.5-4)
<<

Conflicts: <<
  (%type_pkg[uitype] = -gtk2)  lazarus-lcl-gtk2,
  (%type_pkg[uitype] = -aqua)  lazarus-lcl-carbon,
  (%type_pkg[uitype] = -cocoa) lazarus-lcl-cocoa,
  (%type_pkg[uitype] = -qt4)   lazarus-lcl-qt4,
  (%type_pkg[uitype] = -qt5)   lazarus-lcl-qt5,
  lazarus-aqua, lazarus-cocoa, lazarus-gtk2, lazarus-qt4, lazarus-qt5
<<

Replaces:  <<
  (%type_pkg[uitype] = -gtk2)  lazarus-lcl-gtk2,
  (%type_pkg[uitype] = -aqua)  lazarus-lcl-carbon,
  (%type_pkg[uitype] = -cocoa) lazarus-lcl-cocoa,
  (%type_pkg[uitype] = -qt4)   lazarus-lcl-qt4,
  (%type_pkg[uitype] = -qt5)   lazarus-lcl-qt5,
  lazarus-aqua, lazarus-cocoa, lazarus-gtk2, lazarus-qt4, lazarus-qt5
<<

BuildDependsOnly: false

Patchscript: <<
#!/bin/sh -ev

  chmod 755 .

# add the fink directory tree. This might need a check in a new version
  sed -i.bak 's|1\.\.15|1\.\.16|g'                                                ide/include/unix/lazbaseconf.inc
  sed -i.tmp "s|'/usr/share/fpcsrc'|'/usr/share/fpcsrc','%p/share/fpcsrc'|g"      ide/include/unix/lazbaseconf.inc

  sed -i.tmp 's|1\.\.8|1\.\.9|g'                                                  ide/include/unix/lazbaseconf.inc
  sed -i.tmp "s|'/usr/share/lazarus',|'/usr/share/lazarus','%p/share/lazarus',|g" ide/include/unix/lazbaseconf.inc

  sed -i.tmp "s|'/etc/lazarus'|'%p/etc/lazarus'|g"                                ide/include/unix/lazbaseconf.inc

  sed -i.tmp "s|AddFilenameToList(List,'/usr/local/bin/'+GetDefaultCompilerFilename);|AddFilenameToList(List,'%p/bin/'+GetDefaultCompilerFilename); AddFilenameToList(List,'/usr/local/bin/'+GetDefaultCompilerFilename);|g"  ide/include/unix/lazbaseconf.inc

# adjust the default paths to fink paths

  if   [ "%type_raw[uitype]" == "-aqua" ]; then
    sed -i.bak 's|/usr/local/bin/_PPCARCH_|%p/bin/ppc386|g' tools/install/macosx/environmentoptions.xml
  else
    sed -i.bak 's|/usr/local/bin/_PPCARCH_|%p/bin/ppcx64|g' tools/install/macosx/environmentoptions.xml
  fi
  sed -i.tmp 's|/usr/local/share|%p/share|g'           tools/install/macosx/environmentoptions.xml
  sed -i.tmp 's|/Developer/lazarus|%p/share/lazarus|g' tools/install/macosx/environmentoptions.xml
  sed -i.tmp 's|<DebuggerFilename Value="/usr/bin/lldb"/>|<DebuggerFilename Value="/usr/bin/lldb"> <History Count="4"> <Item1 Value="/usr/bin/lldb"/> <Item2 Value="/usr/bin/gdb"/> <Item3 Value="%p/bin/fsf-gdb"/> <Item4 Value="%p/bin/gdb"/> </History> </DebuggerFilename>|g'  tools/install/macosx/environmentoptions.xml

# fix path to X11
  sed -i.tmp 's|-Fl/usr/X11R6/lib -Fl.../lib|"-Fl%p/lib -Fl%p/lib/pango-ft219/lib -Fl/opt/X11/lib"|g' ide/Makefile

# fix compilation of bigidecomponents with LCL_PLATFORM=nogui (LCLnogui)
# with osprinters.pas the line number needs to be given
  sed -i.tmp '50 s|LCLGtk2|LCLnogui}{$I cupsprinters_h.inc}{$ENDIF}{$IFDEF LCLGtk2|g' components/printers/osprinters.pas
  sed -i.tmp '87 s|LCLGtk2|LCLnogui}{$I cupsprinters.inc}{$ENDIF}{$IFDEF LCLGtk2|g' components/printers/osprinters.pas
  sed -i.tmp 's|LCLGtk2|LCLnogui}uses udlgSelectPrinter, udlgPropertiesPrinter, udlgPageSetup;{$I cupsprndialogs.inc}{$ENDIF}{$IFDEF LCLGtk2|g' components/printers/printersdlgs.pp

# some more fixes for nogui taking cocoa as a template
# this may break, as soon as cocoa gets working versions
  cd components/lclextensions/include
  mkdir nogui
  cp cocoa/* nogui/
  cd nogui
  sed -i.tmp 's|CocoaInt, CocoaGDIObjects, ||g'                                uses.inc
  sed -i.tmp 's|Cocoa Interface|NoGui Interface|g'                             delphicompat.inc
  sed -i.tmp 's|\$define HAS_GETCURRENTOBJECT|.$define HAS_GETCURRENTOBJECT|g' delphicompat.inc
  sed -i.tmp '21,27d' delphicompat.inc
  sed -i.tmp '46,68d' delphicompat.inc

  cd ../../../virtualtreeview
  mkdir units/nogui
  cp    units/cocoa/* units/nogui/

  mkdir include/intf/nogui
  cp    include/intf/cocoa/* include/intf/nogui/
<<

UseMaxBuildJobs: false

CompileScript: <<
#!/bin/sh -ev

# Yosemite fix
  if [ "$(uname -r | cut -d. -f1)" -ge 14 ]; then export MACOSX_DEPLOYMENT_TARGET=10.9 ; fi

  debug_options="-gl"
  carbon_arch="PP=ppc386 CPU_TARGET=i386 CPU_SOURCE=i386"

  AllUnits="registration lazutils codetools lcl basecomponents bigidecomponents"

# ** Start compiling lazarus

# lhelp needs bigidecomponents in addition

  if   [ "%type_raw[uitype]" == "-aqua" ]; then
    make bigide    LCL_PLATFORM=carbon OPT="$debug_options" $carbon_arch
  elif [ "%type_raw[uitype]" == "-cocoa" ]; then
    make bigide    LCL_PLATFORM=cocoa  OPT="$debug_options"
  elif [ "%type_raw[uitype]" == "-gtk2" ]; then
    make bigide    LCL_PLATFORM=gtk2   OPT="$debug_options -dHasX \
         -FfApplicationServices \
         -k-L/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib \
         -k-L/opt/X11/lib -k-L%p/lib -k-L%p/lib/pango-ft219/lib "
  elif [ "%type_raw[uitype]" == "-qt4" ]; then
    make bigide    LCL_PLATFORM=qt     OPT="$debug_options"
  elif [ "%type_raw[uitype]" == "-qt5" ]; then
    # build lazarus
    make bigide    LCL_PLATFORM=qt5 OPT="$debug_options -Ff%p/lib/qt5-mac/lib"
    install_name_tool -change Qt5Pas.framework/Versions/1/Qt5Pas %p/lib/qt5-mac/lib/Qt5Pas.framework/Versions/1/Qt5Pas lazarus
  fi

  if   [ "%type_raw[uitype]" == "-aqua" ]; then
    # 64 bit nogui units
    make $AllUnits LCL_PLATFORM=nogui  OPT="$debug_options"
  elif [[ `uname -r | cut -d. -f1` -le 14 ]]; then
    # 32 bit nogui units
    make $AllUnits LCL_PLATFORM=nogui  OPT="$debug_options" $carbon_arch
  fi
# ** Finish compiling Lazarus **
<<

InstallScript: <<
#!/bin/sh -ev

# ** Start installing Lazarus **

  install -m 755 -d %i/etc/lazarus
  install -c -m 644 %b/tools/install/macosx/environmentoptions.xml %i/etc/lazarus

  make install INSTALL_PREFIX=%i

# ** fix the symbolic links in %i/bin**

  ln -sf ../share/lazarus/lazarus      %i/bin/lazarus-ide
  ln -sf ../share/lazarus/startlazarus %i/bin/startlazarus
  ln -sf ../share/lazarus/lazbuild     %i/bin/lazbuild

# fix the symbolic links in the application bundle for the use
# with the "AppBundles:" field

  ln -sf %p/share/lazarus/lazarus      lazarus.app/Contents/MacOS/lazarus
  ln -sf %p/share/lazarus/startlazarus lazarus.app/Contents/MacOS/startlazarus

# remove the faulty app bundle in Resources
  rm -rf ../share/lazarus/lazarus.app/Contents/Resources/startlazarus.app

# enable rebuilding from within lazarus
  chmod -R a+rw %i/share/lazarus

# temorary fix of install problems
  install -d     %i/Applications
  mv lazarus.app %i/Applications/

# ** Finish installing Lazarus **
#
<<

# Create the Appliation Bundle
#AppBundles: lazarus.app

# temorary fix of install problems
PostInstScript: <<
  if ! test -e /Applications/Fink; then
    install -d -m 755 /Applications/Fink
  fi
  ln -s %p/Applications/lazarus.app /Applications/Fink/
<<

PostRmScript: rm -f /Applications/Fink/lazarus.app

# Documentation
DocFiles: docs/*.txt docs/*.pdf

Description: Free Pascal IDE

DescDetail: <<
Lazarus is an open-source development system that builds on the Free Pascal
compiler by adding an integrated development environment (IDE).  It
includes a syntax-highlighting code editor and a visual form designer, as
well as a component library that is highly compatible with Delphi's Visual
Component Library (VCL).  The Lazarus Component Library (LCL) includes
equivalents for many of the familiar VCL controls such as forms, buttons,
text boxes and so on, which are used to create applications with a
graphical user interface (GUI).

Release Notes:
  https://wiki.freepascal.org/Lazarus_2.0.0_release_notes

In case of problems, check the page about fixes for version 2.0:
  https://wiki.freepascal.org/Lazarus_2.0_fixes_branch
<<

DescUsage: <<
  Start by double click the lazarus application in /Applications/Fink
<<

DescPort: <<
Available versions of the lcl: carbon, cocoa-32bit, cocoa, gtk2, qt4, qt5,
and nogui.
Crosscompilation is available for:
  i386-win32
  x86_64-win64
  i386-wince
  arm-wince.

CPU_SOURCE is needed to build the 32bit version on 64bit systems.
Otherwise building svn2revisioninc crashes.
gtk2-64bit needs additional -FfApplicationServices
Strangly -Fl%p/lib and similar do not really work and ld complains about
missing symbols.
  -k-L/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib
needs to be before -k-L/sw/lib. Otherwise libiconv from fink might be 
taken, which has linux type symbols iconv* instead of libiconv* as set in 
the fpc rtl file /sw/share/fpcsrc/rtl/unix/cwstring.pp. If the fink 
version is taken there are linker errors about undefined symbols iconv*.
<<

Homepage: https://wiki.freepascal.org/Main_Page
Maintainer: Karl-Michael Schindler <karl-michael.schindler@web.de>
<<
