# -*- coding: ascii; tab-width: 4 -*-
Info2: <<
Package: pkgconf
Version: 1.9.4
Revision: 1
Source: https://distfiles.dereferenced.org/%n/%n-%v.tar.xz
Source-Checksum: SHA256(daccf1bbe5a30d149b556c7d2ffffeafd76d7b514e249271abdd501533c1d8ae)
BuildDepends: fink (>= 0.32), pkgconfig-common
BuildDependsOnly: false
Replaces: pkgconfig
Conflicts: pkgconfig

ConfigureParams: <<
  --with-system-libdir=/usr/lib \
  --with-system-includedir=/usr/include:/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include
<<

CompileScript: <<
  ./configure %c --with-pkg-config-dir=$(cat %p/share/pkgconfig-common/pc-path)
  make
<<

# tests require `kyua`
#InfoTest: TestScript: make check || exit 2

InstallScript: <<
  make install DESTDIR=%d
  mv %i/bin/pkgconf %i/bin/pkgconf.real
  install -m 755 %p/share/pkgconfig-common/pc-resort %i/bin/pkgconf
  ln -s pkgconf.real %i/bin/pkg-config.real
  ln -s pkgconf %i/bin/pkg-config
  rm %i/lib/libpkgconf.dylib
<<

Shlibs: %p/lib/libpkgconf.4.dylib 5.0.0 %n (>= 1.9.0-1)

DocFiles: AUTHORS COPYING NEWS README.md doc

Description: Drop-in pkg-config replacement w/o [B]Deps
DescDetail: <<
pkgconf is a program which helps to configure compiler and linker flags for
development libraries. It is similar to pkg-config from freedesktop.org.

libpkgconf is a library which provides access to most of pkgconf's
functionality, to allow other tooling such as compilers and IDEs to discover
and use libraries configured by pkgconf.
<<
DescUsage: <<
You can run 'pkgconf' directly (it's in fink's default PATH), or,
for most build systems set PKG_CONFIG=%p/bin/pkgconf in the build
environment to have it use this C implementation instead of the
Freedesktop pkg-config program.

pkgconf uses a strict "first match" search scheme to find .pc
files. The default search-path list is hardcoded into the pkgconf
binary at compile-time using data from the 'pkgconfig-common' package.
See the pkgconf manpage for env vars that can alter the default.
A dependency on 'pkgconf' (at the version where things work for you)
is the only BuildDepends needed in packages that use others' .pc
files.

Adopted from pkgconfig (>= 0.22-4), lists of -I and -L flags are re-sorted
to place all fink paths before any system (/usr or X11) paths; other paths
come first, so PKG_CONFIG_PATH should allow users to over-ride fink,
but fink always over-rides system-supplied paths). This operation is
controlled by a wrapper script supplied by the 'pkgconfig-common' package.

## using 'pkgconf' with autotools

Implementations of pkg-config, such as pkgconf, are typically used with the
PKG_CHECK_MODULES autoconf macro.  As far as we know, pkgconf is
compatible with all known variations of this macro. pkgconf detects at
runtime whether or not it was started as 'pkg-config', and if so, attempts
to set program options such that its behaviour is similar.

In terms of the autoconf macro, it is possible to specify the PKG_CONFIG
environment variable, so that you can test pkgconf without overwriting your
pkg-config binary.  Some other build systems may also respect the PKG_CONFIG
environment variable.

To set the environment variable on the Bourne or Korn shell and clones
(e.g. bash, zsh), you can run:

    $ export PKG_CONFIG=%p/bin/pkgconf
<<
Homepage: https://github.com/%n/%n
License: OSI-Approved
Maintainer: None <fink-devel@lists.sourceforge.net>
<<
