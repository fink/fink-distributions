Package: tradcpp
Version: 0.5.3
Revision: 1
Description: Traditional (K&R-style) C preprocessor
License: BSD
Maintainer: Hanspeter Niederstrasser <nieder@users.sourceforge.net>
#BuildDepends: bsdmake
Source: http://ftp.netbsd.org/pub/NetBSD/misc/dholland/%n-%v.tar.gz
Source-Checksum: SHA256(e17b9f42cf74b360d5691bc59fb53f37e41581c45b75fcd64bb965e5e2fe4c5e)
PatchScript: <<
	perl -pi -e 's|/usr/local|%p|g' config.h tradcpp.1
<<
CompileScript: <<
	cc -O2 main.c files.c directive.c eval.c macro.c output.c place.c array.c utils.c -o tradcpp
<<
InfoTest: <<
	TestScript: <<
		#!/bin/sh -ev
		pushd tests
			TESTS="t01 t02 t03 t04 t05 t06 t07 t08 t09 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t30 t31 t32 t33 t34 t35 t36 t37 t38 t39 t40"
			for T in $TESTS; do
				../tradcpp $T.c > $T.run 2>&1 || echo FAILED >> $T.run
				echo "Verifying test $T"
				diff -u $T.good $T.run > $T.diff && echo "Test $T passed" || exit 2
			done
		popd
	<<
<<
InstallScript: <<
	install -m 755 -d %i/bin %i/share/man/man1
	install -m 755 tradcpp %i/bin
	install -m 644 tradcpp.1 %i/share/man/man1
<<
DocFiles: CHANGES TODO
Homepage: http://ftp.netbsd.org/pub/NetBSD/misc/dholland/
DescDetail: <<
The tradcpp command provides a traditional K&R-style C macro
preprocessor. It is intended to be suitable for historical Unix uses of
the preprocessor, such as imake, particularly those that depend on
preservation of whitespace.
The chief ways in which traditional cpp differs from Standard C are:

* Macro arguments are expanded within quoted strings. There is no
stringize operator.
* There is no token pasting operator; tokens can be concatenated by
placing comments between them. This process is also not limited to valid
C language tokens.
* Whitespace is preserved, and in particular tabs are not expanded into
spaces. Furthermore, additional whitespace is not injected.
<<
DescUsage: <<
Packages that BuildDepend on xmkmf will most likely need to BuildDepend on 
this package as well.
<<
DescPackaging: <<
Designed to be built with bsdmake, but since we don't have it, manually
run the Makefile commands that bsdmake would.
<<
